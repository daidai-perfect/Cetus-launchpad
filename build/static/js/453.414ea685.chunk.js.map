{"version":3,"file":"static/js/453.414ea685.chunk.js","mappings":"wKAAIA,G,QAAIC,OAAOC,gBAEXC,EAAIA,CAACC,EAAGC,EAAGC,IADPC,EAACH,EAAGC,EAAGC,IAAMD,KAAKD,EAAIJ,EAAEI,EAAGC,EAAG,CAAEG,YAAY,EAAIC,cAAc,EAAIC,UAAU,EAAIC,MAAOL,IAAOF,EAAEC,GAAKC,EACxFC,CAAEH,EAAe,iBAALC,EAAgBA,EAAI,GAAKA,EAAGC,GAG7D,MAAMM,EAAI,IAAIC,EAAAA,GAAE,CACd,oIACA,0CACEC,EAAK,IAAID,EAAAA,GAAE,CACb,kIACEE,EAAI,IACR,MAAMC,EAEJC,yBAAyBZ,EAAGC,EAAGY,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GAC5C,IAAIC,EAAGC,EACP,IACE,MAAQC,eAAgBC,EAAGC,gBAAiBC,GAAMP,EAAEQ,YAAaC,GAAIC,EAAAA,EAAAA,IAAEd,IAAKe,EAAGC,IAAKC,EAAAA,EAAAA,IAAE9B,EAAGC,EAAGa,IAAKiB,EAAGC,IAAKF,EAAAA,EAAAA,IAAE9B,EAAGa,EAAEoB,MAAOjB,GAAIkB,GAAIP,EAAAA,EAAAA,IAAEE,GAAIM,GAAIR,EAAAA,EAAAA,IAAEK,GAAII,EAAIC,EAAAA,GAAAA,IAAMrC,EAAGC,GAAGqC,QAASC,EAAIF,EAAAA,GAAAA,IAAMrC,EAAGa,EAAEoB,OAAOK,QAASE,EAAIC,EAAAA,GAAAA,IAAMzC,EAAGC,GAAIyC,EAAID,EAAAA,GAAAA,IAAMzC,EAAGa,EAAEoB,OAAQU,EAAI,CACjPC,gBAAiBC,OAAOL,GACxBM,cAAeZ,EAAEa,cACjBC,mBAAoBH,OAAOH,GAC3BO,iBAAkBd,EAAEY,cACpBG,mBAAoBxB,EACpByB,eAAgBf,EAChBgB,0BAA2Bb,EAC3Bc,oBAAqBtC,EAAEuC,WACvBjC,eAAgBC,EAAEgC,WAClBC,aAAc/B,EAAE8B,WAChBE,YAAatC,EACbuC,WAAYxC,EAAEwC,WAAWH,WACzBI,aAAchD,EACdiD,WAAYjD,EACZkD,iBAAkBhC,EAClBiC,mBAAoB9B,GACnB+B,QAAUC,EAAAA,EAAAA,KAvBwD,2CAuB7CpB,GACxB,OAAOqB,KAAKC,4BAA4BH,EAAEI,KAAMvB,GAAImB,EAAEI,IACxD,CAAE,MAAO5C,GACP,GAAIyC,EAAAA,EAAAA,aAAezC,GAAI,CACrB,MAAME,EAAI,GAAuB,OAAnBL,EAAIG,EAAE6C,eAAoB,EAAShD,EAAEiD,eAAmC,OAAnBhD,EAAIE,EAAE6C,eAAoB,EAAS/C,EAAE8C,KAAKG,UAC7G,MAAM,IAAIC,MAAM,2BAA2B9C,KAC7C,CACA,MAAMF,CACR,CACF,CACAV,0BAA0BZ,EAAGC,EAAGY,GAC9B,IAAIK,EACJ,IAAIqD,EAAAA,EAAAA,GAAEtE,KAAMsE,EAAAA,EAAAA,GAAE1D,GACZ,MAAM,IAAIyD,MAAM,6BAClB,MAAMxD,EAAI0D,EAAAA,EAAAA,OAASvE,EAAEwE,qBAAqBC,gBAAgB,GAAK3D,EAAIyD,EAAAA,EAAAA,OAAS3D,EAAE4D,qBAAqBC,gBAAgB,GAAKzD,EAAI,CAAE0D,aAAaC,EAAAA,EAAAA,IAAE5E,GAAI6E,YAAa/D,EAAGgE,YAAa/D,GAC9K,IACE,MAAMI,QAAU4C,EAAAA,EAAAA,KAvCJ,mDAuCe9C,GAC3B,OAAO8D,OAAO5D,EAAE+C,KAAKc,IACvB,CAAE,MAAO7D,GACP,MAAM4C,EAAAA,EAAAA,aAAe5C,GAAK,IAAImD,MAAM,8BAAkD,OAAnBpD,EAAIC,EAAEgD,eAAoB,EAASjD,EAAEkD,cAAgBjD,CAC1H,CACF,EAMFrB,EAAEa,EAAG,+BAA+B,CAACX,EAAGC,KACtC,KAAKgF,EAAAA,EAAAA,IAAEhF,EAAEkD,gBAAkB,GAAInD,EAAEkF,mBAC/B,MAAM,IAAIZ,MAAM,4BAClB,MAAMzD,EAAIN,EAAE4E,mBAAmB,QAASnF,EAAEoF,iBAC1C,GAAiB,IAAbvE,EAAEwE,QAAgC,KAAhBxE,EAAE,GAAGwE,OACzB,MAAM,IAAIf,MAAM,2BAClB,MAAMxD,EAAI0D,EAAAA,EAAAA,OAAS3D,EAAE,GAAG,IACxB,GAAiB,KAAbC,EAAEuE,OACJ,MAAM,IAAIf,MAAM,4BAClB,MAAQgB,eAAgBvE,EAAG2C,aAAc1C,EAAGuE,cAAetE,EAAGuE,MAAOtE,GAAMuE,EAAAA,GAAAA,mBAAqB3E,IAAM8C,iBAAkBzC,EAAG0C,mBAAoBzC,GAAMF,GAAII,EAAGE,IAAKkE,EAAAA,EAAAA,GAAE,MAAOX,OAAO9E,EAAE+C,qBACnL,GAAIjC,KAAM6D,EAAAA,EAAAA,IAAEpD,GACV,MAAM,IAAI8C,MAAM,4BAClB,GAAItD,IAAMf,EAAEyD,aACV,MAAM,IAAIY,MAAM,2BAClB,GAAIrD,IAAMhB,EAAE0D,WACV,MAAM,IAAIW,MAAM,yBAClB,KAAMnD,IAAMlB,EAAE2D,iBACZ,MAAM,IAAIU,MAAM,+BAClB,KAAMlD,IAAMnB,EAAE4D,mBACZ,MAAM,IAAIS,MAAM,iCAClB,MAAM5C,EAAIb,EAAE,GAAG,GACf,KAAKoE,EAAAA,EAAAA,IAAEvD,EAAGzB,EAAE6C,eACV,MAAM,IAAIwB,MAAM,gCAClB,MAAM1C,EAAIf,EAAE,GAAG,GACf,KAAKoE,EAAAA,EAAAA,IAAErD,EAAG3B,EAAEgD,kBACV,MAAM,IAAIqB,MAAM,gCAClB,MAAMzC,EAAIhB,EAAE,GAAG,GACf,KAAKoE,EAAAA,EAAAA,IAAEpD,EAAG5B,EAAEiD,oBACV,MAAM,IAAIoB,MAAM,8BAClB,MAAMvC,EAAIlB,EAAE,GAAG,GACf,KAAKoE,EAAAA,EAAAA,IAAElD,EAAG9B,EAAEmD,2BAA6B,IACvC,MAAM,IAAIkB,MAAM,wCAClB,GAAIzD,EAAE,GAAG,GAAGyC,aAAerD,EAAEoD,oBAC3B,MAAM,IAAIiB,MAAM,mBAClB,GAAIzD,EAAE,GAAG,GAAGyC,aAAerD,EAAEoB,eAC3B,MAAM,IAAIiD,MAAM,6BAClB,GAAIzD,EAAE,GAAG,GAAGyC,aAAerD,EAAEsD,aAC3B,MAAM,IAAIe,MAAM,8BAClB,GAAIzD,EAAE,GAAG,GAAGyC,aAAerD,EAAEwD,WAC3B,MAAM,IAAIa,MAAM,uBAAuB,IAE3C,MAAMqB,EACJC,YAAY5F,EAAGC,EAAGY,EAAGC,GAWnB,GAVAhB,EAAEkE,KAAM,WACRlE,EAAEkE,KAAM,SACRlE,EAAEkE,KAAM,YACRlE,EAAEkE,KAAM,aACRlE,EAAEkE,KAAM,WACRlE,EAAEkE,KAAM,kBACRlE,EAAEkE,KAAM,kBACRlE,EAAEkE,KAAM,mBACRlE,EAAEkE,KAAM,mBACRlE,EAAEkE,KAAM,QACJA,KAAK6B,QAAU7F,EAAGgE,KAAK/B,MAAQhC,EAAG+D,KAAK8B,SAAWjF,EAAGmD,KAAK+B,UAAYjF,GAAIA,EAAEwB,QAC9E,MAAM,IAAIgC,MAAM,iDAAmDrE,GACrE+D,KAAKgC,KAAO,IAAIC,EAAAA,GAAEjG,EAAGC,EAAGY,EAAGC,GAC3B,MAAQwB,QAASvB,EAAGmF,gBAAiBlF,GAAMF,EAAEwB,QAC7C0B,KAAKb,eAAiBpC,EAAGiD,KAAKmC,eAAiBnF,EAAGgD,KAAKoC,QAAU3D,EAAAA,GAAAA,IAAMzC,EAAGC,GAAI+D,KAAKqC,gBAAkB,IAAIC,EAAAA,GAAEtC,KAAKb,eAAgB5C,EAAEgG,UAAWvC,KAAK8B,UAAW9B,KAAKwC,gBAAkB,IAAIF,EAAAA,GAAEtC,KAAKmC,eAAgB1F,EAAG8F,UAAWvC,KAAK8B,SACpO,CACAlF,qBAAqBZ,EAAGC,GACtB,MAAOY,EAAGC,SAAW2F,EAAAA,EAAAA,aAAezG,GAAIe,EAAId,EAAEa,GAC9C,GAAIC,EAAE8E,UAAYhF,EAChB,MAAM,IAAIyD,MAAM,qBAAqBvD,EAAE8E,cAAchF,KACvD,OAAO,IAAI8E,EAAE9E,EAAGC,EAAGd,EAAGe,EAAEgF,UAC1B,CACAW,eAAgB1G,EAAGC,EAAGY,EAAGC,EAAGC,EAAGC,GAC7B,MAAQK,eAAgBJ,EAAGM,gBAAiBL,GAAMF,EAAES,YACpD,GAAU,KAANR,EACF,MAAM,IAAIqD,MAAM,2BAClB,GAAU,KAANpD,EACF,MAAM,IAAIoD,MAAM,2BAClB,MAAMnD,EAAI,IAAIwF,EAAAA,EAAE3G,GAAGsD,YAAalC,EAAGE,IAAKQ,EAAAA,EAAAA,IAAEkC,KAAK6B,QAAS7B,KAAK/B,MAAOpB,IAAKW,EAAGE,IAAKI,EAAAA,EAAAA,IAAEkC,KAAK6B,QAAS5F,EAAEgC,MAAOlB,GAAIa,GAAID,EAAAA,EAAAA,IAAEL,GAAIO,GAAIF,EAAAA,EAAAA,IAAEqC,KAAK4C,sBAAsBhF,IAAKG,GAAIJ,EAAAA,EAAAA,IAAE1B,GAAI+B,GAAIL,EAAAA,EAAAA,IAAED,GAAIQ,EAAIG,EAAAA,GAAAA,IAAM2B,KAAK6B,QAAS5F,EAAEgC,OAAOK,QAASH,GAAI,IAAqB0E,MAAQC,UAAY,GAAQ1E,EAAIqD,EAAAA,GAAAA,iBAAmB,CACtSD,MAAO,CACL5B,iBAAkBxC,EAClByC,mBAAoBrC,GAEtB8D,gBAAgBV,EAAAA,EAAAA,IAAE3E,EAAEgC,OACpBuB,YAAarB,EACbuB,aAAchD,EACd6E,cAAe7E,EACfqG,QAAS,IAAIC,WAAW,MACtBzE,EAAIhC,EAAE0G,mBAAmB,QAAS,CACpC,CACE7E,EACAR,EAAEmB,cACFlB,EACAG,EAAEe,cACFhB,EACAG,EACApB,EAAEwC,WACFrC,EAAEqC,WACFpC,EAAEoC,WACFtC,EAAEyC,WAAWH,cAGjBlC,UAAa4C,KAAKkD,QAAQtF,EAAGT,EAAGL,EAAGkD,KAAKb,iBACxC,MAAMX,QAAUwB,KAAKgC,KAAKmB,gBAAiBzE,EAAI,CAC7C0E,GAAIpD,KAAKb,eACTe,KAAM3B,EACNjC,MAAOkC,GAAKpB,EAAIN,EAAI,WAEhBkD,KAAKqD,2BAA0BC,EAAAA,EAAAA,IAAE5E,EAAGvB,GAAI,yBAChD,CACAuF,aAAc1G,EAAGC,GACf,MAAMY,QAAUmD,KAAKqC,gBAAgBkB,YAAY,yBAAyBC,qBAAoBC,EAAAA,EAAAA,IAAExH,IAAKa,EAAI,IAAI6F,EAAAA,EAAE3G,GAAGsD,iBAC5GU,KAAKqD,2BAA0BC,EAAAA,EAAAA,IAAEzG,EAAGC,GAAI,uBAChD,CACA4F,gBAAgB1G,EAAGC,EAAGY,GACpB,MAAO,CAAEC,IAAKgB,EAAAA,EAAAA,IAAEkC,KAAK6B,QAAS7B,KAAK/B,MAAOjC,IAAK,CAAEe,IAAKe,EAAAA,EAAAA,IAAEkC,KAAK6B,QAAS7B,KAAK/B,MAAOhC,GAAIe,GAAIW,EAAAA,EAAAA,IAAEb,GAAIG,GAAIU,EAAAA,EAAAA,IAAEZ,GACtG,OAAOkE,EAAAA,EAAAA,IAAEjE,EAAGC,GAAKJ,SAAWmD,KAAKwC,gBAAgBe,YAAY,yBAAyBG,WAAW,CAAC1G,EAAGC,EAAGJ,EAAGH,EAAG,KAAK,EACrH,CACAgG,iBAAiB1G,EAAGC,GAClB,aAAaU,EAAEgH,aAAa3D,KAAK/B,MAAOjC,EAAGC,EAC7C,CAGA2G,sBAAsB5G,GACpB,IAAIc,EACJ,GAAmB,aAAfkD,KAAK/B,MACP,OAAO2F,EAAAA,EAAAA,QAAU,WAAY5H,GAC/B,MAAMC,GAAI4H,EAAAA,EAAAA,IAAE7D,KAAK6B,QAAS7B,KAAK/B,MAAOjC,GACtC,IAAKC,EACH,MAAM,IAAIqE,MAAM,6BAA+BtE,GACjD,MAAMa,EAAmD,OAA9CC,GAAIgH,EAAAA,EAAAA,IAAE9D,KAAK6B,QAAS7B,KAAK/B,MAAOhC,EAAE8H,cAAmB,EAASjH,EAAEkH,MAAMjH,GAAqB,aAAfA,EAAEkH,WACzF,IAAKpH,EACH,MAAM,IAAIyD,MAAM,gCAAgCrE,EAAE8H,WAAW/D,KAAK/B,UACpE,OAAO2F,EAAAA,EAAAA,QAAU/G,EAAEoB,MAAOpB,EAAEqH,QAC9B,CACAxB,cAAe1G,EAAGC,EAAGY,EAAGC,GACtB,MAAMC,EAAI0F,EAAAA,EAAAA,uBAAyBzC,KAAK8B,SAAU9F,GAClD,SAAUe,EAAEoH,UAAUlI,EAAGa,GAAKD,EAAG,CAC/B,MAAMI,QAAUF,EAAEmG,QAAQM,oBAAoB1G,EAAGD,SAC3CmD,KAAKqD,2BAA0BC,EAAAA,EAAAA,IAAErG,EAAGhB,GAAI,wBAChD,CACF,CACAoH,0BAA0BrH,EAAGC,GAC3B,OAAO,IAAImI,EAAAA,IAAGC,EAAAA,EAAAA,IAAGrI,EAAGgE,KAAKoC,SAAUpC,KAAK6B,QAAS7B,KAAK/B,MAAOhC,GAAG,EAClE,GAEFqI,EAAAA,EAAAA,IAAGC,EAAAA,EAAI,gBAAiB5C,E","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/index-BIjOacK0.mjs"],"sourcesContent":["var H = Object.defineProperty;\nvar J = (l, e, t) => e in l ? H(l, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : l[e] = t;\nvar c = (l, e, t) => J(l, typeof e != \"symbol\" ? e + \"\" : e, t);\nimport { bF as V, bG as w, bH as g, bI as x, aj as P, h as b, bJ as f, u as R, bK as j, t as K, a8 as B, p as D, bL as Y, aA as O, E as z, a as M, bM as U, bN as X, l as Q, bO as Z, bP as q, bQ as tt, bR as et, bS as nt, _ as rt } from \"./index-OfNVdS9m.mjs\";\nimport \"./index-CCzOyXR_.mjs\";\nconst _ = new V([\n  \"function start((bytes32,address,address,address,address,address,uint256,uint256,uint256,uint256)) returns (address,uint16,uint64)\",\n  \"function receiveMessageAndSwap(bytes)\"\n]), st = new V([\n  \"function quoteExactInputSingle((address,address,uint256,uint24,uint160)) public view returns (uint256,uint160,uint32,uint256)\"\n]), k = 100, ot = \"https://gfx.relayers.xlabs.xyz/api/v1/swap/quote\", it = \"https://thermae.fly.dev/api/order/create\";\nclass G {\n  // Post the order to the portico API\n  static async createOrder(e, t, n, r, s, i, o, d) {\n    var a, p;\n    try {\n      const { minAmountStart: h, minAmountFinish: m } = o.swapAmounts, A = w(n), [u, T] = g(e, t, r), [E, v] = g(e, n.chain, i), y = w(T), S = w(v), C = x.get(e, t).portico, I = x.get(e, n.chain).portico, F = P.get(e, t), N = P.get(e, n.chain), $ = {\n        startingChainId: Number(F),\n        startingToken: y.toLowerCase(),\n        destinationChainId: Number(N),\n        destinationToken: S.toLowerCase(),\n        destinationAddress: A,\n        porticoAddress: C,\n        destinationPorticoAddress: I,\n        startingTokenAmount: s.toString(),\n        minAmountStart: h.toString(),\n        minAmountEnd: m.toString(),\n        bridgeNonce: d,\n        relayerFee: o.relayerFee.toString(),\n        feeTierStart: k,\n        feeTierEnd: k,\n        shouldWrapNative: u,\n        shouldUnwrapNative: E\n      }, W = await b.post(it, $);\n      return this.validateCreateOrderResponse(W.data, $), W.data;\n    } catch (h) {\n      if (b.isAxiosError(h)) {\n        const m = `${(a = h.response) == null ? void 0 : a.statusText}: ${(p = h.response) == null ? void 0 : p.data.message}`;\n        throw new Error(`Could not create order: ${m},`);\n      }\n      throw h;\n    }\n  }\n  static async quoteRelayer(e, t, n) {\n    var d;\n    if (D(t) || D(n))\n      throw new Error(\"how did you get here tho?\");\n    const r = R.encode(t.toUniversalAddress().toUint8Array(), !1), s = R.encode(n.toUniversalAddress().toUint8Array(), !1), o = { targetChain: B(e), sourceToken: r, targetToken: s };\n    try {\n      const a = await b.post(ot, o);\n      return BigInt(a.data.fee);\n    } catch (a) {\n      throw b.isAxiosError(a) ? new Error(`Error getting relayer fee: ${(d = a.response) == null ? void 0 : d.statusText}`) : a;\n    }\n  }\n}\n/**\n * Validates that the response from the order creation API matches the request\n * throws an error if there is a mismatch\n */\nc(G, \"validateCreateOrderResponse\", (e, t) => {\n  if (!f(t.porticoAddress || \"\", e.transactionTarget))\n    throw new Error(\"portico address mismatch\");\n  const n = _.decodeFunctionData(\"start\", e.transactionData);\n  if (n.length !== 1 || n[0].length !== 10)\n    throw new Error(\"decoded length mismatch\");\n  const r = R.decode(n[0][0]);\n  if (r.length !== 32)\n    throw new Error(\"flag set length mismatch\");\n  const { recipientChain: s, feeTierStart: i, feeTierFinish: o, flags: d } = j.deserializeFlagSet(r), { shouldWrapNative: a, shouldUnwrapNative: p } = d, [h, m] = K(\"Evm\", BigInt(t.destinationChainId));\n  if (s !== B(m))\n    throw new Error(\"recipient chain mismatch\");\n  if (i !== t.feeTierStart)\n    throw new Error(\"fee tier start mismatch\");\n  if (o !== t.feeTierEnd)\n    throw new Error(\"fee tier end mismatch\");\n  if (!!a !== t.shouldWrapNative)\n    throw new Error(\"should wrap native mismatch\");\n  if (!!p !== t.shouldUnwrapNative)\n    throw new Error(\"should unwrap native mismatch\");\n  const A = n[0][1];\n  if (!f(A, t.startingToken))\n    throw new Error(\"start token address mismatch\");\n  const u = n[0][3];\n  if (!f(u, t.destinationToken))\n    throw new Error(\"final token address mismatch\");\n  const T = n[0][4];\n  if (!f(T, t.destinationAddress))\n    throw new Error(\"recipient address mismatch\");\n  const E = n[0][5];\n  if (!f(E, t.destinationPorticoAddress || \"\"))\n    throw new Error(\"destination portico address mismatch\");\n  if (n[0][6].toString() !== t.startingTokenAmount)\n    throw new Error(\"amount mismatch\");\n  if (n[0][7].toString() !== t.minAmountStart)\n    throw new Error(\"min amount start mismatch\");\n  if (n[0][8].toString() !== t.minAmountEnd)\n    throw new Error(\"min amount finish mismatch\");\n  if (n[0][9].toString() !== t.relayerFee)\n    throw new Error(\"relayer fee mismatch\");\n});\nclass L {\n  constructor(e, t, n, r) {\n    c(this, \"network\");\n    c(this, \"chain\");\n    c(this, \"provider\");\n    c(this, \"contracts\");\n    c(this, \"chainId\");\n    c(this, \"porticoAddress\");\n    c(this, \"uniswapAddress\");\n    c(this, \"porticoContract\");\n    c(this, \"uniswapContract\");\n    c(this, \"core\");\n    if (this.network = e, this.chain = t, this.provider = n, this.contracts = r, !r.portico)\n      throw new Error(\"Unsupported chain, no contract addresses for: \" + t);\n    this.core = new Y(e, t, n, r);\n    const { portico: s, uniswapQuoterV2: i } = r.portico;\n    this.porticoAddress = s, this.uniswapAddress = i, this.chainId = P.get(e, t), this.porticoContract = new O(this.porticoAddress, _.fragments, this.provider), this.uniswapContract = new O(this.uniswapAddress, st.fragments, this.provider);\n  }\n  static async fromRpc(e, t) {\n    const [n, r] = await z.chainFromRpc(e), s = t[r];\n    if (s.network !== n)\n      throw new Error(`Network mismatch: ${s.network} != ${n}`);\n    return new L(n, r, e, s.contracts);\n  }\n  async *transfer(e, t, n, r, s, i) {\n    const { minAmountStart: o, minAmountFinish: d } = i.swapAmounts;\n    if (o === 0n)\n      throw new Error(\"Invalid min swap amount\");\n    if (d === 0n)\n      throw new Error(\"Invalid min swap amount\");\n    const a = new M(e).toString(), [p, h] = g(this.network, this.chain, n), [m, A] = g(this.network, t.chain, s), u = w(h), T = w(this.getTransferrableToken(u)), E = w(t), v = w(A), y = x.get(this.network, t.chain).portico, S = (/* @__PURE__ */ new Date()).valueOf() % 2 ** 4, C = j.serializeFlagSet({\n      flags: {\n        shouldWrapNative: p,\n        shouldUnwrapNative: m\n      },\n      recipientChain: B(t.chain),\n      bridgeNonce: S,\n      feeTierStart: k,\n      feeTierFinish: k,\n      padding: new Uint8Array(19)\n    }), I = _.encodeFunctionData(\"start\", [\n      [\n        C,\n        u.toLowerCase(),\n        T,\n        v.toLowerCase(),\n        E,\n        y,\n        r.toString(),\n        o.toString(),\n        d.toString(),\n        i.relayerFee.toString()\n      ]\n    ]);\n    p || (yield* this.approve(u, a, r, this.porticoAddress));\n    const F = await this.core.getMessageFee(), N = {\n      to: this.porticoAddress,\n      data: I,\n      value: F + (p ? r : 0n)\n    };\n    yield this.createUnsignedTransaction(U(N, a), \"PorticoBridge.Transfer\");\n  }\n  async *redeem(e, t) {\n    const n = await this.porticoContract.getFunction(\"receiveMessageAndSwap\").populateTransaction(X(t)), r = new M(e).toString();\n    yield this.createUnsignedTransaction(U(n, r), \"PorticoBridge.Redeem\");\n  }\n  async quoteSwap(e, t, n) {\n    const [, r] = g(this.network, this.chain, e), [, s] = g(this.network, this.chain, t), i = w(r), o = w(s);\n    return f(i, o) ? n : (await this.uniswapContract.getFunction(\"quoteExactInputSingle\").staticCall([i, o, n, k, 0]))[0];\n  }\n  async quoteRelay(e, t) {\n    return await G.quoteRelayer(this.chain, e, t);\n  }\n  // For a given token, return the corresponding\n  // Wormhole wrapped token that originated on Ethereum\n  getTransferrableToken(e) {\n    var r;\n    if (this.chain === \"Ethereum\")\n      return Q.tokenId(\"Ethereum\", e);\n    const t = Z(this.network, this.chain, e);\n    if (!t)\n      throw new Error(\"Unsupported source token: \" + e);\n    const n = (r = q(this.network, this.chain, t.symbol)) == null ? void 0 : r.find((s) => s.original === \"Ethereum\");\n    if (!n)\n      throw new Error(`Unsupported symbol for chain ${t.symbol}: ${this.chain} `);\n    return Q.tokenId(n.chain, n.address);\n  }\n  async *approve(e, t, n, r) {\n    const s = z.getTokenImplementation(this.provider, e);\n    if (await s.allowance(t, r) < n) {\n      const o = await s.approve.populateTransaction(r, n);\n      yield this.createUnsignedTransaction(U(o, t), \"PorticoBridge.Approve\");\n    }\n  }\n  createUnsignedTransaction(e, t) {\n    return new tt(et(e, this.chainId), this.network, this.chain, t, !1);\n  }\n}\nnt(rt, \"PorticoBridge\", L);\nexport {\n  L as EvmPorticoBridge\n};\n"],"names":["H","Object","defineProperty","c","l","e","t","J","enumerable","configurable","writable","value","_","V","st","k","G","static","n","r","s","i","o","d","a","p","minAmountStart","h","minAmountFinish","m","swapAmounts","A","w","u","T","g","E","v","chain","y","S","C","x","portico","I","F","P","N","$","startingChainId","Number","startingToken","toLowerCase","destinationChainId","destinationToken","destinationAddress","porticoAddress","destinationPorticoAddress","startingTokenAmount","toString","minAmountEnd","bridgeNonce","relayerFee","feeTierStart","feeTierEnd","shouldWrapNative","shouldUnwrapNative","W","b","this","validateCreateOrderResponse","data","response","statusText","message","Error","D","R","toUniversalAddress","toUint8Array","targetChain","B","sourceToken","targetToken","BigInt","fee","f","transactionTarget","decodeFunctionData","transactionData","length","recipientChain","feeTierFinish","flags","j","K","L","constructor","network","provider","contracts","core","Y","uniswapQuoterV2","uniswapAddress","chainId","porticoContract","O","fragments","uniswapContract","z","async","M","getTransferrableToken","Date","valueOf","padding","Uint8Array","encodeFunctionData","approve","getMessageFee","to","createUnsignedTransaction","U","getFunction","populateTransaction","X","staticCall","quoteRelayer","Q","Z","q","symbol","find","original","address","allowance","tt","et","nt","rt"],"sourceRoot":""}