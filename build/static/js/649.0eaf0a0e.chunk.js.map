{"version":3,"file":"static/js/649.0eaf0a0e.chunk.js","mappings":"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","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/evm-CacR5KI8.mjs"],"sourcesContent":["var L = Object.defineProperty;\nvar G = (s) => {\n  throw TypeError(s);\n};\nvar B = (s, n, e) => n in s ? L(s, n, { enumerable: !0, configurable: !0, writable: !0, value: e }) : s[n] = e;\nvar l = (s, n, e) => B(s, typeof n != \"symbol\" ? n + \"\" : n, e), S = (s, n, e) => n.has(s) || G(\"Cannot \" + e);\nvar h = (s, n, e) => (S(s, n, \"read from private field\"), e ? e.call(s) : n.get(s)), u = (s, n, e) => n.has(s) ? G(\"Cannot add the same private member more than once\") : n instanceof WeakSet ? n.add(s) : n.set(s, e), o = (s, n, e, t) => (S(s, n, \"write to private field\"), t ? t.call(s, e) : n.set(s, e), e);\nvar E = (s, n, e, t) => ({\n  set _(r) {\n    o(s, n, r, e);\n  },\n  get _() {\n    return h(s, n, t);\n  }\n});\nimport { A as O, d as W, W as b, E as f, P as $, a as M, b as R, c as j, _ as q } from \"./index-OfNVdS9m.mjs\";\nvar a, c;\nconst w = class w extends O {\n  /**\n   *  Creates a new **NonceManager** to manage %%signer%%.\n   */\n  constructor(e) {\n    super(e.provider);\n    /**\n     *  The Signer being managed.\n     */\n    l(this, \"signer\");\n    u(this, a);\n    u(this, c);\n    W(this, { signer: e }), o(this, a, null), o(this, c, 0);\n  }\n  async getAddress() {\n    return this.signer.getAddress();\n  }\n  connect(e) {\n    return new w(this.signer.connect(e));\n  }\n  async getNonce(e) {\n    if (e === \"pending\") {\n      h(this, a) == null && o(this, a, super.getNonce(\"pending\"));\n      const t = h(this, c);\n      return await h(this, a) + t;\n    }\n    return super.getNonce(e);\n  }\n  /**\n   *  Manually increment the nonce. This may be useful when managng\n   *  offline transactions.\n   */\n  increment() {\n    E(this, c)._++;\n  }\n  /**\n   *  Resets the nonce, causing the **NonceManager** to reload the current\n   *  nonce from the blockchain on the next transaction.\n   */\n  reset() {\n    o(this, c, 0), o(this, a, null);\n  }\n  async sendTransaction(e) {\n    const t = this.getNonce(\"pending\");\n    return this.increment(), e = await this.signer.populateTransaction(e), e.nonce = await t, await this.signer.sendTransaction(e);\n  }\n  signTransaction(e) {\n    return this.signer.signTransaction(e);\n  }\n  signMessage(e) {\n    return this.signer.signMessage(e);\n  }\n  signTypedData(e, t, r) {\n    return this.signer.signTypedData(e, t, r);\n  }\n};\na = new WeakMap(), c = new WeakMap();\nlet P = w;\nasync function z(s, n, e) {\n  const t = typeof n == \"string\" ? new b(n, s) : n, r = (e == null ? void 0 : e.chain) ?? (await f.chainFromRpc(s))[1], i = new P(t);\n  if (i.provider === null)\n    try {\n      i.connect(s);\n    } catch (g) {\n      console.error(\"Cannot connect to network for signer\", g);\n    }\n  return new H(r, await t.getAddress(), i, e);\n}\nclass H extends $ {\n  constructor(e, t, r, i) {\n    super(e, t, r);\n    l(this, \"opts\");\n    this.opts = i;\n  }\n  chain() {\n    return this._chain;\n  }\n  address() {\n    return this._address;\n  }\n  async sign(e) {\n    var v, y, C, x, T, A;\n    const t = this.chain(), r = [];\n    let i = 500000n, g = 100000000000n, m = 1500000000n, p = 100000000n;\n    if (((v = this.opts) == null ? void 0 : v.overrides) === void 0 && t !== \"Celo\") {\n      const d = await this._signer.provider.getFeeData();\n      g = d.gasPrice ?? g, m = d.maxFeePerGas ?? m, p = d.maxPriorityFeePerGas ?? p;\n    }\n    ((y = this.opts) == null ? void 0 : y.maxGasLimit) !== void 0 && (i = i > ((C = this.opts) == null ? void 0 : C.maxGasLimit) ? (x = this.opts) == null ? void 0 : x.maxGasLimit : i);\n    const F = t === \"Oasis\" ? { gasLimit: i, gasPrice: g, type: 0 } : { gasLimit: i, maxFeePerGas: m, maxPriorityFeePerGas: p };\n    for (const d of e) {\n      const { transaction: N, description: _ } = d;\n      (T = this.opts) != null && T.debug && console.log(`Signing: ${_} for ${this.address()}`);\n      const D = {\n        ...N,\n        ...F,\n        from: this.address(),\n        nonce: await this._signer.getNonce(),\n        // Override any existing values with those passed in the constructor\n        ...(A = this.opts) == null ? void 0 : A.overrides\n      };\n      r.push(await this._signer.signTransaction(D));\n    }\n    return r;\n  }\n}\nconst K = {\n  Address: M,\n  Platform: f,\n  getSigner: z,\n  protocols: {\n    WormholeCore: () => import(\"./index-OfNVdS9m.mjs\").then((s) => s.e2),\n    TokenBridge: () => import(\"./index-CCzOyXR_.mjs\"),\n    PorticoBridge: () => import(\"./index-BIjOacK0.mjs\"),\n    CircleBridge: () => import(\"./index-B5OSVLa1.mjs\")\n  },\n  getChain: (s, n, e) => new R(n, new f(s, j(s, q, {\n    [n]: e\n  })))\n};\nexport {\n  K as default\n};\n"],"names":["a","c","L","Object","defineProperty","G","s","TypeError","l","n","e","B","enumerable","configurable","writable","value","S","has","h","call","get","u","WeakSet","add","set","o","t","w","O","constructor","super","provider","this","W","signer","async","getAddress","connect","getNonce","increment","E","_","r","reset","populateTransaction","nonce","sendTransaction","signTransaction","signMessage","signTypedData","WeakMap","P","H","$","i","opts","chain","_chain","address","_address","v","y","C","x","T","A","g","m","p","overrides","d","_signer","getFeeData","gasPrice","maxFeePerGas","maxPriorityFeePerGas","maxGasLimit","F","gasLimit","type","transaction","N","description","debug","console","log","D","from","push","K","Address","M","Platform","f","getSigner","b","error","protocols","WormholeCore","then","e2","TokenBridge","PorticoBridge","CircleBridge","getChain","R","j","q"],"sourceRoot":""}