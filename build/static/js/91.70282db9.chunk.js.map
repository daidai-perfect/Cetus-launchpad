{"version":3,"file":"static/js/91.70282db9.chunk.js","mappings":"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","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/algorand-CbdjZ1lv.mjs"],"sourcesContent":["var b = Object.defineProperty;\nvar A = (e, n, t) => n in e ? b(e, n, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[n] = t;\nvar l = (e, n, t) => A(e, typeof n != \"symbol\" ? n + \"\" : n, t);\nimport { C, i as x, ak as w, k as R, al as i, l as S, am as y, o as T, p, an as h, q as j, t as k, ao as E, ap as N, c as B } from \"./index-OfNVdS9m.mjs\";\nclass _ extends C {\n}\nconst g = class g extends x {\n  constructor(n, t) {\n    super(n, t ?? R(n, g._platform));\n  }\n  getRpc(n) {\n    if (n in this.config)\n      return new i.Algodv2(\"\", this.config[n].rpc);\n    throw new Error(\"No configuration available for chain: \" + n);\n  }\n  getChain(n) {\n    if (n in this.config)\n      return new _(n, this);\n    throw new Error(\"No configuration available for chain: \" + n);\n  }\n  static nativeTokenId(n, t) {\n    if (!g.isSupportedChain(t))\n      throw new Error(`invalid chain for Algorand: ${t}`);\n    return S.chainAddress(t, y);\n  }\n  static isNativeTokenId(n, t, o) {\n    return !g.isSupportedChain(t) || o.chain !== t ? !1 : this.nativeTokenId(n, t) == o;\n  }\n  static isSupportedChain(n) {\n    return T(n) === g._platform;\n  }\n  static async getDecimals(n, t, o) {\n    const a = p(o) ? 0 : new h(o).toInt();\n    if (a === 0)\n      return j(g._platform);\n    const d = await t.getAssetByID(a).do(), r = i.modelsv2.Asset.from_obj_for_encoding(d);\n    if (!r.params || !r.params.decimals)\n      throw new Error(\"Could not fetch token details\");\n    return Number(r.params.decimals);\n  }\n  static async getBalance(n, t, o, a) {\n    const d = p(a) ? 0 : new h(a).toInt();\n    if (d === 0) {\n      const c = await t.accountInformation(o).do(), u = i.modelsv2.Account.from_obj_for_encoding(c);\n      return BigInt(u.amount);\n    }\n    const r = await t.accountAssetInformation(o, d).do(), s = i.modelsv2.AssetHolding.from_obj_for_encoding(r);\n    return BigInt(s.amount);\n  }\n  static async getBalances(n, t, o, a) {\n    let d;\n    if (a.includes(\"native\")) {\n      const s = await t.accountInformation(o).do(), c = i.modelsv2.Account.from_obj_for_encoding(s);\n      d = BigInt(c.amount);\n    }\n    return a.map(async (s) => {\n      if (p(s))\n        return { native: d };\n      const c = new h(s).toInt(), u = await t.accountAssetInformation(o, c).do(), f = i.modelsv2.AssetHolding.from_obj_for_encoding(u);\n      return BigInt(f.amount);\n    }).reduce((s, c) => Object.assign(s, c), {});\n  }\n  static async sendWait(n, t, o) {\n    const r = o.map((f, I) => i.decodeSignedTransaction(f)).map((f, I) => f.txn.txID()), { txId: s } = await t.sendRawTransaction(o).do();\n    if (!s)\n      throw new Error(\"Transaction(s) failed to send\");\n    const c = await i.waitForConfirmation(t, s, 4);\n    if (!i.modelsv2.PendingTransactionResponse.from_obj_for_encoding(c).confirmedRound)\n      throw new Error(\"Transaction(s) could not be confirmed in 4 rounds\");\n    return r;\n  }\n  static async getLatestBlock(n) {\n    const t = await n.status().do(), o = i.modelsv2.NodeStatusResponse.from_obj_for_encoding(t);\n    if (!o.lastRound)\n      throw new Error(\"Error getting status from node\");\n    return Number(o.lastRound);\n  }\n  static async getLatestFinalizedBlock(n) {\n    const t = await n.status().do(), o = i.modelsv2.NodeStatusResponse.from_obj_for_encoding(t);\n    if (!o.lastRound)\n      throw new Error(\"Error getting status from node\");\n    return Number(o.lastRound);\n  }\n  static chainFromChainId(n) {\n    const t = k(g._platform, n);\n    if (t === void 0)\n      throw new Error(`Unknown native chain id ${n}`);\n    const [o, a] = t;\n    return [o, a];\n  }\n  static async chainFromRpc(n) {\n    const t = await n.versionsCheck().do(), o = i.modelsv2.Version.from_obj_for_encoding(t);\n    return this.chainFromChainId(o.genesisId);\n  }\n};\nl(g, \"_platform\", w);\nlet m = g;\nasync function $(e, n) {\n  const [t, o] = await m.chainFromRpc(e);\n  return new D(o, e, n);\n}\nclass D {\n  constructor(n, t, o, a = !1) {\n    l(this, \"_chain\");\n    l(this, \"_debug\");\n    l(this, \"_account\");\n    this._chain = n, this._debug = a, this._account = E(o);\n  }\n  chain() {\n    return this._chain;\n  }\n  address() {\n    return this._account.addr;\n  }\n  async sign(n) {\n    const t = [], o = n.map((r, s) => r.transaction.tx), a = N(o), d = n.map((r, s) => (r.transaction.tx = a[s], r));\n    for (const r of d) {\n      const { description: s, transaction: c } = r, { tx: u, signer: f } = c;\n      this._debug && (console.log(u._getDictForDisplay()), console.log(u.txID())), f ? (this._debug && console.log(`Signing: ${s} with signer ${f.address} for address ${this.address()}`), t.push(await f.signTxn(u))) : (this._debug && console.log(`Signing: ${s} without signer for address ${this.address()}`), t.push(u.signTxn(this._account.sk)));\n    }\n    return t;\n  }\n}\nconst F = {\n  Address: h,\n  Platform: m,\n  getSigner: $,\n  protocols: {\n    WormholeCore: () => import(\"./index-CglIP2bi.mjs\").then((e) => e.i),\n    TokenBridge: () => import(\"./index-BJ3-GV70.mjs\")\n  },\n  getChain: (e, n, t) => new _(n, new m(e, B(e, w, {\n    [n]: t\n  })))\n}, U = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  default: F\n}, Symbol.toStringTag, { value: \"Module\" }));\nexport {\n  m as A,\n  U as a\n};\n"],"names":["b","Object","defineProperty","l","e","n","t","A","enumerable","configurable","writable","value","_","C","g","x","constructor","super","R","_platform","getRpc","this","config","i","rpc","Error","getChain","static","isSupportedChain","S","y","o","chain","nativeTokenId","T","a","p","h","toInt","j","d","getAssetByID","do","r","params","decimals","Number","c","accountInformation","u","BigInt","amount","accountAssetInformation","s","includes","map","async","native","f","reduce","assign","I","txn","txID","txId","sendRawTransaction","confirmedRound","status","lastRound","k","versionsCheck","chainFromChainId","genesisId","w","m","D","arguments","length","undefined","_chain","_debug","_account","E","address","addr","transaction","tx","N","description","signer","console","log","_getDictForDisplay","push","signTxn","sk","F","Address","Platform","getSigner","chainFromRpc","protocols","WormholeCore","then","TokenBridge","B","U","freeze","__proto__","default","Symbol","toStringTag"],"sourceRoot":""}