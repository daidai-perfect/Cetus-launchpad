import{C as V,X as l}from"./index.5ae9c93c.js";import{v as I,s as i,D as r}from"./pool.57af0916.js";import{c as u,a as U}from"./sha256.d159b85d.js";import{a1 as W,m as A,O as N}from"./entry.648a14ec.js";function q(a){const g={launchpad:u[a||"Sui"].launchpad,xcetus:u[a||"Sui"].xcetus,booster:u[a||"Sui"].booster,maker_bonus:u[a||"Sui"].maker_bonus},m={fullRpcUrl:localStorage.getItem(`${a}-currentRpc`)||u[a||"Sui"].fullRpcUrl,faucetURL:localStorage.getItem(`${a}-currentRpc`)||u[a||"Sui"].faucetURL,faucet:u[a||"Sui"].faucet,simulationAccount:u[a||"Sui"].simulationAccount,token:u[a||"Sui"].token,clmm:u[a||"Sui"].clmm},w=new I(m),o=W(new V(g,w)),C=U(),d=A(()=>C);N(()=>{d.value.address&&(o.ClmmSDK.senderAddress=d.value.address)});const y=async e=>{const t=await o.XCetusModule.getOwnerLockCetuss(e);return console.log(t,"===>lockWhales"),t},v=async(e,t)=>{const n=l.getAvailableXCetus(e,t);return console.log(n,"==>availableXwhale"),n},M=async e=>{const t=await o.XCetusModule.getOwnerCetusCoins(e);return console.log(t,"===>coins"),t},f=async e=>await o.XCetusModule.getOwnerVeNFT(e),p=async(e,t)=>{const n={amount:e};t&&(n.venft_id=t);const s=await o.XCetusModule.convertPayload(n);return c(s)},S=async()=>{const e=await o.XCetusModule.mintVeNFTPayload();return c(e)},X=async(e,t)=>{const n=await o.XCetusModule.redeemNum(e,t);return console.log(n,"result===>"),{amountOut:n.amountOut,percent:i(new r(n.percent).mul(new r(100)).toString(),2)}},D=async(e,t)=>{const n=await o.XCetusModule.reverseRedeemNum(e,t);return{amountOut:n.amountOut,percent:i(new r(n.percent).mul(new r(100)).toString(),2)}},k=async(e,t,n)=>{const s=await o.XCetusModule.redeemLockPayload({venft_id:t,amount:e,lock_day:n});return console.log(s,"tx===>"),c(s)},x=e=>l.getLockingCetuss(e),P=async(e,t)=>{const n=await o.XCetusModule.getLockCetus(e);if(n&&l.isLocked(n)){const s=o.XCetusModule.cancelRedeemPayload({venft_id:t,lock_id:e});return c(s)}},T=async(e,t)=>{const n=await o.XCetusModule.getLockCetus(e);if(n&&!l.isLocked(n)){const s=await o.XCetusModule.redeemPayload({venft_id:t,lock_id:e});return c(s)}},b=e=>{const t=Date.parse(new Date().toString())/1e3,n=new r(t).sub(e.start_time).div(new r(e.interval_day).mul(60)).toFixed(0,r.ROUND_UP),s=new r(e.start_time).add(new r(n).mul(60*e.interval_day));return console.log(s,"===>nextStartTime"),s.toString()},_=async()=>{const e=await o.XCetusModule.getDividendManager();console.log("dividendManager:",e);const t=b(e);return console.log(t,"===>nextStartTime"),{nextStartTime:t,...e}},O=async(e,t)=>{const n=await o.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,e);return{rewards:n&&n.rewards||[]}},R=async e=>{const t=await o.XCetusModule.getDividendManager();if(console.log("dividendManager: ",t),t.bonus_types.length>0){const n=await o.XCetusModule.redeemDividendPayload(e,t.bonus_types);return c(n)}},h=async e=>{const t=await o.XCetusModule.getDividendManager();if(console.log("dividendManager: ",t),t.bonus_types.length>0){const n=await o.XCetusModule.redeemDividendV2Payload(e,t.bonus_types);return c(n)}},L=async e=>{const t=await o.XCetusModule.getOwnerVeNFT(e);if(console.log("nfts: ",t),t){const n=await o.XCetusModule.getXcetusManager();console.log("xcetusManager: ",n);const s=new r(t.xcetus_balance).div(n.treasury).mul(100).toString();return console.log("rate: ",s),Number(s)>0&&Number(s)<.01?"<0.01":i(s,2)}else return 0},c=e=>({transactionBlock:e,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getOwnerLockCetuss:y,getOwnerCetusCoins:M,getOwnerVeNFT:f,depositCetus:p,getMintVeNFTPayload:S,redeemNum:X,getRedeemLockPayload:k,getAvailableXCetus:v,getLockingCetuss:x,getCancelRedeemPayload:P,getVeNFTDividendInfo:O,reverseRedeemNum:D,getRedeemPayload:T,getRedeemDividendPayload:R,getMyShare:L,getDividendManager:_,getPeriod:e=>{const t=Date.now()/1e3,{start_time:n,interval_day:s}=e,F=Math.ceil((t-n)/(s*60));return console.log(t,"===>currentTime"),console.log(n,"===>start_time"),console.log(t-n,"===>currentTime-start_time"),console.log((t-n)/(s*60),"(currentTime - start_time) / (interval_day * 60)"),F},getRedeemDividendV2Payload:h}}export{q as u};
