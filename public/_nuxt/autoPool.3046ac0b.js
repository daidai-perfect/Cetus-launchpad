import{m as Oo,N as Co,a5 as Do}from"./entry.604b55fb.js";import{g as P,W as jo,w as No,u as Uo,O as wo,e as F,N as to,T as So,C as fo,aP as eo,i as To,s as x,A as ho,b as yo}from"./index.5d1ebf04.js";import{D as i}from"./decimal.0bdeb344.js";import{u as Ro,b as Bo,w as Lo,p as _o}from"./pool.1cf61252.js";function Ao(n){const d={launchpad:P[n||"Sui"].launchpad,ido:P[n||"Sui"].ido,xcetus:P[n||"Sui"].xcetus,xcetus_dividends:P[n||"Sui"].xcetus_dividends,cetus_faucet:P[n||"Sui"].cetus_faucet,xtoken:P[n||"Sui"].xtoken,xtoken_dividends:P[n||"Sui"].xtoken_dividends,token_faucet:P[n||"Sui"].token_faucet,booster:P[n||"Sui"].booster,maker_bonus:P[n||"Sui"].maker_bonus,liquidity_stratefy:P[n||"Sui"].liquidity_stratefy,vaults:P[n||"Sui"].vaults,frams:P[n||"Sui"].frams},_={fullRpcUrl:localStorage.getItem(`${n}-currentRpclocal4`)||P[n||"Sui"].fullRpcUrl,simulationAccount:P[n||"Sui"].simulationAccount,cetus_config:P[n||"Sui"].cetus_config,clmm_pool:P[n||"Sui"].clmm_pool,integrate:P[n||"Sui"].integrate,deepbook:P[n||"Sui"].deepbook,deepbook_endpoint_v2:P[n||"Sui"].deepbook_endpoint_v2,aggregatorUrl:P[n||"Sui"].aggregatorUrl},c=new jo(_),s=new No(d,c),p=Uo(),M=Oo(()=>p);Co(()=>{M.value.address&&(c.senderAddress=M.value.address)});const D=async()=>{console.log(s,"sdk###");const o=await s.Vaults.getVaultList();return console.log("result.data:",o.data),o&&o.data||[]},E=async o=>{const e=await s.Vaults.getVault(o);return console.log(e,"vault##"),{...e,quota_based_type:wo(e.quota_based_type).full_address}},u=async o=>{if(console.log(o,"###coinType"),c.senderAddress){const e=await s.ClmmSDK.fullClient.getBalance({owner:c.senderAddress,coinType:o});return e&&e.totalBalance}else return 0},t=async()=>{try{if(c.senderAddress){const o=await s.ClmmSDK.fullClient.getAllBalances({owner:c.senderAddress});return console.log("ðŸš€ ~ file: useAutoPool.ts:95 ~ getAllBalances ~ allBalance:",o),o}else return[]}catch(o){console.log("ðŸš€ ~ file: useAutoPool.ts:102 ~ getAllBalances ~ error:",o)}},K=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}}),f=async o=>{const{lowerTick:e,upperTick:r,slippage:m,rewarder_coin_types:T,isOnlyA:y,isOnlyB:A,currentTickIndex:h,decimal_b:j,request_id:q,stakeProtocol:I,shouldRequestStake:v,farming_pool:w}=o;console.log(o,"params###");let b=o.fix_amount_a,l,O,a,N=h;const U=await s.ClmmSDK.Pool.getPool(o.clmm_pool);if(y||A){let S;try{S=await z({lowerTick:e,upperTick:r,curSqrtPrice:U.current_sqrt_price.toString(),fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool,use_route:!0,slippage:m,request_id:q,stakeProtocol:I,shouldRequestStake:v})}catch(B){console.log("ðŸš€ðŸš€ðŸš€ ~ file: useAutoPool.ts:139 ~ deposit ~ e:",B)}console.log(S,"swapResut##211"),S?(O=new F(S.afterSqrtPrice),l=S.fixAmountA===b?new F(to(o.coinAmount).sub(S.swapInAmount).toString()):new F(S.swapOutAmount),a={swap_amount:S.swapInAmount,a2b:b,input_amount:o.coinAmount,route_obj:S.routeObj,stakeProtocol:S.stake_protocol},b=S.fixAmountA,N=So.sqrtPriceX64ToTickIndex(new F(S.afterSqrtPrice))):(O=new F(o.curSqrtPrice),l=new F(o.coinAmount))}else O=o.curSqrtPrice,l=new F(o.coinAmount);let R,C,V;console.log(e,h,r,"####138"),N>=e&&N<=r?(R=fo.estLiquidityAndcoinAmountFromOneAmounts(e,r,l,b,!0,m,O),C=b?l.toString():R.tokenMaxA.toString(),V=b?R.tokenMaxB.toString():l.toString()):N<e?(C=l.toNumber(),V=0):N>r&&(C=0,V=l.toNumber()),console.log({lowerTick:e,upperTick:r,vault_id:o.id,clmm_pool:o.clmm_pool,farming_pool:w,lp_token_type:o.lp_token_type,amount_a:C,amount_b:V,fix_amount_a:b,slippage:m,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,swapParams:a},"params171");const io=await s.Vaults.deposit({lowerTick:e,upperTick:r,vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:C,amount_b:V,fix_amount_a:b,slippage:m,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,swapParams:a,farming_pool:w});return K(io)},Y=async o=>{const{lowerTick:e,upperTick:r,coinTypeA:m,coinTypeB:T,receiveAmount:y,clmm_pool:A,lowerSqrtPrice:h,upperSqrtPrice:j,fix_amount_a:q,curSqrtPrice:I,slippage:v,rewarder_coin_types:w,id:b,liquidity:l,swapParams:O,isOnlyA:a,isOnlyB:N,sliderVal:U,positionInfo:R,maxLiquidity:C,request_id:V,farming_pool:io}=o;console.log(U,"sliderVal##");const S=await E(b),B=await c.Pool.getPool(S.pool_id);let k,L,Z,no,J,W,$;const G=eo.get_share_liquidity_by_amount(S,U==100?R.balance:o.lpTokenAmount);if(console.log("ðŸš€ðŸš€ðŸš€ ~ file: useAutoPool.ts:237 ~ remove ~ removeLiquidity:",{lowerTick:e,upperTick:r,curSqrtPrice:B.current_sqrt_price,fix_amount_a:q,receive_amount:y,coinTypeA:m,coinTypeB:T,clmm_pool:A,use_route:!0,slippage:v,removeLiquidity:U==100?G:"",maxLiquidity:C,request_id:V}),a||N){try{k=await Q({lowerTick:e,upperTick:r,curSqrtPrice:B.current_sqrt_price,fix_amount_a:q,receiveAmount:y,coinTypeA:m,coinTypeB:T,clmm_pool:A,use_route:!0,slippage:v,liquidity:U==100?G:"",maxLiquidity:C,request_id:V})}catch(so){console.log("ðŸš€ðŸš€ðŸš€ ~ file: useAutoPool.ts:257 ~ remove ~ e:",so)}if(console.log(k,"swapResut###"),k){const so=eo.get_share_liquidity_by_amount(S,R.balance);L=fo.getCoinAmountFromLiquidity(new F(U==100?so:k.liquidity),new F(B.current_sqrt_price),h,j,!1),Z=eo.get_protocol_fee_amount(S,L.coinA.toString()),no=eo.get_protocol_fee_amount(S,L.coinB.toString()),J=U==100?R.balance:eo.get_lp_amount_by_liquidity(S,k.liquidity),W=to(L.coinA.toString()).mul(to(1-o.slippage)),$=to(L.coinB.toString()).mul(to(1-o.slippage)),console.log(W.toString(),"##minAmountA"),console.log($.toString(),"##minAmountA")}}else console.log(G,"#removeLiquidity"),L=fo.getCoinAmountFromLiquidity(new F(G),new F(B.current_sqrt_price),h,j,!1),console.log(L,"#coinAmountscoinAmounts"),J=o.lpTokenAmount,W=to(L.coinA.toString()).mul(to(1-o.slippage)),$=to(L.coinB.toString()).mul(to(1-o.slippage)),console.log(Z,no,"##protocol_fee_amount_b"),console.log(W.toString(),"##minAmountA"),console.log($.toString(),"##minAmountA"),console.log(o,"params###246");console.log(J,"lpTokenAmount remove");const X={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:J,min_amount_a:To(W,0)||"",min_amount_b:To($,0)||"",rewarder_coin_types:[],slippage:o.slippage,farming_pool:io};console.log(X,"##removeParams"),(a||N)&&(X.swapParams={a2b:!q,swap_amount:k==null?void 0:k.swapInAmount,route_obj:k.routeObj});const uo=await s.Vaults.remove(X);return K(uo)},z=async o=>{var O;const{lowerTick:e,upperTick:r,curSqrtPrice:m,fix_amount_a:T,input_amount:y,coinTypeA:A,coinTypeB:h,clmm_pool:j,slippage:q,decimals:I,request_id:v,stakeProtocol:w,shouldRequestStake:b}=o;console.log(o,"params###");let l;try{if(l=await s.Vaults.calculateDepositSwapAmount({lowerTick:e,upperTick:r,curSqrtPrice:m,fix_amount_a:T,input_amount:y,coinTypeA:A,coinTypeB:h,clmm_pool:j,use_route:!0,priceSplitPoint:q,request_id:v,stakeProtocol:w,shouldRequestStake:b},!0),console.log("ðŸš€ðŸš€ðŸš€ ~ file: useAutoPool.ts:365 ~ calculateDepositSwapAmount ~ swapResut:",l),(O=l==null?void 0:l.routeObj)!=null&&O.isTimeout)throw new Error("router timeout")}catch(a){if(console.log(a,"calculateDepositSwapAmount error"),(String(a)=="Error: route unavailable"||String(a)=="Error: router timeout")&&(l=await s.Vaults.calculateDepositSwapAmount({lowerTick:e,upperTick:r,curSqrtPrice:m,fix_amount_a:T,input_amount:y,coinTypeA:A,coinTypeB:h,clmm_pool:j,use_route:!1,priceSplitPoint:q,request_id:v,stakeProtocol:w,shouldRequestStake:b},!0),console.log("ðŸš€ðŸš€ðŸš€ ~ file: useAutoPool.ts:387 ~ calculateDepositSwapAmount ~ swapResut:",l)),String(a)=="Error: HaedalStakeSuiAmountError")return"HaedalStakeSuiAmountError"}if(console.log(l,"##swapResut"),l){console.log("ðŸš€ðŸš€ðŸš€ ~ file: useAutoPool.ts:384 ~ calculateDepositSwapAmount ~ swapResut.swapOutAmount:",l.swapOutAmount);const a=new i(l.swapOutAmount);return{...l,swapOutAmountLimit:x(a.sub(a.mul(q)).toNumber(),I)}}return l},Q=async o=>{var O;const{lowerTick:e,upperTick:r,curSqrtPrice:m,fix_amount_a:T,receiveAmount:y,coinTypeA:A,coinTypeB:h,clmm_pool:j,slippage:q,decimals:I,liquidity:v,maxLiquidity:w,request_id:b}=o;console.log({lowerTick:e,upperTick:r,curSqrtPrice:m.toString(),fix_amount_a:T,receive_amount:y,coinTypeA:A,coinTypeB:h,clmm_pool:j,use_route:!0,priceSplitPoint:q,removeLiquidity:v,maxLiquidity:w,request_id:b},"ðŸš€ðŸš€ðŸš€ ~ file: useAutoPool.ts:415 ~ calculateRemoveSwapAmount ~ calculateRemoveSwapAmount");let l;try{if(l=await s.Vaults.calculateRemoveSwapAmount({lowerTick:e,upperTick:r,curSqrtPrice:m,fix_amount_a:T,receive_amount:y,coinTypeA:A,coinTypeB:h,clmm_pool:j,use_route:!0,priceSplitPoint:q,removeLiquidity:v,maxLiquidity:w,request_id:b}),console.log("ðŸš€ðŸš€ðŸš€ ~ file: useAutoPool.ts:426 ~ calculateRemoveSwapAmount ~ swapResut:",l,y),(O=l==null?void 0:l.routeObj)!=null&&O.isTimeout)throw new Error("router timeout")}catch(a){(String(a)=="Error: route unavailable"||String(a)=="Error: router timeout")&&(console.log(a,"e432"),l=await s.Vaults.calculateRemoveSwapAmount({lowerTick:e,upperTick:r,curSqrtPrice:m,fix_amount_a:T,receive_amount:y,coinTypeA:A,coinTypeB:h,clmm_pool:j,use_route:!1,priceSplitPoint:q,removeLiquidity:v,maxLiquidity:w,request_id:b}))}if(console.log(l,"###swapResut calculateRemoveSwapAmount"),l){const a=new i(l.swapOutAmount);return{...l,swapOutAmountLimit:x(a.sub(a.mul(q)).toNumber(),I)}}return l};return{getAutoPools:D,getLpBalance:u,getAllBalances:t,getVault:async o=>{const e=await s.Vaults.getVault(o);return console.log(e,"vault##292"),e},deposit:f,remove:Y,getAutoPool:E,calculateDepositSwapAmount:z,calculateRemoveSwapAmount:Q}}const $o=Do("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{},currentAutoPoolStatus:"STATUS_RUNNING",slippage:localStorage.getItem("cetus-auto-slippage")||"0.1",autoPoolLoading:!0}),getters:{getPoolStore(){return Ro()}},actions:{setApyObj(n){this.apyObj=n},setAutoPoolList(n){this.autoPoolList=n;const d=Object.fromEntries(n.map((_,c)=>[_.address,_]));this.autoPoolObj={...d}},async getAutoPoolList(){var E;const d=await Ao("Sui").getAutoPools();console.log("ðŸš€ðŸš€ðŸš€ ~ file: autoPool.ts:35 ~ getAutoPoolList ~ list:",d),console.log(d,"list###");const _=this.getPoolStore,c=P.Sui.vaultFilter;let s;try{s=await fetch(`${P.Sui.api}/v2/sui/auto_pools`).then(u=>u.json()),s.data&&s.data.pools&&s.data.pools.length>0&&(this.apyObj=Object.fromEntries(s.data.pools.map((u,t)=>[u.object_id,{...u,apr:u.apr.replace("%","")>0&&u.apr.replace("%","")<.01?"<0.01%":x(u.apr.replace("%",""),2)+"%",resultApr:u.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{s=[],this.apyObj={}}console.log(s==null?void 0:s.data,"data##37");const p=((E=s==null?void 0:s.data)==null?void 0:E.pools)||[],M=p&&p.length>0?d.filter(u=>p.some(t=>t.object_id===u.id)):d;console.log(M,"##openPoolList");const D=(c?M:d).map(u=>{var f,Y,z,Q,g,o,e;const t=_.poolConfigObj[u.pool_id];console.log("ðŸš€ðŸš€ðŸš€ ~ file: autoPool.ts:55 ~ autoPoolList ~ poolStore.poolConfigObj:",_.poolConfigObj),console.log("autoPoolList map",u,t);const K=[t!=null&&t.needReverse?(Y=t==null?void 0:t.coinB)==null?void 0:Y.address:(f=t==null?void 0:t.coinA)==null?void 0:f.address,t!=null&&t.needReverse?(Q=t==null?void 0:t.coinA)==null?void 0:Q.address:(z=t==null?void 0:t.coinB)==null?void 0:z.address];return(g=t==null?void 0:t.rewarderInfo)==null||g.forEach(r=>{r.emissionsEveryDay>0&&K.push(ho(r.coinAddress))}),(e=(o=t==null?void 0:t.stable_farming)==null?void 0:o.stable_rewarder)==null||e.forEach(r=>{r.amount_second>0&&K.push(ho(r.coin))}),{...t,token_a:t.coinA,token_b:t.coinB,id:u.id,lp_token_type:u.lp_token_type,autoPoolPositionInfo:u.position,is_pause:u.is_pause,total_supply:u.total_supply,liquidity:u.liquidity,protocol_fee_rate:u.protocol_fee_rate,max_quota:u.max_quota,stakeProtocol:u.stake_protocol,quota_based_type:wo(u.quota_based_type).full_address,supportHaedalStake:!!u.stake_protocol,isTokenA:t!=null&&t.needReverse?(t==null?void 0:t.coin_b_address)=="0000000000000000000000000000000000000000000000000000000000000002::sui::SUI":(t==null?void 0:t.coin_a_address)=="0000000000000000000000000000000000000000000000000000000000000002::sui::SUI",rewardList:Array.from(new Set(K))}});this.autoPoolObj=Object.fromEntries(D.map((u,t)=>[u.address,u])),this.autoPoolList=D,console.log(D,"##autoPoolList")},async getMyAutoPoolPosition(n){var K,f,Y,z,Q;console.log("ðŸš€ ~ file: autoPool.ts:116 ~ getMyAutoPoolPosition ~ getMyAutoPoolPosition Start");const d=Ao("Sui"),_=n||this.autoPoolList;console.log("ðŸš€ ~ file: autoPool.ts:119 ~ getMyAutoPoolPosition ~ list:",_);const c=Bo("Sui"),s=[],{RATES:p}=this.getPoolStore,M=_.map(g=>{var o;return(g==null?void 0:g.address)||((o=g==null?void 0:g.autoPoolPositionInfo)==null?void 0:o.clmm_pool_id)}),D=await c.getPools(M);console.log("ðŸš€ ~ file: autoPool.ts:129 ~ getMyAutoPoolPosition ~ newClmmPools:",D);const E=Object.fromEntries(D.map(g=>[g.poolAddress,g])),u=await d.getAllBalances();console.log("ðŸš€ ~ file: autoPool.ts:148 ~ getMyAutoPoolPosition ~ allBalance:",u);const t=Object.fromEntries(u==null?void 0:u.map(g=>[wo(g.coinType).full_address,g]));for(let g=0;g<_.length;g++){const o=_[g];console.log(o,"poolINfo###");const e=E==null?void 0:E[o.address||o.autoPoolPositionInfo.clmm_pool_id];console.log("ðŸš€ ~ file: autoPool.ts:142 ~ getMyAutoPoolPosition ~ newPool:",e),console.log("ðŸš€ ~ file: autoPool.ts:148 ~ getMyAutoPoolPosition ~ poolInfo?.lp_token_type:",o==null?void 0:o.lp_token_type);const r=(K=t==null?void 0:t[wo(o==null?void 0:o.lp_token_type).full_address])==null?void 0:K.totalBalance;console.log("ðŸš€ ~ file: autoPool.ts:148 ~ getMyAutoPoolPosition ~ balance:",r);const m=(await c.getTokenListByCoinType([_[g].lp_token_type]))[0];console.log("ðŸš€ ~ file: autoPool.ts:154 ~ getMyAutoPoolPosition ~ lpInfo:",m);const T=((f=p[o.coinA.address])==null?void 0:f.price)||0,y=((Y=p[o.coinB.address])==null?void 0:Y.price)||0,A=o.autoPoolPositionInfo.tick_lower_index,h=o.autoPoolPositionInfo.tick_upper_index,j=Number(r)>0?eo.get_share_liquidity_by_amount({...o,liquidity:o==null?void 0:o.liquidity,total_supply:o==null?void 0:o.total_supply},r):0;console.log("ðŸš€ ~ file: autoPool.ts:159 ~ getMyAutoPoolPosition ~ liquidity:",j);const q={tick_lower_index:A,tick_upper_index:h,current_sqrt_price:e==null?void 0:e.current_sqrt_price,liquidity:j};console.log(o,"poolInfo##94");const I=c.getCoinAmountFromLiquidity({pool:{...o,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:q,roundUp:!1});console.log(I,"##amountInfo");const v=I.coinaAmount,w=I.coinbAmount,b=v,l=w,O=o.coinA.decimals,a=o.coinB.decimals,N=c.TickMath.tickIndexToPrice(Number(A),O,a).toString(),U=c.TickMath.tickIndexToPrice(Number(h),O,a).toString(),R=v>0?new i(T).mul(new i(v)).toNumber():0,C=w>0?new i(y).mul(new i(w)).toNumber():0,V=R>0&&R<.01?"<$0.01":`$${yo(x(R,2))}`,io=C>0&&C<.01?"<$0.01":`$${yo(x(C,2))}`,S=So.sqrtPriceX64ToPrice(e.current_sqrt_price,O,a),B=c.getCoinAmountFromLiquidity({pool:{...o,tick_lower_index:A,tick_upper_index:h,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:{...q,liquidity:o.liquidity},roundUp:!1}),k=new i(B.coinaAmount).toNumber(),L=new i(B.coinbAmount).toNumber();console.log(k,L,S.toString(),"###116");const Z=x(new i(k).mul(new i(T)).toNumber(),2),no=x(new i(L).mul(new i(y)).toNumber(),2);console.log(e,"newPool##"),console.log(k,L,T,y,Number(Z)+Number(no),"###poolCoinBNum");const{ratioA:J,ratioB:W}=eo.calculateDepositRatio(A,h,new F.BN(e==null?void 0:e.current_sqrt_price));console.log(J,W.toString(),"###139");const $=J.mul(100).toNumber().toFixed(0),G=100-Number($);console.log(k,L,$,G,"###147");let X=0;Number(r)>0&&(X=new i(r).div(Math.pow(10,m.decimals))),console.log("ðŸš€ ~ file: autoPool.ts:234 ~ getMyAutoPoolPosition ~ myLiquidity:",X.toString());const uo=new i(R).add(new i(C)).toNumber(),so=T&&y?uo>0&&uo<.01?"<0.01":x(new i(R).add(new i(C)).toString(),2):"--",ro=o.total_supply;let H=0;X>0&&ro>0&&(H=new i(X).mul(Math.pow(10,m.decimals)).div(new i(ro)).mul(100).toNumber()),console.log(H,"##myShare");const ao=new i(1).div(Math.pow(10,o.decimals)).toNumber();let oo=0;if(H>1)oo=x(H,2);else if(H>0&&H<ao)oo=`<${ao}`;else if(H==0)oo=0;else{const ko=Lo(H),vo=ko==-1?2:ko+2;oo=x(H,vo)}console.log(r,X.toString(),"###balance");const lo=(await c.getTokenListByCoinType([o.quota_based_type]))[0],po=_o(o.max_quota,lo.decimals);console.log(o.quota_based_type,lo,po,"##quoteCoinInfo");const co=lo.address==o.coin_b_address,mo=co?new i(B.coinaAmount).mul(o.price).add(B.coinbAmount):new i(B.coinaAmount).mul(1/o.price).add(B.coinbAmount),Po=((z=p[lo.address])==null?void 0:z.price)||0,go=mo.mul(new i(Po)).toNumber();console.log(co,go,"#isQuotaCoin");const bo=po,xo=co?new i(B.coinaAmount).mul(o.price).add(B.coinbAmount):new i(B.coinaAmount).mul(1/o.price).add(B.coinbAmount),qo=new i(bo).sub(xo).mul(y).toNumber();console.log(qo,"remainingTokenUSD##"),console.log(mo.toNumber(),"#poolTokenNum"),this.positionInfoObj[o.id]={tick_lower_index:A,tick_upper_index:h,current_sqrt_price:e.current_sqrt_price,myLiquidity:_o(r,m.decimals),amountA:b,amountB:l,...o,lpInfo:m,myAmountAUSD:V,myAmountBUSD:io,myLiquidityUSD:so,myShare:oo,minPrice:N,maxPrice:U,poolCoinARatio:$,poolCoinBRatio:G,poolCoinANum:k,poolCoinBNum:L,poolCoinAUSD:Z,poolCoinBUSD:no,quoteUSD:bo,poolUSD:go,balance:r,quoteCoinInfo:lo,remainingTokenUSD:qo,currentDeposit:go,positionLiquidity:j,total_supply:o.total_supply},s.push({tick_lower_index:A,tick_upper_index:h,current_sqrt_price:(Q=o==null?void 0:o.object)==null?void 0:Q.current_sqrt_price,myLiquidity:_o(r,m.decimals),amountA:b,amountB:l,...o,lpInfo:m,myAmountAUSD:V,myAmountBUSD:io,myLiquidityUSD:so,myShare:oo,minPrice:N,maxPrice:U,poolCoinARatio:$,poolCoinBRatio:G,poolCoinANum:k,poolCoinBNum:L,poolCoinAUSD:Z,poolCoinBUSD:no,quoteUSD:bo,poolUSD:go,balance:r,total_supply:o.total_supply})}this.positionInfoList=s,this.autoPoolLoading=!1,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(n){var ro,H,ao,oo,lo,po,co;console.log("ðŸš€ ~ file: autoPool.ts:116  ~ updatePositionItem Start");const d=Ao("Sui"),_=Bo("Sui"),c=await d.getAutoPool(n);console.log("ðŸš€ðŸš€ðŸš€ ~ file: autoPool.ts:318 ~ updatePositionItem ~ newPoolInfo:",c);const s=await _.getPool(c.address||c.position.clmm_pool_id);console.log("newPoolInfo:",c),console.log("newPool:",s),console.log("this.positionInfoObj[id]:",this.positionInfoObj[n]);const p={...this.positionInfoObj[n],autoPoolPositionInfo:c.position,...s},M=await d.getLpBalance(p.lp_token_type);console.log(M,"updatePositionItem lp balance");const D=(await _.getTokenListByCoinType([p.lp_token_type]))[0];console.log(M,"###balance updatePositionItem");const E=p.autoPoolPositionInfo.tick_lower_index,u=p.autoPoolPositionInfo.tick_upper_index;let t;c.total_supply==0?t=0:t=eo.get_share_liquidity_by_amount(c,String(M)),console.log(t,"##liquidity");const K={tick_lower_index:E,tick_upper_index:u,current_sqrt_price:s.current_sqrt_price,liquidity:t},f=_.getCoinAmountFromLiquidity({pool:{current_sqrt_price:s.current_sqrt_price,...p},position:K,roundUp:!1}),Y=f.coinaAmount,z=f.coinbAmount,{RATES:Q}=this.getPoolStore,g=c.total_supply,o=So.sqrtPriceX64ToPrice(s.current_sqrt_price,(ro=p==null?void 0:p.coinA)==null?void 0:ro.decimals,(H=p==null?void 0:p.coinB)==null?void 0:H.decimals),e=2,r=2,m=((oo=Q[(ao=p==null?void 0:p.coinA)==null?void 0:ao.address])==null?void 0:oo.price)||0,T=((po=Q[(lo=p==null?void 0:p.coinB)==null?void 0:lo.address])==null?void 0:po.price)||0,y=(f==null?void 0:f.coinaAmount)>0?new i(m).mul(new i(f==null?void 0:f.coinaAmount)).toNumber():0,A=(f==null?void 0:f.coinbAmount)>0?new i(T).mul(new i(f==null?void 0:f.coinbAmount)).toNumber():0,h=y>0&&y<.01?"<$0.01":`$${yo(x(y,2))}`,j=A>0&&A<.01?"<$0.01":`$${yo(x(A,2))}`;let q=new i(0);Number(M)>0&&(q=new i(M).div(Math.pow(10,D==null?void 0:D.decimals)),console.log("ðŸš€ðŸš€ðŸš€ ~ file: autoPool.ts:379 ~ updatePositionItem ~ myLiquidity:",q.toString()));const I=new i(y).add(new i(A)).toNumber(),v=m&&T?I>0&&I<.01?"<0.01":x(new i(y).add(new i(A)).toString(),2):"--";let w=0;q.toNumber()>0&&g>0&&(w=new i(q).mul(Math.pow(10,D.decimals)).div(new i(g)).mul(100).toNumber()),console.log(w,"##myShare");const b=new i(1).div(Math.pow(10,p.decimals)).toNumber();let l=0;if(w>1)l=x(w,2);else if(w>0&&w<b)l=`<${b}`;else if(w==0)l=0;else{const mo=Lo(w),Po=mo==-1?2:mo+2;l=x(w,Po)}const O=So.sqrtPriceX64ToPrice(s.current_sqrt_price,e,r),a=await _.getCoinAmountFromLiquidity({pool:{...p,tick_lower_index:E,tick_upper_index:u,current_sqrt_price:s==null?void 0:s.current_sqrt_price},position:{...K,liquidity:c.liquidity},roundUp:!1}),N=new i(a.coinaAmount).toNumber(),U=new i(a.coinbAmount).toNumber();console.log(N,U,O.toString(),"###116");const R=x(new i(N).mul(new i(m)).toNumber(),2),C=x(new i(U).mul(new i(T)).toNumber(),2);console.log(s,"newPool##"),console.log(N,U,m,T,Number(R)+Number(C),"###poolCoinBNum");const{ratioA:V,ratioB:io}=eo.calculateDepositRatio(E,u,new F.BN(s==null?void 0:s.current_sqrt_price));console.log(V,io.toString(),"###139");const S=V.mul(100).toNumber().toFixed(0),B=100-Number(S),k=(await _.getTokenListByCoinType([c.quota_based_type]))[0],L=_o(c.max_quota,k.decimals);console.log(c.quota_based_type,k,L,"##quoteCoinInfo");const Z=k.address==p.coin_b_address,no=Z?new i(a.coinaAmount).mul(p.price).add(a.coinbAmount):new i(a.coinaAmount).mul(1/p.price).add(a.coinbAmount),J=((co=Q[k.address])==null?void 0:co.price)||0,W=no.mul(new i(J)).toNumber(),$=L,G=Z?new i(a.coinaAmount).mul(p.price).add(a.coinbAmount):new i(a.coinaAmount).mul(1/p.price).add(a.coinbAmount),X=new i($).sub(G).mul(T).toNumber();console.log(X,"remainingTokenUSD##");const uo=_.TickMath.tickIndexToPrice(Number(E),e,r).toString(),so=_.TickMath.tickIndexToPrice(Number(u),e,r).toString();this.positionInfoObj[n]={...p,tick_lower_index:E,tick_upper_index:u,current_sqrt_price:s.current_sqrt_price,myLiquidity:_o(M,D==null?void 0:D.decimals),amountA:Y,amountB:z,myShare:l,myAmountAUSD:h,myAmountBUSD:j,myLiquidityUSD:v,poolCoinARatio:S,poolCoinBRatio:B,poolCoinANum:N,poolCoinBNum:U,poolCoinAUSD:R,poolCoinBUSD:C,quoteUSD:$,balance:M,price:o,quoteCoinInfo:k,remainingTokenUSD:X,currentDeposit:W,poolUSD:W,positionLiquidity:t,liquidity:c==null?void 0:c.liquidity,minPrice:uo,maxPrice:so,total_supply:c.total_supply},this.autoPoolLoading=!1,console.log(this.positionInfoObj[n],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:n}=await fetch(`${P.Sui.api}/v2/sui/auto_pools`).then(d=>d.json());n&&n.pools&&n.pools.length>0&&(this.apyObj=Object.fromEntries(n.pools.map((d,_)=>[d.object_id,{...d,apr:d.apr.replace("%","")>0&&d.apr.replace("%","")<.01?"<0.01%":x(d.apr.replace("%",""),2)+"%",resultApr:d.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}},async getVault(n,d){const _=Ao("Sui");d||(this.autoPoolLoading=!0);const{status:c}=await _.getVault(n);this.currentAutoPoolStatus=c,this.updatePositionItem(n),console.log(c,"status##")},setSlippage(n){console.log(n,"slippage##"),this.slippage=n,localStorage.setItem("cetus-auto-slippage",n)},logout(){this.getMyAutoPoolPosition(),this.positionUSDObj={}}}});export{Ao as a,$o as u};
