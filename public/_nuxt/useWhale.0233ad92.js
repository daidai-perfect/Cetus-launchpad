import{m as N,N as j,af as q}from"./entry.226b565b.js";import{g as i,v as Y,w as Z,u as $,Y as c,s as m,Z as C}from"./index.51f0dc7f.js";import{D as g}from"./decimal.0bdeb344.js";const G=q(),H=G.public.appEnv;function oe(a){const y={launchpad:i[a||"Sui"].launchpad,ido:i[a||"Sui"].ido,xcetus:i[a||"Sui"].xcetus,xcetus_dividends:i[a||"Sui"].xcetus_dividends,cetus_faucet:i[a||"Sui"].cetus_faucet,xtoken:i[a||"Sui"].xtoken,xtoken_dividends:i[a||"Sui"].xtoken_dividends,token_faucet:i[a||"Sui"].token_faucet,booster:i[a||"Sui"].booster,maker_bonus:i[a||"Sui"].maker_bonus},x={fullRpcUrl:localStorage.getItem(`${a}-currentRpclocal4`)||i[a||"Sui"].fullRpcUrl,simulationAccount:i[a||"Sui"].simulationAccount,cetus_config:i[a||"Sui"].cetus_config,clmm_pool:i[a||"Sui"].clmm_pool,integrate:i[a||"Sui"].integrate,deepbook:i[a||"Sui"].deepbook,deepbook_endpoint_v2:i[a||"Sui"].deepbook_endpoint_v2,aggregatorUrl:i[a||"Sui"].aggregatorUrl},M=new Y(x),n=new Z(y,M),S=$(),f=N(()=>S);j(()=>{f.value.address&&(n.ClmmSDK.senderAddress=f.value.address)});const _=async e=>{const t=await n.XCetusModule.getOwnerLockCetuss(e);return console.log(t,"===>lockWhales"),t},b=async(e,t)=>{const o=c.getAvailableXCetus(e,t);return console.log(o,"==>availableXwhale"),o},D=async e=>{const t=await n.XCetusModule.getOwnerCetusCoins(e);return console.log(t,"===>coins"),t},P=async e=>await n.XCetusModule.getOwnerVeNFT(e),k=async(e,t)=>{const o={amount:e};t&&(o.venft_id=t);const s=await n.XCetusModule.convertPayload(o),r={action:"xCETUSConvert",txbParams:o};return{txb:d(s),payloadParams:r}},X=async()=>{const e=await n.XCetusModule.mintVeNFTPayload();return d(e)},h=async(e,t)=>{const o=await n.XCetusModule.redeemNum(e,t);return console.log(o,"result===>"),{amountOut:o.amountOut,percent:m(new g(o.percent).mul(new g(100)).toString(),2)}},T=async(e,t)=>{const o=await n.XCetusModule.reverseRedeemNum(e,t);return{amountOut:o.amountOut,percent:m(new g(o.percent).mul(new g(100)).toString(),2)}},I=async(e,t,o)=>{const s={venft_id:t,amount:e,lock_day:o},r=await n.XCetusModule.redeemLockPayload(s),u={action:"xCETUSRedeemLock",txbParams:s};return{txb:d(r),payloadParams:u}},R=e=>c.getLockingCetuss(e),O=async(e,t)=>{const o=await n.XCetusModule.getLockCetus(e);if(o&&c.isLocked(o)){const s={venft_id:t,lock_id:e},r=n.XCetusModule.cancelRedeemPayload(s),u={action:"xCETUSCancelRedeem",txbParams:s};return{txb:d(r),payloadParams:u}}},L=async(e,t)=>{const o=await n.XCetusModule.getLockCetus(e);if(o&&!c.isLocked(o)){const s={venft_id:t,lock_id:e},r=await n.XCetusModule.redeemPayload(s),u={action:"xCETUSRedeem",txbParams:s};return{txb:d(r),payloadParams:u}}},E=async()=>{const e=await n.XCetusModule.getDividendManager();console.log("dividendManager:",e);const t=Number(c.getNextStartTime(e).toString());return console.log(t,"===>nextStartTime"),{nextStartTime:t,...e}},F=async(e,t)=>{const{venft_dividends_id_v2:o}=C(n.sdkOptions.xcetus_dividends),s=await n.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,o,e);return{rewards:s&&s.rewards||[]}},V=async e=>{const t=await n.XCetusModule.getDividendManager();if(console.log("dividendManager: ",t),t.bonus_types.length>0){const o=await n.XCetusModule.redeemDividendPayload(e,t.bonus_types);return d(o)}},W=e=>{const t=new Set;return e.forEach(o=>{o.rewards.forEach(s=>{s.amount>0&&t.add(s.coin_type)})}),Array.from(t)},U=async e=>{const t=await n.XCetusModule.getDividendManager(),{venft_dividends_id_v2:o}=C(n.sdkOptions.xcetus_dividends),s=await n.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,o,e);console.log("veNFTDividendInfo: ",s);const r=W(s.rewards),u=c.buildDividendRewardTypeListV2(s.rewards);console.log("ğŸš€ğŸš€ğŸš€ ~ file: useWhale.ts:245 ~ getRedeemDividendV2Payload ~ bonus_types:",r);const l={venft_id:e,bonus_types:r,bonus_types_v2:u,xTokenType:[n.XCetusModule.buileXTokenCoinType()]},v=[];s.rewards.forEach(w=>{w.vesrion=="v2"&&v.push(w.period)}),console.log("ğŸš€ğŸš€ğŸš€ ~ file: useWhale.ts:253 ~ phases ~ phases:",v.sort());const B=await n.XCetusModule.redeemDividendV3Payload(v.sort(),l.venft_id,l.bonus_types,l.bonus_types_v2,l.xTokenType),z={action:"xCETUSClaimStakingRwewards",txbParams:l};return{txb:d(B),payloadParams:z}},A=async e=>{console.log(e,"==>accountAddress");try{const t=await n.XCetusModule.getOwnerVeNFT(e);if(console.log("nfts: ",t),t){const o=await n.XCetusModule.getXcetusManager();console.log("xcetusManager: ",o);const s=new g(t.xcetus_balance).div(o.treasury).mul(100).toString();return console.log("rate: ",s),Number(s)>0&&Number(s)<.001?"<0.001":m(s,3)}else return 0}catch{return"--"}},K=async()=>{const e=await n.XCetusModule.getXcetusManager();return console.log("xcetusManager: ",e),e},d=e=>({transactionBlock:e,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}}),p=e=>{const t=Date.now()/1e3,{start_time:o,interval_day:s}=e;console.log(e,"#dividendManager");const r=H=="test"?Math.ceil((t-o)/(s*60)):Math.ceil((t-o)/(s*24*3600));return console.log(t,"===>currentTime"),console.log(o,"===>start_time"),console.log(t-o,"===>currentTime-start_time"),console.log((t-o)/(s*60),"(currentTime - start_time) / (interval_day * 60)"),r};return{getOwnerLockCetuss:_,getOwnerCetusCoins:D,getOwnerVeNFT:P,depositCetus:k,getMintVeNFTPayload:X,redeemNum:h,getRedeemLockPayload:I,getAvailableXCetus:b,getLockingCetuss:R,getCancelRedeemPayload:O,getVeNFTDividendInfo:F,reverseRedeemNum:T,getRedeemPayload:L,getRedeemDividendPayload:V,getMyShare:A,getDividendManager:E,getPeriod:p,getRedeemDividendV2Payload:U,getPhaseDividendInfo:async e=>{const t=p(e);console.log("ğŸš€ğŸš€ğŸš€ ~ file: useWhale.ts:320 ~ getPhaseDividendInfo ~ dividendManager:",e),console.log(t,"getPhaseDividendInfo period");let o=await n.XCetusModule.getPhaseDividendInfo(String(t));console.log(!o,"==>phaseDividendInfo");let s;if(!o){if(s=await n.XCetusModule.getPhaseDividendInfo(e.dividends.size),s)o=s;else for(let r=e.dividends.size;r>1;r--)if(s=await n.XCetusModule.getPhaseDividendInfo(String(r)),console.log("ğŸš€ğŸš€ğŸš€ ~ file: useWhale.ts:327 ~ getPhaseDividendInfo ~ lastPhaseDividendInfo:",s),s){o=s;break}}return console.log("ğŸš€ğŸš€ğŸš€ ~ file: useWhale.ts:336 ~ getPhaseDividendInfo ~ phaseDividendInfo:",o),o},getXcetusManager:K}}export{oe as u};
