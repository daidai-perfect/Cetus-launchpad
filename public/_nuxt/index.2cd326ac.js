var Ki=Object.defineProperty;var Ui=(e,t,i)=>t in e?Ki(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i;var q=(e,t,i)=>(Ui(e,typeof t!="symbol"?t+"":t,i),i);import{P as R,Q as Vi,R as Gi,S as rt,U as Xi,V as zi,W as X,X as we,Y as D,Z as m,_ as x,N as S,$ as Ae,O as u,a0 as v,a1 as be,a2 as oi,a3 as Ot,a4 as W,T as N,a5 as Oe,a6 as Ge,a7 as wt,a8 as Wi,a9 as Ji,aa as ai,ab as Dt,ac as Xe,b as P,C as ie,ad as Pe,ae as Hi,af as Yi,ag as Ze,ah as Ke,ai as Gt,aj as Xt,ak as Zi,al as Qi,am as zt,an as _t,ao as pt,ap as es}from"./pool.42a6ec0f.js";import{s as r,f as M,o as _,g as j,l as w,h as Je,i as ae,j as L,k as A,m as f,p as fe,q as He,t as ri,v as k,w as J,x as ne,y as ke,z as ts,A as vt,B as is,C as ss}from"./sha256.56fdff7c.js";import{D as $}from"./decimal.0bdeb344.js";const ci=32;function ns(e){return os(e)&&as(e)===ci}function V(e,t=!1){let i=e.toLowerCase();return!t&&i.startsWith("0x")&&(i=i.slice(2)),`0x${i.padStart(ci*2,"0")}`}function re(e,t=!1){return V(e,t)}function os(e){return/^(0x|0X)?[a-fA-F0-9]+$/.test(e)&&e.length%2===0}function as(e){return/^(0x|0X)/.test(e)?(e.length-2)/2:e.length/2}r();r();r();r();r();r();const Me=M([_({AddressOwner:r()}),_({ObjectOwner:r()}),_({Shared:_({initial_shared_version:j(r())})}),w("Immutable")]),rs=Je("SuiJsonValue",()=>!0),cs=M([_({u32:r()}),_({u64:r()}),_({f64:r()})]);_({attributes:ae(r(),j(cs)),featureFlags:ae(r(),L()),maxSupportedProtocolVersion:r(),minSupportedProtocolVersion:r(),protocolVersion:r()});M([r(),w("package")]);const ue=_({digest:r(),objectId:r(),version:M([A(),r()])}),us=_({payment:f(ue),owner:r(),price:r(),budget:r()}),ds=fe(ue,_({type:r(),owner:Me,previousTransaction:r()})),ls=ae(r(),He()),_s=ae(r(),ri()),ps=_({type:r(),fields:ls,hasPublicTransfer:L()}),Ct=_({disassembled:_s}),ms=M([fe(ps,_({dataType:w("moveObject")})),fe(Ct,_({dataType:w("package")}))]),hs=_({type:r(),hasPublicTransfer:L(),version:r(),bcsBytes:r()}),gs=_({id:r(),moduleMap:ae(r(),r())}),fs=M([fe(hs,_({dataType:w("moveObject")})),fe(gs,_({dataType:w("package")}))]);BigInt(1e9);r();const ui=_({code:r(),error:k(r()),object_id:k(r()),parent_object_id:k(r()),version:k(r()),digest:k(r())}),ys=_({data:j(k(ae(r(),r()))),error:j(k(ui))}),ks=M([ys,k(ae(r(),r()))]),di=_({objectId:r(),version:r(),digest:r(),type:j(k(r())),content:j(k(ms)),bcs:j(k(fs)),owner:j(k(Me)),previousTransaction:j(k(r())),storageRebate:j(k(r())),display:j(k(ks))});_({showType:j(k(L())),showContent:j(k(L())),showBcs:j(k(L())),showOwner:j(k(L())),showPreviousTransaction:j(k(L())),showStorageRebate:j(k(L())),showDisplay:j(k(L()))});M([w("Exists"),w("notExists"),w("Deleted")]);f(ds);const bs=_({data:j(k(di)),error:j(k(ui))});function ws(e){return e.data}function vs(e){if(e.error&&"object_id"in e.error&&"version"in e.error&&"digest"in e.error){const t=e.error;return{objectId:t.object_id,version:t.version,digest:t.digest}}}function Cs(e){if("reference"in e)return e.reference;const t=ws(e);return t?{objectId:t.objectId,version:t.version,digest:t.digest}:vs(e)}_({objectId:r(),atCheckpoint:k(A())});_({data:f(bs),nextCursor:k(j(r())),hasNextPage:L()});M([_({details:di,status:w("VersionFound")}),_({details:r(),status:w("ObjectNotExists")}),_({details:ue,status:w("ObjectDeleted")}),_({details:J([r(),A()]),status:w("VersionNotFound")}),_({details:_({asked_version:A(),latest_version:A(),object_id:r()}),status:w("VersionTooHigh")})]);const li=_({txDigest:r(),eventSeq:r()}),_i=_({id:li,packageId:r(),transactionModule:r(),sender:r(),type:r(),parsedJson:k(ae(r(),He())),bcs:k(r()),timestampMs:k(r())});_({data:f(_i),nextCursor:j(li),hasNextPage:L()});r();const Ss=_({epoch:r(),storage_charge:r(),computation_charge:r(),storage_rebate:r(),epoch_start_timestamp_ms:k(r())}),Ts=_({epoch:r(),round:r(),commit_timestamp_ms:r()}),Ps=_({objects:f(r())}),ce=M([w("GasCoin"),_({Input:A()}),_({Result:A()}),_({NestedResult:J([A(),A()])})]),As=_({arguments:k(f(ce)),type_arguments:k(f(r())),package:r(),module:r(),function:r()}),js=M([_({MoveCall:As}),_({TransferObjects:J([f(ce),ce])}),_({SplitCoins:J([ce,f(ce)])}),_({MergeCoins:J([ce,f(ce)])}),_({Publish:M([J([Ct,f(r())]),f(r())])}),_({Upgrade:M([J([Ct,f(r()),r(),ce]),J([f(r()),r(),ce])])}),_({MakeMoveVec:J([j(r()),f(ce)])})]),Os=M([_({type:w("pure"),valueType:j(r()),value:rs}),_({type:w("object"),objectType:w("immOrOwnedObject"),objectId:r(),version:r(),digest:r()}),_({type:w("object"),objectType:w("sharedObject"),objectId:r(),initialSharedVersion:r(),mutable:L()})]),Ds=_({transactions:f(js),inputs:f(Os)}),Is=M([fe(Ss,_({kind:w("ChangeEpoch")})),fe(Ts,_({kind:w("ConsensusCommitPrologue")})),fe(Ps,_({kind:w("Genesis")})),fe(Ds,_({kind:w("ProgrammableTransaction")}))]),pi=_({messageVersion:w("v1"),transaction:Is,sender:r(),gasData:us});r();const xs=M([r(),f(r())]);_({epoch:r(),signature:xs,signers_map:f(A())});const Es=_({computationCost:r(),storageCost:r(),storageRebate:r(),nonRefundableStorageFee:r()}),Ms=M([w("success"),w("failure")]),Ns=_({status:Ms,error:k(r())}),Qe=_({owner:Me,reference:ue}),Rs=_({objectId:r(),sequenceNumber:r()}),It=_({messageVersion:w("v1"),status:Ns,executedEpoch:r(),modifiedAtVersions:k(f(Rs)),gasUsed:Es,sharedObjects:k(f(ue)),transactionDigest:r(),created:k(f(Qe)),mutated:k(f(Qe)),unwrapped:k(f(Qe)),deleted:k(f(ue)),unwrappedThenDeleted:k(f(ue)),wrapped:k(f(ue)),gasObject:Qe,eventsDigest:j(k(r())),dependencies:k(f(r()))}),xt=f(_i),$s=J([f(A()),r()]),Bs=J([ce,f(A()),r()]),qs=_({mutableReferenceOutputs:k(f(Bs)),returnValues:k(f($s))});_({effects:It,events:xt,results:k(f(qs)),error:k(r())});r();const Ls=_({data:pi,txSignatures:f(r())}),Fs=_({type:w("published"),packageId:r(),version:r(),digest:r(),modules:f(r())}),Ks=_({type:w("transferred"),sender:r(),recipient:Me,objectType:r(),objectId:r(),version:r(),digest:r()}),Us=_({type:w("mutated"),sender:r(),owner:Me,objectType:r(),objectId:r(),version:r(),previousVersion:r(),digest:r()}),Vs=_({type:w("deleted"),sender:r(),objectType:r(),objectId:r(),version:r()}),Gs=_({type:w("wrapped"),sender:r(),objectType:r(),objectId:r(),version:r()}),Xs=_({type:w("created"),sender:r(),owner:Me,objectType:r(),objectId:r(),version:r(),digest:r()}),mi=M([Fs,Ks,Us,Vs,Gs,Xs]),hi=_({owner:Me,coinType:r(),amount:r()}),zs=_({digest:r(),transaction:k(Ls),effects:k(It),events:k(xt),timestampMs:k(r()),checkpoint:k(r()),confirmedLocalExecution:k(L()),objectChanges:k(f(mi)),balanceChanges:k(f(hi)),errors:k(f(r()))});_({showInput:k(L()),showEffects:k(L()),showEvents:k(L()),showObjectChanges:k(L()),showBalanceChanges:k(L())});_({data:f(zs),nextCursor:j(r()),hasNextPage:L()});_({effects:It,events:xt,objectChanges:f(mi),balanceChanges:f(hi),input:k(pi)});const Ws=M([r(),_({Object:r()})]);f(Ws);const Js=_({address:r(),name:r()}),Hs=M([w("Private"),w("Public"),w("Friend")]),Et=_({abilities:f(r())}),Ys=_({constraints:Et,isPhantom:L()}),Zs=_({TypeParameter:A()}),mt=J([_({module:r(),package:r(),function:r()}),r()]);_({rank3Days:f(mt),rank7Days:f(mt),rank30Days:f(mt)});function gi(e){if(!e)return!1;if(typeof e=="string"||ne(e,Zs)||fi(e))return!0;if(typeof e!="object")return!1;const t=e;return!!(ne(t.Reference,Le)||ne(t.MutableReference,Le)||ne(t.Vector,Le))}const Le=Je("SuiMoveNormalizedType",gi);function fi(e){if(!e||typeof e!="object")return!1;const t=e;if(!t.Struct||typeof t.Struct!="object")return!1;const i=t.Struct;return!(typeof i.address!="string"||typeof i.module!="string"||typeof i.name!="string"||!Array.isArray(i.typeArguments)||!i.typeArguments.every(s=>gi(s)))}Je("SuiMoveNormalizedStructType",fi);const Qs=_({visibility:Hs,isEntry:L(),typeParameters:f(Et),parameters:f(Le),return:f(Le)}),en=_({name:r(),type:Le}),tn=_({abilities:Et,typeParameters:f(Ys),fields:f(en)}),sn=_({fileFormatVersion:A(),address:r(),name:r(),friends:f(Js),structs:ae(r(),tn),exposedFunctions:ae(r(),Qs)});ae(r(),sn);function yi(e){return typeof e=="object"&&"MutableReference"in e?e.MutableReference:void 0}function nn(e){return typeof e=="object"&&"Reference"in e?e.Reference:void 0}function ki(e){if(typeof e=="object"&&"Struct"in e)return e;const t=nn(e),i=yi(e);if(typeof t=="object"&&"Struct"in t)return t;if(typeof i=="object"&&"Struct"in i)return i}const on=_({apy:A(),address:r()});_({epoch:r(),apys:f(on)});_({value:A()});const an=_({stakedSuiId:r(),stakeRequestEpoch:r(),stakeActiveEpoch:r(),principal:r(),status:M([w("Active"),w("Pending"),w("Unstaked")]),estimatedReward:k(r())});_({validatorAddress:r(),stakingPool:r(),stakes:f(an)});const rn=_({balance:_({value:A()}),distribution_counter:A(),current_distribution_amount:A(),stake_subsidy_period_length:A(),stake_subsidy_decrease_rate:A()});_({type:r(),fields:rn});_({value:A()});const cn=_({id:r(),size:A(),head:_({vec:f()}),tail:_({vec:f()})});_({id:r(),size:A()});_({type:r(),fields:cn});const un=_({exchangeRates:_({id:r(),size:A()}),id:r(),pendingStake:A(),pendingPoolTokenWithdraw:A(),pendingTotalSuiWithdraw:A(),poolTokenBalance:A(),rewardsPool:_({value:A()}),activationEpoch:_({vec:f()}),deactivationEpoch:_({vec:f()}),suiBalance:A()});_({type:r(),fields:un});const dn=f(J([r(),r()]));_({epoch:r(),validators:dn});const bi=_({suiAddress:r(),protocolPubkeyBytes:r(),networkPubkeyBytes:r(),workerPubkeyBytes:r(),proofOfPossessionBytes:r(),operationCapId:r(),name:r(),description:r(),imageUrl:r(),projectUrl:r(),p2pAddress:r(),netAddress:r(),primaryAddress:r(),workerAddress:r(),nextEpochProtocolPubkeyBytes:j(r()),nextEpochProofOfPossession:j(r()),nextEpochNetworkPubkeyBytes:j(r()),nextEpochWorkerPubkeyBytes:j(r()),nextEpochNetAddress:j(r()),nextEpochP2pAddress:j(r()),nextEpochPrimaryAddress:j(r()),nextEpochWorkerAddress:j(r()),votingPower:r(),gasPrice:r(),commissionRate:r(),nextEpochStake:r(),nextEpochGasPrice:r(),nextEpochCommissionRate:r(),stakingPoolId:r(),stakingPoolActivationEpoch:j(r()),stakingPoolDeactivationEpoch:j(r()),stakingPoolSuiBalance:r(),rewardsPool:r(),poolTokenBalance:r(),pendingStake:r(),pendingPoolTokenWithdraw:r(),pendingTotalSuiWithdraw:r(),exchangeRatesId:r(),exchangeRatesSize:r()});_({epoch:r(),protocolVersion:r(),systemStateVersion:r(),storageFundTotalObjectStorageRebates:r(),storageFundNonRefundableBalance:r(),referenceGasPrice:r(),safeMode:L(),safeModeStorageRewards:r(),safeModeComputationRewards:r(),safeModeStorageRebates:r(),safeModeNonRefundableStorageFee:r(),epochStartTimestampMs:r(),epochDurationMs:r(),stakeSubsidyStartEpoch:r(),maxValidatorCount:r(),minValidatorJoiningStake:r(),validatorLowStakeThreshold:r(),validatorVeryLowStakeThreshold:r(),validatorLowStakeGracePeriod:r(),stakeSubsidyBalance:r(),stakeSubsidyDistributionCounter:r(),stakeSubsidyCurrentDistributionAmount:r(),stakeSubsidyPeriodLength:r(),stakeSubsidyDecreaseRate:A(),totalStake:r(),activeValidators:f(bi),pendingActiveValidatorsId:r(),pendingActiveValidatorsSize:r(),pendingRemovals:f(r()),stakingPoolMappingsId:r(),stakingPoolMappingsSize:r(),inactivePoolsId:r(),inactivePoolsSize:r(),validatorCandidatesId:r(),validatorCandidatesSize:r(),atRiskValidators:f(J([r(),r()])),validatorReportRecords:f(J([r(),f(r())]))});const ln=_({coinType:r(),coinObjectId:r(),version:r(),digest:r(),balance:r(),previousTransaction:r()});_({data:f(ln),nextCursor:j(r()),hasNextPage:L()});_({coinType:r(),coinObjectCount:A(),totalBalance:r(),lockedBalance:_({epochId:k(A()),number:k(A())})});_({value:r()});const _n=_({lastCheckpointId:r(),epochEndTimestamp:r(),protocolVersion:r(),referenceGasPrice:r(),totalStake:r(),storageFundReinvestment:r(),storageCharge:r(),storageRebate:r(),storageFundBalance:r(),stakeSubsidyAmount:r(),totalGasFees:r(),totalStakeRewardsDistributed:r(),leftoverStorageFundInflow:r()}),pn=_({epoch:r(),validators:f(bi),epochTotalTransactions:r(),firstCheckpointId:r(),epochStartTimestamp:r(),endOfEpochInfo:j(_n),referenceGasPrice:j(A())});_({data:f(pn),nextCursor:j(r()),hasNextPage:L()});_({data:f(r()),hasNextPage:L(),nextCursor:j(r())});const mn=M([w("DynamicField"),w("DynamicObject")]),hn=_({type:r(),value:He()}),gn=_({name:hn,bcsName:r(),type:mn,objectType:r(),objectId:r(),version:A(),digest:r()});_({data:f(gn),nextCursor:j(r()),hasNextPage:L()});const fn=_({computationCost:r(),storageCost:r(),storageRebate:r(),nonRefundableStorageFee:r()});r();r();_({digest:f(A())});const wi=He();r();const yn=_({nextEpochCommittee:f(J([r(),r()])),nextEpochProtocolVersion:r(),epochCommitments:f(wi)});_({transaction:r(),effects:r()});const kn=_({epoch:r(),sequenceNumber:r(),digest:r(),networkTotalTransactions:r(),previousDigest:k(r()),epochRollingGasCostSummary:fn,timestampMs:r(),endOfEpochData:k(yn),validatorSignature:r(),transactions:f(r()),checkpointCommitments:f(wi)});_({data:f(kn),nextCursor:j(r()),hasNextPage:L()});_({currentTps:A(),tps30Days:A(),currentCheckpoint:r(),currentEpoch:r(),totalAddresses:r(),totalObjects:r(),totalPackages:r()});const bn=_({checkpoint:A(),epoch:A(),timestampMs:A(),cumulativeAddresses:A(),cumulativeActiveAddresses:A(),dailyActiveAddresses:A()});f(bn);const vi="0x2",Mt="0x1",wn="object",vn="ID",Cn=`${vi}::sui::SUI`;re("0x6");_({decimals:A(),name:r(),symbol:r(),description:r(),iconUrl:j(r()),id:j(r())});const Sn="ascii",Tn="String",Pn="string",An="String",jn="option",On="Option",Dn={address:vi,module:wn,name:vn},In={address:Mt,module:Sn,name:Tn},xn={address:Mt,module:Pn,name:An},En={address:Mt,module:jn,name:On},et=(e,t)=>e.address===t.address&&e.module===t.module&&e.name===t.name;function Mn(e){var i;const t=(i=ki(e))==null?void 0:i.Struct;return(t==null?void 0:t.address)==="0x2"&&(t==null?void 0:t.module)==="tx_context"&&(t==null?void 0:t.name)==="TxContext"}function ht(e,t){if(!(typeof t>"u")&&typeof t!==e)throw new Error(`Expect ${t} to be ${e}, received ${typeof t}`)}const Nn=["Address","Bool","U8","U16","U32","U64","U128","U256"];function St(e,t){if(typeof e=="string"&&Nn.includes(e)){if(e in["U8","U16","U32","U64","U128","U256"])ht("number",t);else if(e==="Bool")ht("boolean",t);else if(e==="Address"&&(ht("string",t),t&&!ns(t)))throw new Error("Invalid Sui Address");return e.toLowerCase()}else if(typeof e=="string")throw new Error(`Unknown pure normalized type ${JSON.stringify(e,null,2)}`);if("Vector"in e){if((t===void 0||typeof t=="string")&&e.Vector==="U8")return"string";if(t!==void 0&&!Array.isArray(t))throw new Error(`Expect ${t} to be a array, received ${typeof t}`);const i=St(e.Vector,t?t[0]:void 0);return i===void 0?void 0:`vector<${i}>`}if("Struct"in e){if(et(e.Struct,In))return"string";if(et(e.Struct,xn))return"utf8string";if(et(e.Struct,Dn))return"address";if(et(e.Struct,En)){const i={Vector:e.Struct.typeArguments[0]};return St(i,t)}}}const Re="vector",Rn={kind:"TransactionKind",sender:R.ADDRESS,gasData:"GasData",expiration:"TransactionExpiration"},$n={enums:{"Option<T>":{None:null,Some:"T"},ObjectArg:{ImmOrOwned:"SuiObjectRef",Shared:"SharedObjectRef"},CallArg:{Pure:[Re,R.U8],Object:"ObjectArg",ObjVec:[Re,"ObjectArg"]},TypeTag:{bool:null,u8:null,u64:null,u128:null,address:null,signer:null,vector:"TypeTag",struct:"StructTag",u16:null,u32:null,u256:null},TransactionKind:{ProgrammableTransaction:"ProgrammableTransaction",ChangeEpoch:null,Genesis:null,ConsensusCommitPrologue:null},TransactionExpiration:{None:null,Epoch:"unsafe_u64"},TransactionData:{V1:"TransactionDataV1"}},structs:{SuiObjectRef:{objectId:R.ADDRESS,version:R.U64,digest:"ObjectDigest"},SharedObjectRef:{objectId:R.ADDRESS,initialSharedVersion:R.U64,mutable:R.BOOL},StructTag:{address:R.ADDRESS,module:R.STRING,name:R.STRING,typeParams:[Re,"TypeTag"]},GasData:{payment:[Re,"SuiObjectRef"],owner:R.ADDRESS,price:R.U64,budget:R.U64},SenderSignedData:{data:"TransactionData",txSignatures:[Re,[Re,R.U8]]},TransactionDataV1:Rn},aliases:{ObjectDigest:R.BASE58}},Nt=new R({...Vi(),types:$n});Nt.registerType("utf8string",(e,t)=>{const i=Array.from(new TextEncoder().encode(t));return e.writeVec(i,(s,n)=>s.write8(n))},e=>{let t=e.readVec(i=>i.read8());return new TextDecoder().decode(new Uint8Array(t))});Nt.registerType("unsafe_u64",(e,t)=>e.write64(t),e=>Number.parseInt(e.read64(),10));const Bn=/^vector<(.+)>$/,qn=/^([^:]+)::([^:]+)::([^<]+)(<(.+)>)?/;class he{static parseFromStr(t,i=!1){if(t==="address")return{address:null};if(t==="bool")return{bool:null};if(t==="u8")return{u8:null};if(t==="u16")return{u16:null};if(t==="u32")return{u32:null};if(t==="u64")return{u64:null};if(t==="u128")return{u128:null};if(t==="u256")return{u256:null};if(t==="signer")return{signer:null};const s=t.match(Bn);if(s)return{vector:he.parseFromStr(s[1],i)};const n=t.match(qn);if(n)return{struct:{address:i?V(n[1]):n[1],module:n[2],name:n[3],typeParams:n[5]===void 0?[]:he.parseStructTypeArgs(n[5],i)}};throw new Error(`Encountered unexpected token when parsing type args for ${t}`)}static parseStructTypeArgs(t,i=!1){return Gi(t).map(s=>he.parseFromStr(s,i))}static tagToString(t){if("bool"in t)return"bool";if("u8"in t)return"u8";if("u16"in t)return"u16";if("u32"in t)return"u32";if("u64"in t)return"u64";if("u128"in t)return"u128";if("u256"in t)return"u256";if("address"in t)return"address";if("signer"in t)return"signer";if("vector"in t)return`vector<${he.tagToString(t.vector)}>`;if("struct"in t){const i=t.struct,s=i.typeParams.map(he.tagToString).join(", ");return`${i.address}::${i.module}::${i.name}${s?`<${s}>`:""}`}throw new Error("Invalid TypeTag")}}const Ci="Argument",z="vector",Ln="Option",Fn="CallArg",Wt="TypeTag",Kn="ProgrammableTransaction",Tt="ProgrammableMoveCall",Si="Transaction",Jt="CompressedSignature",Ht="PublicKey",Yt="MultiSigPublicKey",Zt="MultiSigPkMap",Un="MultiSig",Rt="EnumKind",Vn=[Rt,Si],_e=[Rt,Ci],Ti="SimpleProgrammableMoveCall",oe=new R(Nt);$t(oe,"FixedArray[64]",64);$t(oe,"FixedArray[33]",33);$t(oe,"FixedArray[32]",32);oe.registerStructType(Kn,{inputs:[z,Fn],transactions:[z,Vn]}).registerEnumType(Ci,{GasCoin:null,Input:{index:R.U16},Result:{index:R.U16},NestedResult:{index:R.U16,resultIndex:R.U16}}).registerStructType(Tt,{package:R.ADDRESS,module:R.STRING,function:R.STRING,type_arguments:[z,Wt],arguments:[z,_e]}).registerEnumType(Si,{MoveCall:Ti,TransferObjects:{objects:[z,_e],address:_e},SplitCoins:{coin:_e,amounts:[z,_e]},MergeCoins:{destination:_e,sources:[z,_e]},Publish:{modules:[z,[z,R.U8]],dependencies:[z,R.ADDRESS]},MakeMoveVec:{type:[Ln,Wt],objects:[z,_e]},Upgrade:{modules:[z,[z,R.U8]],dependencies:[z,R.ADDRESS],packageId:R.ADDRESS,ticket:_e}}).registerEnumType(Jt,{ED25519:["FixedArray[64]","u8"],Secp256k1:["FixedArray[64]","u8"],Secp256r1:["FixedArray[64]","u8"]}).registerEnumType(Ht,{ED25519:["FixedArray[32]","u8"],Secp256k1:["FixedArray[33]","u8"],Secp256r1:["FixedArray[33]","u8"]}).registerStructType(Zt,{pubKey:Ht,weight:R.U8}).registerStructType(Yt,{pk_map:[z,Zt],threshold:R.U16}).registerStructType(Un,{sigs:[z,Jt],bitmap:R.U16,multisig_pk:Yt});oe.registerType([Rt,"T"],function(t,i,s,n){const a={[i.kind]:i},[c]=s;return this.getTypeInterface(c)._encodeRaw.call(this,t,a,s,n)},function(t,i,s){const[n]=i,o=this.getTypeInterface(n)._decodeRaw.call(this,t,i,s),a=Object.keys(o)[0];return{kind:a,...o[a]}},e=>{if(typeof e!="object"&&!("kind"in e))throw new Error(`EnumKind: Missing property "kind" in the input ${JSON.stringify(e)}`);return!0});oe.registerType(Ti,function(t,i,s,n){const[o,a,c]=i.target.split("::"),d=i.typeArguments.map(l=>he.parseFromStr(l,!0));return this.getTypeInterface(Tt)._encodeRaw.call(this,t,{package:V(o),module:a,function:c,type_arguments:d,arguments:i.arguments},s,n)},function(t,i,s){let n=oe.getTypeInterface(Tt)._decodeRaw.call(this,t,i,s);return{target:[n.package,n.module,n.function].join("::"),arguments:n.arguments,typeArguments:n.type_arguments.map(he.tagToString)}},e=>e.target.split("::").length===3);function $t(e,t,i){e.registerType(t,function(n,o,a,c){if(o.length!==i)throw new Error(`Expected fixed array of length ${i}, got ${o.length}`);if(a.length!==1)throw new Error(`Expected one type parameter in a fixed array, got ${a.length}`);let[d]=typeof a[0]=="string"?[a[0],[]]:a[0];for(let l of o)this.getTypeInterface(d)._encodeRaw.call(this,n,l,a,c);return n},function(n,o,a){if(o.length!==1)throw new Error(`Expected one type parameter in a fixed array, got ${o.length}`);let c=[],[d]=typeof o[0]=="string"?[o[0],[]]:o[0];for(let l=0;l<i;l++)c.push(this.getTypeInterface(d)._decodeRaw.call(this,n,o,a));return c})}const Gn=M([_({ImmOrOwned:ue}),_({Shared:_({objectId:r(),initialSharedVersion:M([ke(),r()]),mutable:L()})})]),ct=_({Pure:f(ke())}),Xn=_({Object:Gn}),Ue=M([ct,Xn]),ge={Pure(e,t){return{Pure:Array.from(e instanceof Uint8Array?e:oe.ser(t,e,{maxSize:1/0}).toBytes())}},ObjectRef({objectId:e,digest:t,version:i}){return{Object:{ImmOrOwned:{digest:t,version:i,objectId:V(e)}}}},SharedObjectRef({objectId:e,mutable:t,initialSharedVersion:i}){return{Object:{Shared:{mutable:t,initialSharedVersion:i,objectId:V(e)}}}}};function Qt(e){return typeof e=="string"?V(e):"ImmOrOwned"in e.Object?V(e.Object.ImmOrOwned.objectId):V(e.Object.Shared.objectId)}function zn(e){return typeof e=="object"&&"Object"in e&&"Shared"in e.Object?e.Object.Shared:void 0}function Wn(e){var t;return((t=zn(e))==null?void 0:t.mutable)??!1}function Q(e,t){return ts(e,t)}const ut=Symbol("transaction-argument-type"),Jn=e=>M([_({None:M([w(!0),w(null)])}),_({Some:e})]),ze=_({kind:w("Input"),index:ke(),value:k(He()),type:k(M([w("pure"),w("object")]))}),Bt=[ze,_({kind:w("GasCoin")}),_({kind:w("Result"),index:ke()}),_({kind:w("NestedResult"),index:ke(),resultIndex:ke()})],Hn=M([...Bt]),xe=M([...Bt]);xe[ut]={kind:"object"};const Pi=e=>{const t=M([...Bt]);return t[ut]={kind:"pure",type:e},t},Ai=_({kind:w("MoveCall"),target:Je("target",r().validator),typeArguments:f(r()),arguments:f(Hn)}),ji=_({kind:w("TransferObjects"),objects:f(xe),address:Pi(R.ADDRESS)}),Oi=_({kind:w("SplitCoins"),coin:xe,amounts:f(Pi("u64"))}),Di=_({kind:w("MergeCoins"),destination:xe,sources:f(xe)}),Ii=_({kind:w("MakeMoveVec"),type:k(Jn(ae(r(),ri()))),objects:f(xe)}),xi=_({kind:w("Publish"),modules:f(f(ke())),dependencies:f(r())}),Ei=_({kind:w("Upgrade"),modules:f(f(ke())),dependencies:f(r()),packageId:r(),ticket:xe}),Mi=[Ai,ji,Oi,Di,xi,Ei,Ii],Ni=M([...Mi]);function Yn(e){return vt(e,Ni),Mi.find(t=>ne(e,t))}const ve={MoveCall(e){return Q({kind:"MoveCall",target:e.target,arguments:e.arguments??[],typeArguments:e.typeArguments??[]},Ai)},TransferObjects(e,t){return Q({kind:"TransferObjects",objects:e,address:t},ji)},SplitCoins(e,t){return Q({kind:"SplitCoins",coin:e,amounts:t},Oi)},MergeCoins(e,t){return Q({kind:"MergeCoins",destination:e,sources:t},Di)},Publish({modules:e,dependencies:t}){return Q({kind:"Publish",modules:e.map(i=>typeof i=="string"?Array.from(rt(i)):i),dependencies:t.map(i=>re(i))},xi)},Upgrade({modules:e,dependencies:t,packageId:i,ticket:s}){return Q({kind:"Upgrade",modules:e.map(n=>typeof n=="string"?Array.from(rt(n)):n),dependencies:t.map(n=>re(n)),packageId:i,ticket:s},Ei)},MakeMoveVec({type:e,objects:t}){return Q({kind:"MakeMoveVec",type:e?{Some:he.parseFromStr(e)}:{None:null},objects:t},Ii)}};function Zn(e,t){const i=Array.from(`${e}::`).map(n=>n.charCodeAt(0)),s=new Uint8Array(i.length+t.length);return s.set(i),s.set(t,i.length),is(s,{dkLen:32})}const Qn=k(j(M([_({Epoch:ke()}),_({None:M([w(!0),w(null)])})]))),ei=Je("StringEncodedBigint",e=>{if(!["string","number","bigint"].includes(typeof e))return!1;try{return BigInt(e),!0}catch{return!1}}),eo=_({budget:k(ei),price:k(ei),payment:k(f(ue)),owner:k(r())}),tt=_({version:w(1),sender:k(r()),expiration:Qn,gasConfig:eo,inputs:f(ze),transactions:f(Ni)});function ti(e){return V(e).replace("0x","")}class ye{constructor(t){this.version=1,this.sender=t==null?void 0:t.sender,this.expiration=t==null?void 0:t.expiration,this.gasConfig=(t==null?void 0:t.gasConfig)??{},this.inputs=(t==null?void 0:t.inputs)??[],this.transactions=(t==null?void 0:t.transactions)??[]}static fromKindBytes(t){const i=oe.de("TransactionKind",t),s=i==null?void 0:i.ProgrammableTransaction;if(!s)throw new Error("Unable to deserialize from bytes.");const n=Q({version:1,gasConfig:{},inputs:s.inputs.map((o,a)=>Q({kind:"Input",value:o,index:a,type:ne(o,ct)?"pure":"object"},ze)),transactions:s.transactions},tt);return ye.restore(n)}static fromBytes(t){var a;const i=oe.de("TransactionData",t),s=i==null?void 0:i.V1,n=(a=s==null?void 0:s.kind)==null?void 0:a.ProgrammableTransaction;if(!s||!n)throw new Error("Unable to deserialize from bytes.");const o=Q({version:1,sender:s.sender,expiration:s.expiration,gasConfig:s.gasData,inputs:n.inputs.map((c,d)=>Q({kind:"Input",value:c,index:d,type:ne(c,ct)?"pure":"object"},ze)),transactions:n.transactions},tt);return ye.restore(o)}static restore(t){vt(t,tt);const i=new ye;return Object.assign(i,t),i}static getDigestFromBytes(t){const i=Zn("TransactionData",t);return Xi(i)}build({maxSizeBytes:t=1/0,overrides:i,onlyTransactionKind:s}={}){const n=this.inputs.map(p=>(vt(p.value,Ue),p.value)),o={ProgrammableTransaction:{inputs:n,transactions:this.transactions}};if(s)return oe.ser("TransactionKind",o,{maxSize:t}).toBytes();const a=(i==null?void 0:i.expiration)??this.expiration,c=(i==null?void 0:i.sender)??this.sender,d={...this.gasConfig,...i==null?void 0:i.gasConfig};if(!c)throw new Error("Missing transaction sender");if(!d.budget)throw new Error("Missing gas budget");if(!d.payment)throw new Error("Missing gas payment");if(!d.price)throw new Error("Missing gas price");const l={sender:ti(c),expiration:a||{None:!0},gasData:{payment:d.payment,owner:ti(this.gasConfig.owner??c),price:BigInt(d.price),budget:BigInt(d.budget)},kind:{ProgrammableTransaction:{inputs:n,transactions:this.transactions}}};return oe.ser("TransactionData",{V1:l},{maxSize:t}).toBytes()}getDigest(){const t=this.build({onlyTransactionKind:!1});return ye.getDigestFromBytes(t)}snapshot(){return Q(this,tt)}}var qt=(e,t,i)=>{if(!t.has(e))throw TypeError("Cannot "+i)},F=(e,t,i)=>(qt(e,t,"read from private field"),i?i.call(e):t.get(e)),Ce=(e,t,i)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,i)},it=(e,t,i,s)=>(qt(e,t,"write to private field"),s?s.call(e,i):t.set(e,i),i),Z=(e,t,i)=>(qt(e,t,"access private method"),i),E,nt,Pt,je,Ee,Lt,Ri,Ft,$i,Kt,Bi,Ut,qi,ot,At;const to={maxPureArgumentSize:16*1024,maxTxGas:5e10,maxGasObjects:256,maxTxSizeBytes:128*1024};function io(e){const t={kind:"Result",index:e},i=[],s=n=>i[n]??(i[n]={kind:"NestedResult",index:e,resultIndex:n});return new Proxy(t,{set(){throw new Error("The transaction result is a proxy, and does not support setting properties directly")},get(n,o){if(o in n)return Reflect.get(n,o);if(o===Symbol.iterator)return function*(){let c=0;for(;;)yield s(c),c++};if(typeof o=="symbol")return;const a=parseInt(o,10);if(!(Number.isNaN(a)||a<0))return s(a)}})}function We(e){if(!e.client&&!e.provider)throw new Error("No provider passed to Transaction#build, but transaction data was not sufficient to build offline.");return e.client??e.provider}const ii=Symbol.for("@mysten/transaction"),gt={maxTxGas:"max_tx_gas",maxGasObjects:"max_gas_payment_objects",maxTxSizeBytes:"max_tx_size_bytes",maxPureArgumentSize:"max_pure_argument_size"},so=1000n,no=50,oo=(e,t)=>Array.from({length:Math.ceil(e.length/t)},(i,s)=>e.slice(s*t,s*t+t)),ao=class jt{constructor(t){Ce(this,nt),Ce(this,je),Ce(this,Lt),Ce(this,Ft),Ce(this,Kt),Ce(this,Ut),Ce(this,ot),Ce(this,E,void 0),it(this,E,new ye(t?t.blockData:void 0))}static is(t){return!!t&&typeof t=="object"&&t[ii]===!0}static fromKind(t){const i=new jt;return it(i,E,ye.fromKindBytes(typeof t=="string"?rt(t):t)),i}static from(t){const i=new jt;return typeof t!="string"||!t.startsWith("{")?it(i,E,ye.fromBytes(typeof t=="string"?rt(t):t)):it(i,E,ye.restore(JSON.parse(t))),i}static get Transactions(){return ve}static get Inputs(){return ge}setSender(t){F(this,E).sender=t}setSenderIfNotSet(t){F(this,E).sender||(F(this,E).sender=t)}setExpiration(t){F(this,E).expiration=t}setGasPrice(t){F(this,E).gasConfig.price=String(t)}setGasBudget(t){F(this,E).gasConfig.budget=String(t)}setGasOwner(t){F(this,E).gasConfig.owner=t}setGasPayment(t){F(this,E).gasConfig.payment=t.map(i=>ss(i,ue))}get blockData(){return F(this,E).snapshot()}get[ii](){return!0}get gas(){return{kind:"GasCoin"}}object(t){const i=Qt(t);return F(this,E).inputs.find(n=>n.type==="object"&&i===Qt(n.value))??Z(this,nt,Pt).call(this,"object",t)}objectRef(...t){return this.object(ge.ObjectRef(...t))}sharedObjectRef(...t){return this.object(ge.SharedObjectRef(...t))}pure(t,i){return Z(this,nt,Pt).call(this,"pure",t instanceof Uint8Array?ge.Pure(t):i?ge.Pure(t,i):t)}add(t){const i=F(this,E).transactions.push(t);return io(i-1)}splitCoins(...t){return this.add(ve.SplitCoins(...t))}mergeCoins(...t){return this.add(ve.MergeCoins(...t))}publish(...t){return this.add(ve.Publish(...t))}upgrade(...t){return this.add(ve.Upgrade(...t))}moveCall(...t){return this.add(ve.MoveCall(...t))}transferObjects(...t){return this.add(ve.TransferObjects(...t))}makeMoveVec(...t){return this.add(ve.MakeMoveVec(...t))}serialize(){return JSON.stringify(F(this,E).snapshot())}async sign(t){const{signer:i,...s}=t,n=await this.build(s);return i.signTransactionBlock(n)}async build(t={}){return await Z(this,ot,At).call(this,t),F(this,E).build({maxSizeBytes:Z(this,je,Ee).call(this,"maxTxSizeBytes",t),onlyTransactionKind:t.onlyTransactionKind})}async getDigest(t={}){return await Z(this,ot,At).call(this,t),F(this,E).getDigest()}};E=new WeakMap;nt=new WeakSet;Pt=function(e,t){const i=F(this,E).inputs.length,s=Q({kind:"Input",value:typeof t=="bigint"?String(t):t,index:i,type:e},ze);return F(this,E).inputs.push(s),s};je=new WeakSet;Ee=function(e,{protocolConfig:t,limits:i}){if(i&&typeof i[e]=="number")return i[e];if(!t)return to[e];const s=t==null?void 0:t.attributes[gt[e]];if(!s)throw new Error(`Missing expected protocol config: "${gt[e]}"`);const n="u64"in s?s.u64:"u32"in s?s.u32:s.f64;if(!n)throw new Error(`Unexpected protocol config value found for: "${gt[e]}"`);return Number(n)};Lt=new WeakSet;Ri=function(e){const t=Z(this,je,Ee).call(this,"maxPureArgumentSize",e);F(this,E).inputs.forEach((i,s)=>{if(ne(i.value,ct)&&i.value.Pure.length>t)throw new Error(`Input at index ${s} is too large, max pure input size is ${t} bytes, got ${i.value.Pure.length} bytes`)})};Ft=new WeakSet;$i=async function(e){if(F(this,E).gasConfig.payment){const n=Z(this,je,Ee).call(this,"maxGasObjects",e);if(F(this,E).gasConfig.payment.length>n)throw new Error(`Payment objects exceed maximum amount: ${n}`)}if(e.onlyTransactionKind||F(this,E).gasConfig.payment)return;const t=F(this,E).gasConfig.owner??F(this,E).sender,s=(await We(e).getCoins({owner:t,coinType:Cn})).data.filter(n=>!F(this,E).inputs.find(a=>ne(a.value,Ue)&&"Object"in a.value&&"ImmOrOwned"in a.value.Object?n.coinObjectId===a.value.Object.ImmOrOwned.objectId:!1)).slice(0,Z(this,je,Ee).call(this,"maxGasObjects",e)-1).map(n=>({objectId:n.coinObjectId,digest:n.digest,version:n.version}));if(!s.length)throw new Error("No valid gas coins found for the transaction.");this.setGasPayment(s)};Kt=new WeakSet;Bi=async function(e){e.onlyTransactionKind||F(this,E).gasConfig.price||this.setGasPrice(await We(e).getReferenceGasPrice())};Ut=new WeakSet;qi=async function(e){const{inputs:t,transactions:i}=F(this,E),s=[],n=[];if(i.forEach(o=>{if(o.kind==="MoveCall"){o.arguments.some(d=>d.kind==="Input"&&!ne(t[d.index].value,Ue))&&s.push(o);return}const a=Yn(o);a.schema&&Object.entries(o).forEach(([c,d])=>{if(c==="kind")return;const l=a.schema[c],p=l.type==="array",h=p?l.schema[ut]:l[ut];if(!h)return;const g=b=>{const I=t[b];if(!I)throw new Error(`Missing input ${d.index}`);if(!ne(I.value,Ue))if(h.kind==="object"&&typeof I.value=="string")n.push({id:I.value,input:I});else if(h.kind==="pure")I.value=ge.Pure(I.value,h.type);else throw new Error("Unexpected input format.")};if(p)d.forEach(b=>{b.kind==="Input"&&g(b.index)});else{if(d.kind!=="Input")return;g(d.index)}})}),s.length&&await Promise.all(s.map(async o=>{const[a,c,d]=o.target.split("::"),l=await We(e).getNormalizedMoveFunction({package:re(a),module:c,function:d}),h=l.parameters.length>0&&Mn(l.parameters.at(-1))?l.parameters.slice(0,l.parameters.length-1):l.parameters;if(h.length!==o.arguments.length)throw new Error("Incorrect number of arguments.");h.forEach((g,b)=>{const I=o.arguments[b];if(I.kind!=="Input")return;const O=t[I.index];if(ne(O.value,Ue))return;const T=O.value,y=St(g,T);if(y){O.value=ge.Pure(T,y);return}if(ki(g)!=null||typeof g=="object"&&"TypeParameter"in g){if(typeof T!="string")throw new Error(`Expect the argument to be an object id string, got ${JSON.stringify(T,null,2)}`);n.push({id:T,input:O,normalizedType:g});return}throw new Error(`Unknown call arg type ${JSON.stringify(g,null,2)} for value ${JSON.stringify(T,null,2)}`)})})),n.length){const o=[...new Set(n.map(({id:p})=>p))],a=oo(o,no),c=(await Promise.all(a.map(p=>We(e).multiGetObjects({ids:p,options:{showOwner:!0}})))).flat();let d=new Map(o.map((p,h)=>[p,c[h]]));const l=Array.from(d).filter(([p,h])=>h.error).map(([p,h])=>p);if(l.length)throw new Error(`The following input objects are invalid: ${l.join(", ")}`);n.forEach(({id:p,input:h,normalizedType:g})=>{var T;const b=d.get(p),I=(T=b.data)==null?void 0:T.owner,O=I&&typeof I=="object"&&"Shared"in I?I.Shared.initial_shared_version:void 0;if(O){const y=Wn(h.value)||g!=null&&yi(g)!=null;h.value=ge.SharedObjectRef({objectId:p,initialSharedVersion:O,mutable:y})}else h.value=ge.ObjectRef(Cs(b))})}};ot=new WeakSet;At=async function(e){if(!e.onlyTransactionKind&&!F(this,E).sender)throw new Error("Missing transaction sender");const t=e.client||e.provider;if(!e.protocolConfig&&!e.limits&&t&&(e.protocolConfig=await t.getProtocolConfig()),await Promise.all([Z(this,Kt,Bi).call(this,e),Z(this,Ut,qi).call(this,e)]),!e.onlyTransactionKind&&(await Z(this,Ft,$i).call(this,e),!F(this,E).gasConfig.budget)){const i=await We(e).dryRunTransactionBlock({transactionBlock:F(this,E).build({maxSizeBytes:Z(this,je,Ee).call(this,"maxTxSizeBytes",e),overrides:{gasConfig:{budget:String(Z(this,je,Ee).call(this,"maxTxGas",e)),payment:[]}}})});if(i.effects.status.status!=="success")throw new Error(`Dry run failed, could not automatically determine a budget: ${i.effects.status.error}`,{cause:i});const s=so*BigInt(this.blockData.gasConfig.price||1n),n=BigInt(i.effects.gasUsed.computationCost)+s,o=n+BigInt(i.effects.gasUsed.storageCost)-BigInt(i.effects.gasUsed.storageRebate);this.setGasBudget(o>n?o:n)}Z(this,Lt,Ri).call(this,e)};let C=ao;BigInt(1e9);re("0x6");re("0x5");var ft="router",qe=1e4,Se=class{static buildPoolImmutables(e){const{fields:t}=e.value.fields.value;return{clmm_pool_id:S(t.clmm_pool_id).address,booster_type:S(t.booster_type.fields.name).source_address,pool_id:S(t.pool_id).address,coinTypeA:S(t.coin_type_a.fields.name).source_address,coinTypeB:S(t.coin_type_b.fields.name).source_address}}static buildPoolState(e){const t=x(e),i=[];return t.config.fields.contents.forEach(n=>{i.push({lock_day:Number(n.fields.key),multiplier:Number(u(n.fields.value).div(qe))})}),{basic_percent:Number(u(t.basic_percent).div(qe)),balances:{balances_handle:t.balances.fields.id.id,size:t.balances.fields.size},config:i,lock_positions:{lock_positions_handle:t.lock_positions.fields.id.id,size:t.lock_positions.fields.size},is_open:t.is_open,index:Number(t.index),pool_id:Xe(e)}}static buildLockNFT(e){const t=S(Xe(e)).address;return{lock_clmm_position:Ot(e),locked_nft_id:t}}static buildLockPositionInfo(e){const t=x(e),{value:i}=t.value.fields;return{type:i.type,position_id:i.fields.position_id,start_time:Number(i.fields.start_time),lock_period:Number(i.fields.lock_period),end_time:Number(i.fields.end_time),growth_rewarder:i.fields.growth_rewarder,rewarder_owned:i.fields.rewarder_owned,is_settled:i.fields.is_settled}}static isLocked(e){return e.end_time>Date.parse(new Date().toString())/1e3}},ro=class{constructor(e){q(this,"_sdk");q(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=!1){var o;const{booster:t}=this._sdk.sdkOptions,i=`${t.package_id}_getPoolImmutables`,s=this.getCache(i,e),n=[];if(s!==void 0)n.push(...s);else{const a=[];(o=(await this._sdk.ClmmSDK.fullClient.getDynamicFieldsByPage(m(t).booster_pool_handle)).data)==null||o.forEach(l=>{a.push(l.objectId)});const d=await this._sdk.ClmmSDK.fullClient.batchGetObjects(a,{showContent:!0});for(const l of d){const p=x(l);if(p){const h=Se.buildPoolImmutables(p);this.updateCache(`${h.pool_id}_getPoolImmutable`,h,D),n.push(h)}}}return this.updateCache(i,n,D),n}async getPoolImmutable(e){const{booster:t}=this._sdk.sdkOptions,i=`${e}_getPoolImmutable`,s=this.getCache(i);if(s!==void 0)return s;const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:m(t).booster_pool_handle,name:{type:"0x2::object::ID",value:e}}),o=x(n),a=Se.buildPoolImmutables(o);return this.updateCache(i,a,D),a}async getPools(){const e=[],i=(await this.getPoolImmutables()).map(n=>n.pool_id),s=await this._sdk.ClmmSDK.fullClient.batchGetObjects(i,{showType:!0,showContent:!0});for(const n of s){const o=Se.buildPoolState(n);if(o){const a={...await this.getPoolImmutable(o.pool_id),...o};e.push(a);const c=`${a.pool_id}_getPoolObject`;this.updateCache(c,a,D)}}return e}async getPool(e,t=!0){const i=`${e}_getPoolObject`,s=this.getCache(i,t),n=await this.getPoolImmutable(e);if(s!==void 0)return{...n,...s};const o=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),a=Se.buildPoolState(o),c={...n,...a};return this.updateCache(i,c,D),c}async getPoolHandleId(e){const t=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),i=x(t);return i?i.list.fields.id.id:""}async getBoosterInitConfigs(){var s;const{package_id:e}=this.sdk.sdkOptions.booster,t=(s=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::config::InitEvent`}))==null?void 0:s.data,i={booster_config_id:"",booster_pool_handle:""};return t.length>0&&t.forEach(n=>{const o=n.parsedJson;o&&(i.booster_config_id=o.config_id)}),i.booster_pool_handle=await this.getPoolHandleId(i.booster_config_id),i}async getOwnerBoosterPositions(e,t,i){const{booster:s}=this.sdk.sdkOptions,n=[],o=[],a=`${s.package_id}::lock_nft::LockNFT<${this._sdk.ClmmSDK.Position.buildPositionType()}>`,c=await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{options:{showType:!0,showContent:!0,showOwner:!0},filter:{StructType:a}});for(const l of c.data)if(S(Ae(l)).source_address===a&&l.data){const h=Se.buildLockNFT(l);this.updateCache(`${h.locked_nft_id}_getBoosterPositionById`,h,D),h&&(t===void 0||t===h.lock_clmm_position.pool)&&n.push(h)}const d=await this.getLockPositionInfos(i,n.map(l=>l.locked_nft_id));for(const l of n)for(const p of d)if(l.lock_clmm_position.pos_object_id===p.position_id){o.push({...l,...p});break}return o}async getBoosterPosition(e,t){const i=`${t}_getBoosterPositionById`,s=this.getCache(i);let n;if(s!==void 0)n=s;else{const a=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0,showOwner:!0}});n=Se.buildLockNFT(a),this.updateCache(i,n,D)}const o=await this.getLockPositionInfo(e,t);return{...n,...o}}async getLockPositionInfos(e,t=[]){var o;const i=await this._sdk.ClmmSDK.fullClient.getDynamicFieldsByPage(e),s=[],n=[];return(o=i.data)==null||o.forEach(a=>{t.length>0?t.includes(a.name.value)&&s.push(a.objectId):s.push(a.objectId)}),s.length>0&&(await this._sdk.ClmmSDK.fullClient.batchGetObjects(s,{showContent:!0})).forEach(c=>{const d=Se.buildLockPositionInfo(c);d&&n.push(d)}),n}async getLockPositionInfo(e,t){const i=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}});return Se.buildLockPositionInfo(i)}calculateXCetusRewarder(e,t,i){let s=t.basic_percent,n="0";e.forEach(c=>{c.coin_address===t.booster_type&&(console.log("find ",t.booster_type),n=c.amount_owed.toString())}),i.is_settled||t.config.forEach(c=>{c.lock_day===i.lock_period&&(s=c.multiplier)});const o=u(n).sub(i.growth_rewarder).mul(s);return u(i.rewarder_owned).add(o).toString()}lockPositionPayload(e){const{booster:t}=this.sdk.sdkOptions,{clmm_pool:i}=this.sdk.ClmmSDK.sdkOptions,s=new C;return s.moveCall({target:`${t.published_at}::${ft}::lock_position`,typeArguments:[e.booster_type,e.coinTypeA,e.coinTypeB],arguments:[s.pure(m(t).booster_config_id),s.pure(m(i).global_config_id),s.pure(e.booster_pool_id),s.pure(e.clmm_pool_id),s.pure(e.clmm_position_id),s.pure(e.lock_day),s.pure(v)]}),s}canceLockPositionPayload(e){const{booster:t}=this.sdk.sdkOptions,i=new C;return i.moveCall({target:`${t.published_at}::${ft}::cancel_lock`,typeArguments:[e.booster_type],arguments:[i.pure(m(t).booster_config_id),i.pure(e.booster_pool_id),i.pure(e.lock_nft_id),i.pure(v)]}),i}redeemPayload(e){const{booster:t,xcetus:i}=this.sdk.sdkOptions,{clmm_pool:s}=this.sdk.ClmmSDK.sdkOptions,n=new C,o=m(i);return n.moveCall({target:`${t.published_at}::${ft}::redeem`,typeArguments:[e.booster_type,e.coinTypeA,e.coinTypeB],arguments:[n.pure(m(t).booster_config_id),n.pure(m(s).global_config_id),n.pure(e.booster_pool_id),n.pure(e.lock_nft_id),n.pure(e.clmm_pool_id),n.pure(o.lock_manager_id),n.pure(o.xcetus_manager_id),n.pure(e.ve_nft_id),n.pure(v)]}),n}updateCache(e,t,i=be){let s=this._cache[e];s?(s.overdueTime=X(i),s.value=t):s=new we(t,X(i)),this._cache[e]=s}getCache(e,t=!1){const i=this._cache[e];if(!t&&(i!=null&&i.isValid()))return i.value;delete this._cache[e]}},Y="router",Li=1e9,H=class{static priceRealToFix(e,t,i){const s=u(t-i).toNumber();return Number(u(e).div(u(10).pow(u(s))).toString())}static priceFixToReal(e,t,i){const s=u(t-i).toNumber();return Number(u(e).mul(u(10).pow(u(s))).toString())}static raiseTotalAmount(e,t,i){const s=u(t-i).abs().toNumber();return t>i?Number(u(e.total_supply).mul(e.current_price).div(u(10).pow(u(s))).toString()):Number(u(e.total_supply).mul(e.current_price).mul(u(10).pow(u(s))).toString())}static buildLaunchPadPool(e){const t=Ae(e),i=S(t),s=x(e),n={coin_type_sale:i.type_arguments[0],coin_type_raise:i.type_arguments[1],pool_address:re(Xe(e)),is_settle:s.is_settle,current_price:u(s.initialize_price).div(u(Li)).toString(),price:s.initialize_price,min_price:"0",max_price:"0",sale_coin_amount:s.sale_coin,raise_coin_amount:s.raise_coin,total_purchase_amount:s.reality_raise_total,total_supply:s.sale_total,min_purchase:s.min_purchase,max_purchase:s.max_purchase,complete_raise_limit:s.least_raise_amount,softcap:s.softcap,max_raise_amount:s.hardcap,sale_decimals:0,raise_decimals:0,liquidity_injection_ratio:Number(s.liquidity_rate)/1e4,is_cancel:s.is_cancel,duration_summary:{start_time:Number(s.duration_manager.fields.start_time),end_time:0,settle_end_time:0,purchase_duration:Number(s.duration_manager.fields.activity_duration),settle_duration:Number(s.duration_manager.fields.settle_duration),lock_up_duration:Number(s.duration_manager.fields.locked_duration)},white_summary:{white_handle:s.white_list.fields.users.fields.id.id,protection_hard_cap:s.white_list.fields.hard_cap_total,protection_limit_used:s.white_list.fields.purchase_total,size:Number(s.white_list.fields.users.fields.size)},unused_sale:s.unused_sale,harvest_raise:s.harvest_raise,tick_spacing:Number(s.tick_spacing),owner:s.recipient,purchase_summary:{purchase_handle:s.purchase_list.fields.id.id,size:Number(s.purchase_list.fields.size)},pool_status:"Failed"};return H.updatePoolStatus(n),n}static updatePoolStatus(e){const t=Number(u(Date.now()/1e3).toFixed(0)),{duration_summary:i}=e,s=i.start_time+i.purchase_duration,n=s+i.settle_duration;if(i.end_time=s,i.settle_end_time=n,e.is_settle)e.pool_status="Ended";else if(e.is_cancel)e.pool_status="Canceled";else if(t<i.start_time)e.pool_status="Upcoming";else if(t>i.start_time&&t<s)e.pool_status="Live";else if(t>s&&t<n){const o=e.raise_coin_amount;Number(o)<Number(e.complete_raise_limit)?e.pool_status="Failed":e.pool_status="Settle"}return e}static async calculatePoolPrice(e,t){const i=await e.ClmmSDK.CetusConfig.getTokenListByCoinTypes([t.coin_type_sale,t.coin_type_raise]),s=i[t.coin_type_sale].decimals,n=i[t.coin_type_raise].decimals;t.min_price=this.priceFixToReal(Number(u(t.softcap).div(u(t.total_supply))),s,n).toString(),t.max_price=this.priceFixToReal(Number(u(t.max_raise_amount).div(u(t.total_supply))),s,n).toString(),t.current_price=this.priceFixToReal(Number(t.current_price),s,n).toString(),t.sale_decimals=s,t.raise_decimals=n}static async getWithdrawRaise(e){return e.pool_status==="Ended"?e.harvest_raise:"0"}static async getWithdrawSale(e){return e.pool_status==="Ended"?e.unused_sale:e.sale_coin_amount}static async getHistoryWithdrawRaise(e,t){if(t.pool_status==="Ended"){if(u(t.harvest_raise).equals(u(0))){const s=await e.Launchpad.getSettleEvent(t.pool_address);s&&(t.harvest_raise=s.unused_raise)}const i=P.min(new P(t.total_purchase_amount),new P(t.max_raise_amount));return u(i.toString()).mul(1-t.liquidity_injection_ratio).toString()}return"0"}static async getHistoryWithdrawSale(e,t){if(t.pool_status==="Ended"){const i=await e.Launchpad.getSettleEvent(t.pool_address);return i&&(t.unused_sale=i.unused_sale),t.unused_sale}return"0"}static async getOverrecruitReverseAmount(e,t){const i=await e.Launchpad.getPurchaseMarks(e.ClmmSDK.senderAddress,[t.pool_address],!1);if(i.length>0){const s=i[0].purchased_raise_amount,n=(await e.Launchpad.getPurchaseAmount(t.white_summary.white_handle,e.ClmmSDK.senderAddress)).safe_purchased_amount,{protection_limit_used:o}=t.white_summary;return u(s).sub(n).div(u(t.total_purchase_amount).sub(o)).mul(u(t.total_purchase_amount).sub(t.max_raise_amount)).toString()}return"0"}static async getCanPurchaseAmount(e,t){const i=await H.getOverrecruitReverseAmount(e,t),s=await e.Launchpad.getPurchaseMarks(e.ClmmSDK.senderAddress,[t.pool_address],!1);if(s){const n=s[0].purchased_raise_amount;u(n).sub(i).div(t.current_price)}return"0"}},co=class{constructor(e){q(this,"_sdk");q(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=[],t=0,i=100,s=!1){var p;const{package_id:n}=this._sdk.sdkOptions.launchpad;if(n===void 0)throw Error("sdk.sdkOptions.launchpad is undefined");const o=`${n}_getPoolImmutables`,a=this.getCache(o,s),c=[],d=[];if(a!==void 0&&c.push(...a),c.length===0)try{((p=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${n}::factory::CreatePoolEvent`}))==null?void 0:p.data).forEach(g=>{const b=g.parsedJson;b&&c.push({pool_address:b.pool_id,coin_type_sale:S(b.sale_coin.name).full_address,coin_type_raise:S(b.raise_coin.name).full_address})}),this.updateCache(o,c,D)}catch(h){console.log("getPoolImmutables",h)}const l=e.length>0;for(let h=0;h<c.length;h+=1){const g=c[h];if(!(l&&!e.includes(g.pool_address))){if(!l){const b=h;if(b<t||b>=t+i)continue}d.push(g)}}return d}async getPoolImmutablesWithPage(e="all",t=!1){const{package_id:i}=this._sdk.sdkOptions.launchpad,s=`${i}_getPoolImmutables`,n=[],o={data:[],hasNextPage:!1},a=e==="all";if(a){const c=this.getCache(s,t);c&&n.push(...c)}if(n.length===0)try{const c=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${i}::factory::CreatePoolEvent`},e);o.hasNextPage=c.hasNextPage,o.nextCursor=c.nextCursor,c.data.forEach(d=>{const l=d.parsedJson;l&&n.push({pool_address:l.pool_id,coin_type_sale:S(l.sale_coin.name).full_address,coin_type_raise:S(l.raise_coin.name).full_address})})}catch(c){console.log("getPoolImmutables",c)}return o.data=n,a&&this.updateCache(s,n,D),o}async getPools(e=[],t=0,i=100){const s=[];let n=[];e.length>0?n=[...e]:(await this.getPoolImmutables([],t,i,!1)).forEach(c=>{n.push(c.pool_address)});const o=await this._sdk.ClmmSDK.fullClient.batchGetObjects(n,{showType:!0,showContent:!0});for(const a of o){const c=H.buildLaunchPadPool(a);await H.calculatePoolPrice(this._sdk,c),s.push(c);const d=`${c.pool_address}_getPoolObject`;this.updateCache(d,c,D)}return s}async getPool(e,t=!0){const i=`${e}_getPoolObject`,s=this.getCache(i,t);if(s!==void 0){const a=s;return H.updatePoolStatus(a),a}const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),o=H.buildLaunchPadPool(n);return await H.calculatePoolPrice(this._sdk,o),this.updateCache(i,o),o}async getInitConfig(e=!1){var d;const t=this._sdk.sdkOptions.launchpad.package_id,i=`${t}_getInitEvent`,s=this.getCache(i,e);if(s!==void 0)return s;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showPreviousTransaction:!0}}),o=oi(n),a=(d=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({Transaction:o}))==null?void 0:d.data,c={pools_id:"",admin_cap_id:"",config_cap_id:""};return a.length>0&&(a.forEach(l=>{const p=l.parsedJson;if(p)switch(S(l.type).full_address){case`${t}::config::InitConfigEvent`:c.admin_cap_id=p.admin_cap_id,c.config_cap_id=p.config_cap_id;break;case`${t}::factory::InitFactoryEvent`:c.pools_id=p.pools_id;break}}),this.updateCache(i,c,D)),c}async getLockNFT(e,t=!1){const i=`${e}_getLockNFT`,s=this.getCache(i,t);if(s!==void 0)return s;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}});if(!n.error)return Ot(n)}async getLockNFTList(e){var n;const{package_id:t}=this._sdk.ClmmSDK.sdkOptions.clmm_pool,{sdkOptions:i}=this._sdk,s=[];try{const o=(n=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${i.launchpad.package_id}::lock::LockNFTEvent`}))==null?void 0:n.data;for(const a of o){const c=a.parsedJson;if(c){const d={locked_time:Number(c.locked_time),end_lock_time:Number(c.end_lock_time),nft_type:c.nft_type_name.name,lock_nft_id:c.lock_nft_id,recipient:c.recipient};if(e===d.recipient&&`${t}`===S(d.nft_type).address){const l=await this.getLockNFT(d.lock_nft_id);if(l){const p=S(l.coin_type_a).full_address,h=S(l.coin_type_b).full_address;s.push({...l,coin_type_a:p,coin_type_b:h,...d})}}}}return s}catch(o){return console.log("getLockNFTList:",o),[]}}async creatPoolTransactionPayload(e){const{launchpad:t}=this.sdk.sdkOptions,i=m(t);if(this.assertLuanchpadConfig(),this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const s=H.priceRealToFix(Number(e.initialize_price),e.sale_decimals,e.raise_decimals),n=new C,o=u(e.total_supply).add(u(e.total_supply).mul(u(e.liquidity_rate))).toNumber(),a=await W.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,n,BigInt(o),e.coin_type_sale),c=[n.pure(i.admin_cap_id),n.pure(i.config_cap_id),n.pure(i.pools_id),n.pure(V(e.recipient)),n.pure((s*Li).toString()),a,n.pure(e.total_supply.toString()),n.pure(e.min_purchase.toString()),n.pure(e.max_purchase.toString()),n.pure(e.least_raise_amount.toString()),n.pure(e.hardcap.toString()),n.pure((e.liquidity_rate*1e3).toString()),n.pure(e.start_time.toString()),n.pure(e.activity_duration.toString()),n.pure(e.settle_duration.toString()),n.pure(e.locked_duration.toString()),n.pure(e.tick_spacing.toString()),n.pure(v)],d=[e.coin_type_sale,e.coin_type_raise];return n.moveCall({target:`${t.published_at}::${Y}::create_launch_pool`,typeArguments:d,arguments:c}),n}async creatPurchasePayload(e){const{launchpad:t}=this.sdk.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const i=new C,s=await W.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,i,BigInt(e.purchase_amount),e.coin_type_raise),n=(await this.getPurchaseMarks(this._sdk.ClmmSDK.senderAddress,[e.pool_address],!1))[0],o=[e.coin_type_sale,e.coin_type_raise];let a;return n?a=[i.pure(e.pool_address),i.pure(m(t).config_cap_id),i.pure(n.id),s,i.pure(e.purchase_amount.toString()),i.pure(v)]:a=[i.pure(e.pool_address),i.pure(m(t).config_cap_id),s,i.pure(e.purchase_amount.toString()),i.pure(v)],i.moveCall({target:`${t.published_at}::${Y}::${n===void 0?"create_and_purchase":"purchase"}`,typeArguments:o,arguments:a}),i}async creatClaimPayload(e){const{launchpad:t}=this.sdk.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const i=(await this.getPurchaseMarks(this._sdk.ClmmSDK.senderAddress,[e.pool_address],!1))[0],s=new C,n=[e.coin_type_sale,e.coin_type_raise],o=[s.pure(e.pool_address),s.pure(m(t).config_cap_id),s.pure(i==null?void 0:i.id),s.pure(v)];return s.moveCall({target:`${t.published_at}::${Y}::claim`,typeArguments:n,arguments:o}),s}async creatSettlePayload(e){const{launchpad:t}=this.sdk.sdkOptions,{clmm_pool:i}=this.sdk.ClmmSDK.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");this.assertLuanchpadConfig();const s=m(i),{clmm_args:n}=e,o=new C;o.setSender(this.sdk.ClmmSDK.senderAddress);const a=[e.coin_type_sale,e.coin_type_raise];if(n){const c=n.opposite?N.priceToSqrtPriceX64(u(1).div(n.current_price),n.raise_decimals,n.sale_decimals).toString():N.priceToSqrtPriceX64(u(n.current_price),n.sale_decimals,n.raise_decimals).toString(),d=BigInt(c)<BigInt(n.clmm_sqrt_price),l=n.opposite?d?e.coin_type_raise:e.coin_type_sale:d?e.coin_type_sale:e.coin_type_raise,p=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,l);let h=Oe.calculateTotalBalance(p);Oe.isSuiCoin(l)&&(h-=BigInt(2e8));const b=W.buildCoinForAmount(o,p,h,l).targetCoin,I=n.opposite?d?"settle_with_reverse_clmm_only_with_a":"settle_with_reverse_clmm_only_with_b":d?"settle_only_with_a":"settle_only_with_b",O=[o.pure(e.pool_address),o.pure(m(t).config_cap_id),o.pure(n.clmm_pool_address),o.pure(s.global_config_id),o.pure(c),b,o.pure(v)];o.moveCall({target:`${t.published_at}::${Y}::${I}`,typeArguments:a,arguments:O})}else o.moveCall({target:`${t.published_at}::${Y}::settle`,typeArguments:a,arguments:[o.pure(e.pool_address),o.pure(m(t).config_cap_id),o.pure(v)]});return o}creatWithdrawPayload(e){const{launchpad:t}=this.sdk.sdkOptions,i=new C,s=[e.coin_type_sale,e.coin_type_raise],n=[i.object(e.pool_address),i.object(m(t).config_cap_id),i.object(v)];return e.sale_amount>BigInt(0)&&i.moveCall({target:`${t.published_at}::${Y}::withdraw_sale`,typeArguments:s,arguments:n}),e.raise_amount>BigInt(0)&&i.moveCall({target:`${t.published_at}::${Y}::withdraw_raise`,typeArguments:s,arguments:n}),i}addUserToWhitelisPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const i=new C,s=[e.coin_type_sale,e.coin_type_raise];return e.user_addrs.forEach(n=>{const o=[i.object(m(t).admin_cap_id),i.object(m(t).config_cap_id),i.object(e.pool_address),i.object(n),i.pure(e.safe_limit_amount),i.object(v)];i.moveCall({target:`${t.published_at}::${Y}::add_user_to_whitelist`,typeArguments:s,arguments:o})}),i}updateWhitelistCapPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const i=new C,s=[e.coin_type_sale,e.coin_type_raise];return e.safe_limit_amount>0&&i.moveCall({target:`${t.published_at}::${Y}::update_whitelist_member_safe_limit_amount`,typeArguments:s,arguments:[i.object(m(t).admin_cap_id),i.object(m(t).config_cap_id),i.object(e.pool_address),i.pure(e.white_list_member),i.pure(e.safe_limit_amount),i.object(v)]}),e.hard_cap_total>0&&i.moveCall({target:`${t.published_at}::${Y}::update_whitelist_hard_cap_total`,typeArguments:s,arguments:[i.object(m(t).admin_cap_id),i.object(m(t).config_cap_id),i.object(e.pool_address),i.pure(e.hard_cap_total),i.object(v)]}),i}creatRemoveWhitelistPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const i=new C,s=[e.coin_type_sale,e.coin_type_raise];return e.user_addrs.forEach(n=>{const o=[i.object(m(t).admin_cap_id),i.object(m(t).config_cap_id),i.object(e.pool_address),i.object(n),i.object(v)];i.moveCall({target:`${t.published_at}::${Y}::remove_user_from_whitelist`,typeArguments:s,arguments:o})}),i}creatCancelPoolPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const i=new C,s=[e.coin_type_sale,e.coin_type_raise],n=[i.pure(m(t).admin_cap_id),i.pure(m(t).config_cap_id),i.pure(e.pool_address),i.pure(v)];return i.moveCall({target:`${t.published_at}::${Y}::cancel`,typeArguments:s,arguments:n}),i}updateRecipientPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const i=new C,s=[e.coin_type_sale,e.coin_type_raise],n=[i.pure(m(t).admin_cap_id),i.pure(m(t).config_cap_id),i.pure(e.pool_address),i.pure(e.new_recipient),i.pure(v)];return i.moveCall({target:`${t.published_at}::${Y}::update_recipient_address`,typeArguments:s,arguments:n}),i}updatePoolDuractionPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const i=new C,s=[e.coin_type_sale,e.coin_type_raise],n=[i.pure(m(t).admin_cap_id),i.pure(m(t).config_cap_id),i.pure(e.pool_address),i.pure(e.activity_duration),i.pure(e.settle_duration),i.pure(e.lock_duration),i.pure(v)];return i.moveCall({target:`${t.published_at}::${Y}::update_pool_duration`,typeArguments:s,arguments:n}),i}creatUnlockNftPayload(e){const{launchpad:t}=this.sdk.sdkOptions;if(m(t)===void 0)throw Error("getPackagerConfigs(launchpad)  is null");const i=new C,s=[e.nft_type],n=[i.pure(e.lock_nft),i.pure(v)];return i.moveCall({target:`${t.published_at}::lock::unlock_nft`,typeArguments:s,arguments:n}),i}async isAdminCap(e){const{launchpad:t}=this._sdk.sdkOptions;if(m(t)===void 0)throw Error("launchpad config is empty");const i=`${e}_isAdminCap`,s=this.getCache(i);if(s)return s;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:m(t).admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(n);const o=Ge(n),a=wt(n);let c=!1;return a&&o&&S(o).source_address===`${t.package_id}::config::AdminCap`&&(c=V(a.AddressOwner)===V(e)),this.updateCache(i,c,D),c}async isWhiteListUser(e,t){const i={type:"address",value:t};try{const s=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:i});return!!(s&&s.data)}catch{return!1}}async getPurchaseAmount(e,t){var s;const i={type:"address",value:t};try{const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:i}),o=x(n);if(console.log(o),o)return(s=o==null?void 0:o.value)==null?void 0:s.fields}catch{}return{safe_limit_amount:"0",safe_purchased_amount:"0"}}async getPurchaseMarks(e,t=[],i=!0){const{launchpad:s}=this._sdk.sdkOptions,n=`${t}_getPurchaseMark`,o=this.getCache(n,i);if(!i&&o!==void 0)return o;let a=null;const c=[];for(;;){const d=await this._sdk.ClmmSDK.fullClient.getOwnedObjects({owner:e,options:{showType:!0,showContent:!0,showDisplay:!0},cursor:a});for(const l of d.data){const{fields:p}=l.data.content;if(S(Ae(l)).source_address===`${s.package_id}::pool::PurchaseMark`){console.log("fields: ",p);const g={id:p.id.id,pool_id:S(p.pool_id).address,purchased_raise_amount:p.purchase_total,obtain_sale_amount:p.obtain_sale_amount,used_raise_amount:p.used_raise_amount};t.length>0?t.includes(g.pool_id)&&c.push(g):c.push(g)}}if(d.hasNextPage)a=d.nextCursor;else break}return this.updateCache(n,c,D),c}async getSettleEvent(e){const{launchpad:t}=this._sdk.sdkOptions,i=`${e}_getPurchaseMark`,s=this.getCache(i);if(s!==void 0)return s;const n=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${t.package_id}::pool::SettleEvent`});for(const o of n.data){const a=o.parsedJson;if(e===re(a.pool_id)){const c={pool_id:a.pool_id,settle_price:a.settle_price,unused_sale:a.unused_sale,unused_raise:a.unused_raise,white_purchase_total:a.white_purchase_total};return this.updateCache(i,c,D),c}}}buildLaunchpadCoinType(e,t){return Wi(this._sdk.sdkOptions.launchpad.package_id,"pool","PoolLiquidityCoin",[e,t])}assertLuanchpadConfig(){const{launchpad:e}=this.sdk.sdkOptions;if(m(e)===void 0)throw Error("sdk getPackagerConfigs(launchpad) is null")}updateCache(e,t,i=be){let s=this._cache[e];s?(s.overdueTime=X(i),s.value=t):s=new we(t,X(i)),this._cache[e]=s}getCache(e,t=!1){const i=this._cache[e];if(!t&&(i!=null&&i.isValid()))return i.value;delete this._cache[e]}},Te=class{static buildPoolImmutables(e){const{fields:t}=e.value.fields.value;return{clmm_pool_id:S(t.clmm_pool_id).address,bonus_type:S(t.bonus_type.fields.name).source_address,pool_id:S(t.pool_id).address,coinTypeA:S(t.coin_type_a.fields.name).source_address,coinTypeB:S(t.coin_type_b.fields.name).source_address}}static buildPoolState(e){const t=x(e),i=[];return t.config.fields.contents.forEach(n=>{i.push({rate:Number(u(n.fields.key).div(qe)),multiplier:Number(u(n.fields.value).div(qe))})}),{balance:t.balance,config:i,is_open:t.is_open,index:Number(t.index),start_time:Number(t.start_time),interval_day:Number(t.interval_day),minimum_percent_to_reward:Number(u(t.minimum_percent_to_reward).div(qe)),rewarders:{rewarder_handle:t.rewarders.fields.id.id,size:Number(t.rewarders.fields.size)},whale_nfts:{whale_nfts_handle:t.whale_nfts.fields.id.id,size:Number(t.whale_nfts.fields.size)},points:{point_handle:t.points.fields.id.id,size:Number(t.points.fields.size)}}}static buildMarkerPositions(e){const{contents:t}=e.value.fields.value.fields,i=[],s=e.id.id;return t.forEach(n=>{const{key:o,value:a}=n.fields,c={id:o,period_id:s,bonus_num:a.fields.bonus_num,point:a.fields.point,is_burn:a.fields.is_burn,point_after_multiplier:a.fields.point_after_multiplier,percent:Number(u(a.fields.percent).div(qe)),fee_share_rate:0,is_redeemed:a.fields.is_redeemed};i.push(c)}),i}static buildPoolBonusInfo(e){const{fields:t,type:i}=e.value.fields.value;return{type:i,time:Number(t.time),settle_time:Number(t.settle_time),settled_num:t.settled_num,is_settled:t.is_settled,basis_bonus:t.basis_bonus,total_bonus:t.total_bonus,is_vacant:t.is_vacant,redeemed_num:t.redeemed_num}}static getBonusPercent(e,t){let i=0;for(const s of e)t>=s.rate&&s.rate>i&&(i=s.multiplier);return i}},si="router",uo=class{constructor(e){q(this,"_sdk");q(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=!1){var o;const{maker_bonus:t}=this._sdk.sdkOptions,i=`${t.package_id}_getPoolImmutables`,s=this.getCache(i,e),n=[];if(s!==void 0)n.push(...s);else{const a=[];(o=(await this._sdk.ClmmSDK.fullClient.getDynamicFieldsByPage(m(t).maker_pool_handle)).data)==null||o.forEach(l=>{a.push(l.objectId)});const d=await this._sdk.ClmmSDK.fullClient.batchGetObjects(a,{showContent:!0});for(const l of d){const p=x(l);p&&n.push(Te.buildPoolImmutables(p))}}return n}async getPoolImmutable(e){const{maker_bonus:t}=this._sdk.sdkOptions,i=`${t.package_id}_getPoolImmutables`,s=this.getCache(i);if(s!==void 0){const a=s.filter(c=>e===c.pool_id);if(a.length>0)return a[0]}const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:m(t).maker_pool_handle,name:{type:"0x2::object::ID",value:e}}),o=x(n);return Te.buildPoolImmutables(o)}async getPools(){const e=[],t=await this.getPoolImmutables(),i=t.map(o=>o.pool_id),s=await this._sdk.ClmmSDK.fullClient.batchGetObjects(i,{showType:!0,showContent:!0});let n=0;for(const o of s){const a=Te.buildPoolState(o);if(a){const c={...t[n],...a};e.push(c);const d=`${c.pool_id}_getPoolObject`;this.updateCache(d,c,D)}n+=1}return e}async getPool(e,t=!0){const i=`${e}_getPoolObject`,s=this.getCache(i,t),n=await this.getPoolImmutable(e);if(s!==void 0)return s;const o=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),a=Te.buildPoolState(o),c={...n,...a};return this.updateCache(i,c,D),c}async getPoolHandleId(e){const t=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),i=x(t);return i?i.list.fields.id.id:""}async getMakerPoolPeriods(e,t=!1){const i=[],s=`${e.pool_id}_getMakerPoolPeriods`,n=this.getCache(s,t);return n!==void 0?n:((await this._sdk.ClmmSDK.fullClient.getDynamicFieldsByPage(e.whale_nfts.whale_nfts_handle)).data.forEach(a=>{const c={id:a.objectId,start_time:0,end_time:0,period:Number(a.name.value)};c.start_time=Number(u(e.start_time).add(u(e.interval_day).mul(24*3600).mul(c.period)).toFixed(0,$.ROUND_DOWN)),c.end_time=Number(u(c.start_time).add(u(e.interval_day).mul(24*3600)).toFixed(0,$.ROUND_DOWN)),i.push(c)}),this.updateCache(s,i,D),i)}async getMakerBonusInitConfigs(){var s;const{package_id:e}=this.sdk.sdkOptions.maker_bonus,t=(s=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::config::InitEvent`}))==null?void 0:s.data,i={maker_config_id:"",maker_pool_handle:""};return t.length>0&&t.forEach(n=>{const o=n.parsedJson;o&&(i.maker_config_id=o.config_id)}),i.maker_pool_handle=await this.getPoolHandleId(i.maker_config_id),i}async getPoolMarkerPositionList(e,t,i=!1){const s={},n=[];i||t.forEach(o=>{const a=`${e}_${o.period}_getPoolMarkerPositionList`,c=this.getCache(a);c!==void 0?s[o.period]=c:(s[o.period]=[],n.push(o))});try{n.length>0&&(await this._sdk.ClmmSDK.fullClient.batchGetObjects(n.map(c=>c.id),{showContent:!0})).forEach(c=>{const d=x(c),l=Te.buildMarkerPositions(d);if(l.length>0){const{period_id:p}=l[0],h=t.filter(g=>g.id===p)[0];s[h.period]=l}});const o=[];for(const a in s)s[a].forEach(d=>{o.push(d)});if(o.length>0){const a=await this._sdk.ClmmSDK.Position.getSipmlePositionList(o.map(c=>c.id));for(const c of o)for(const d of a)if(c.id===d.pos_object_id){c.clmm_position=d;break}}}catch(o){console.log(o)}for(const o in s){const a=`${e}_${o}_getPoolMarkerPositionList`;this.updateCache(a,s[o],D)}return s}async updateXCetusRewarderAndFee(e,t,i){const s=await this.calculateTotalPointsAfterMultiper(e,i);for(const n of t)await this.calculateXCetusRewarder(e,n,i.period,s);return t}async calculateXCetusRewarder(e,t,i,s){const n=await this.getPoolBonusInfo(e.rewarders.rewarder_handle,i),{fee_share_rate:o}=this.calculateFeeShareRate(e,t,s),a=u(o).mul(n.total_bonus);return t.is_redeemed?t.bonus_num="0":t.bonus_num=a.toString(),t.bonus_num}calculateFeeShareRate(e,t,i){const s=Te.getBonusPercent(e.config,t.percent),n=u(t.point).mul(s),o=u(n).div(i);return t.point_after_multiplier=n.toString(),t.fee_share_rate=Number(o),{fee_share_rate:Number(o),points_after_multiper:n.toString()}}async calculateTotalPointsAfterMultiper(e,t){const i=await this.getPoolMarkerPositionList(e.whale_nfts.whale_nfts_handle,[t]);let s=u(0);const n=i[t.period];for(const o of n){const a=Te.getBonusPercent(e.config,o.percent),c=u(o.point).mul(a);s=s.add(c)}return s.toString()}async calculateAllXCetusRewarder(e){const t=this._sdk.ClmmSDK.senderAddress;let i=u(0);const s=[];for(const n of e){const o=await this._sdk.MakerModule.getMakerPoolPeriods(n),a=await this._sdk.MakerModule.getPoolMarkerPositionList(n.whale_nfts.whale_nfts_handle,o),c=[];for(const d of o){const l=a[d.period].filter(p=>{var h;return t.length===0?!1:((h=p.clmm_position)==null?void 0:h.owner)===t});l.length>0&&(await this._sdk.MakerModule.updateXCetusRewarderAndFee(n,l,d),l.forEach(p=>{var h;((h=p.clmm_position)==null?void 0:h.position_status)===Ji.Exists&&u(p.bonus_num).greaterThan(0)&&(i=i.add(p.bonus_num),c.includes(p.clmm_position.pos_object_id)||c.push(p.clmm_position.pos_object_id))}))}s.push({bonus_type:n.bonus_type,pool_id:n.pool_id,nft_ids:c})}return{claimtotal:i,claimRecord:s}}async getPoolBonusInfo(e,t,i=!1){const s=`${e}_${t}_getPoolBonusInfo`,n=this.getCache(s,i);if(n!==void 0)return n;const o=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"u64",value:t.toString()}}),a=x(o),c=Te.buildPoolBonusInfo(a);return this.updateCache(s,c,be),c}claimPayload(e){const{maker_bonus:t,xcetus:i}=this.sdk.sdkOptions,s=new C;return s.moveCall({target:`${t.published_at}::${si}::claim`,typeArguments:[e.bonus_type],arguments:[s.pure(m(t).maker_config_id),s.pure(e.market_pool_id),s.pure(e.position_nft_id),s.pure(e.phase),s.pure(m(i).lock_manager_id),s.pure(m(i).xcetus_manager_id),s.pure(e.ve_nft_id)]}),s}claimAllPayload(e){const{maker_bonus:t,xcetus:i}=this.sdk.sdkOptions,s=new C;return e.whale_nfts.forEach(n=>{n.nft_ids.forEach(o=>{s.moveCall({target:`${t.published_at}::${si}::claim_all`,typeArguments:[n.bonus_type],arguments:[s.object(m(t).maker_config_id),s.object(n.pool_id),s.object(o),s.object(m(i).lock_manager_id),s.object(m(i).xcetus_manager_id),s.object(e.ve_nft_id)]})})}),s}updateCache(e,t,i=be){let s=this._cache[e];s?(s.overdueTime=X(i),s.value=t):s=new we(t,X(i)),this._cache[e]=s}getCache(e,t=!1){const i=this._cache[e];if(!t&&(i!=null&&i.isValid()))return i.value;delete this._cache[e]}},$e="router",yt="router",Ve=24*3600,dt=1e3,se=1e11,De=class{static buildVeNFTDividendInfo(e){const t={id:e.id.id,ve_nft_id:e.name,rewards:[]};return e.value.fields.value.fields.dividends.fields.contents.forEach(i=>{const s=[];i.fields.value.fields.contents.forEach(n=>{s.push({coin_type:S(n.fields.key.fields.name).source_address,amount:n.fields.value})}),t.rewards.push({period:Number(i.fields.key),rewards:s})}),t}static buildDividendManager(e){const t={id:e.id.id,dividends:{id:e.dividends.fields.id.id,size:e.dividends.fields.size},venft_dividends:{id:e.venft_dividends.fields.id.id,size:e.venft_dividends.fields.size},bonus_types:[],start_time:Number(e.start_time),interval_day:Number(e.interval_day),balances:{id:e.balances.fields.id.id,size:e.balances.fields.size},is_open:e.is_open};return e.bonus_types.forEach(i=>{t.bonus_types.push(S(i.fields.name).source_address)}),t}static buildLockUpManager(e){return{id:e.id.id,balance:e.balance,treasury_manager:e.treasury_manager,extra_treasury:e.extra_treasury,lock_infos:{lock_handle_id:e.lock_infos.fields.id.id,size:Number(e.lock_infos.fields.size)},type_name:ai(e.type_name.fields.name),min_lock_day:Number(e.min_lock_day),max_lock_day:Number(e.max_lock_day),package_version:Number(e.package_version),max_percent_numerator:Number(e.max_percent_numerator),min_percent_numerator:Number(e.min_percent_numerator)}}static buildLockCetus(e){const t=e.fields,i={id:t.id.id,type:S(e.type).source_address,locked_start_time:Number(t.locked_start_time),locked_until_time:Number(t.locked_until_time),cetus_amount:t.balance,xcetus_amount:"0",lock_day:0};return i.lock_day=(i.locked_until_time-i.locked_start_time)/Ve,i}static getAvailableXCetus(e,t){let i=u(0);return t.forEach(s=>{i=i.add(s.xcetus_amount)}),u(e.xcetus_balance).sub(i).toString()}static getWaitUnLockCetuss(e){return e.filter(t=>!De.isLocked(t))}static getLockingCetuss(e){return e.filter(t=>De.isLocked(t))}static isLocked(e){return e.locked_until_time>Date.parse(new Date().toString())/1e3}static buildDividendRewardTypeList(e){const t=new Set;return e.forEach(i=>{i.rewards.forEach(s=>{t.add(s.coin_type)})}),Array.from(t)}static getNextStartTime(e){const t=Date.now()/1e3,{start_time:i,interval_day:s}=e,n=Math.ceil((t-i)/(s*Ve));return i+n*s*Ve}},lo=class{constructor(e){q(this,"_sdk");q(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getOwnerVeNFT(e,t=!0){const{xcetus:i}=this.sdk.sdkOptions,s=`${e}_getLockUpManagerEvent`,n=this.getCache(s,t);if(n!==void 0)return n;let o;const a=`${i.package_id}::xcetus::VeNFT`;return(await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{options:{showType:!0,showContent:!0,showDisplay:!0},filter:{StructType:a}})).data.forEach(d=>{const l=S(Ae(d)).source_address;if(l===a&&d.data&&d.data.content){const{fields:p}=d.data.content;o={...Dt(d),id:p.id.id,index:p.index,type:l,xcetus_balance:p.xcetus_balance},this.updateCache(s,o,D)}}),o}async getOwnerLockCetuss(e){const{xcetus:t}=this.sdk.sdkOptions,i=[],s=`${t.package_id}::lock_coin::LockedCoin<${this.buileCetusCoinType()}>`,n=await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{options:{showType:!0,showContent:!0},filter:{StructType:s}});for(const o of n.data)if(S(Ae(o)).source_address===s&&o.data){const c=De.buildLockCetus(o.data.content);c.xcetus_amount=await this.getXCetusAmount(c.id),i.push(c)}return i}async getLockCetus(e){var i;const t=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0}});if((i=t.data)!=null&&i.content){const s=De.buildLockCetus(t.data.content);return s.xcetus_amount=await this.getXCetusAmount(s.id),s}}async getOwnerCetusCoins(e){return await this._sdk.ClmmSDK.getOwnerCoinAssets(e,this.buileCetusCoinType())}mintVeNFTPayload(){const{xcetus:e}=this.sdk.sdkOptions,t=new C;return t.moveCall({target:`${e.published_at}::${$e}::mint_venft`,typeArguments:[],arguments:[t.pure(m(e).xcetus_manager_id)]}),t}async convertPayload(e){const{xcetus:t}=this.sdk.sdkOptions,i=new C,s=this.buileCetusCoinType(),n=await W.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,i,BigInt(e.amount),s);return e.venft_id===void 0?i.moveCall({target:`${t.published_at}::${$e}::mint_and_convert`,typeArguments:[],arguments:[i.object(m(t).lock_manager_id),i.object(m(t).xcetus_manager_id),n,i.pure(e.amount)]}):i.moveCall({target:`${t.published_at}::${$e}::convert`,typeArguments:[],arguments:[i.object(m(t).lock_manager_id),i.object(m(t).xcetus_manager_id),n,i.pure(e.amount),i.pure(e.venft_id)]}),i}redeemLockPayload(e){const{xcetus:t}=this.sdk.sdkOptions,i=new C;return i.moveCall({target:`${t.published_at}::${$e}::redeem_lock`,typeArguments:[],arguments:[i.pure(m(t).lock_manager_id),i.pure(m(t).xcetus_manager_id),i.pure(e.venft_id),i.pure(e.amount),i.pure(e.lock_day),i.pure(v)]}),i}redeemPayload(e){const{xcetus:t}=this.sdk.sdkOptions,i=new C;return i.moveCall({target:`${t.published_at}::${$e}::redeem`,typeArguments:[],arguments:[i.pure(m(t).lock_manager_id),i.pure(m(t).xcetus_manager_id),i.pure(e.venft_id),i.pure(e.lock_id),i.pure(v)]}),i}redeemDividendPayload(e,t){const{xcetus:i,xcetus_dividends:s}=this.sdk.sdkOptions,n=new C;return t.forEach(o=>{n.moveCall({target:`${i.published_at}::${yt}::redeem`,typeArguments:[o],arguments:[n.object(m(s).dividend_manager_id),n.object(e)]})}),n}redeemDividendV2Payload(e,t,i){const{xcetus_dividends:s}=this.sdk.sdkOptions;let n=new C;return t.filter(a=>i.includes(a)).length>0&&(n=this.redeemDividendXTokenPayload(e,n)),t.forEach(a=>{i.includes(a)||n.moveCall({target:`${s.published_at}::${yt}::redeem_v2`,typeArguments:[a],arguments:[n.object(m(s).dividend_manager_id),n.object(e),n.object(v)]})}),n}redeemDividendXTokenPayload(e,t){const{xcetus_dividends:i,xcetus:s}=this.sdk.sdkOptions,{xcetus_manager_id:n,lock_manager_id:o}=m(s),{dividend_manager_id:a}=m(i);return t=t===void 0?new C:t,t.moveCall({target:`${i.published_at}::${yt}::redeem_xtoken`,typeArguments:[],arguments:[t.object(o),t.object(n),t.object(a),t.object(e),t.object(v)]}),t}buileCetusCoinType(){return`${this.sdk.sdkOptions.cetus_faucet.package_id}::cetus::CETUS`}buileXTokenCoinType(e=this._sdk.sdkOptions.xcetus.package_id,t="xcetus",i="XCETUS"){return`${e}::${t}::${i}`}cancelRedeemPayload(e){const{xcetus:t}=this.sdk.sdkOptions,i=new C;return i.moveCall({target:`${t.published_at}::${$e}::cancel_redeem_lock`,typeArguments:[],arguments:[i.pure(m(t).lock_manager_id),i.pure(m(t).xcetus_manager_id),i.pure(e.venft_id),i.pure(e.lock_id),i.pure(v)]}),i}async getInitConfigs(){var a,c;const{package_id:e}=this.sdk.sdkOptions.xcetus,t=`${e}_getInitFactoryEvent`,i=this.getCache(t);if(i!==void 0)return i;const s=(a=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::xcetus::InitEvent`}))==null?void 0:a.data,n={xcetus_manager_id:"",lock_manager_id:"",lock_handle_id:""};s.length>0&&s.forEach(d=>{const l=d.parsedJson;l&&(n.xcetus_manager_id=l.xcetus_manager)});const o=(c=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::locking::InitializeEvent`}))==null?void 0:c.data;return o.length>0&&o.forEach(d=>{const l=d.parsedJson;l&&(n.lock_manager_id=l.lock_manager)}),n.lock_manager_id.length>0&&(n.lock_handle_id=(await this.getLockUpManager(n.lock_manager_id)).lock_infos.lock_handle_id),this.updateCache(t,n,D),n}async getLockUpManager(e=m(this.sdk.sdkOptions.xcetus).lock_manager_id,t=!1){const i=`${e}_getLockUpManager`,s=this.getCache(i,t);if(s!==void 0)return s;const n=await this.sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),o=De.buildLockUpManager(x(n));return this.updateCache(i,o,D),o}async getDividendConfigs(){var o;const{package_id:e}=this.sdk.sdkOptions.xcetus_dividends,t=`${e}_getDividendManagerEvent`,i=this.getCache(t);if(i!==void 0)return i;const s=(o=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::dividend::InitEvent`}))==null?void 0:o.data,n={dividend_manager_id:"",dividend_admin_id:"",dividend_settle_id:""};return s.length>0&&s.forEach(a=>{const c=a.parsedJson;c&&(n.dividend_manager_id=c.manager_id,n.dividend_admin_id=c.admin_id,n.dividend_settle_id=c.settle_id,this.updateCache(t,n,D))}),n}async getDividendManager(e=!1){const{dividend_manager_id:t}=m(this._sdk.sdkOptions.xcetus_dividends),i=`${t}_getDividendManager`,s=this.getCache(i,e);if(s!==void 0)return s;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=x(n),a=De.buildDividendManager(o);return this.updateCache(i,a,D),a}async getXcetusManager(e=!0){const{xcetus_manager_id:t}=m(this._sdk.sdkOptions.xcetus),i=`${t}_getXcetusManager`,s=this.getCache(i,e);if(s)return s;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=x(n),a={id:o.id.id,index:Number(o.index),has_venft:{handle:o.has_venft.fields.id.id,size:o.has_venft.fields.size},nfts:{handle:o.nfts.fields.id.id,size:o.nfts.fields.size},total_locked:o.total_locked,treasury:o.treasury.fields.total_supply.fields.value};return this.updateCache(i,a),a}async getVeNFTDividendInfo(e,t){try{const i=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}}),s=x(i);return De.buildVeNFTDividendInfo(s)}catch{return}}async redeemNum(e,t){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const i=await this.getLockUpManager(m(this._sdk.sdkOptions.xcetus).lock_manager_id),s=u(se).mul(u(i.max_lock_day).sub(u(t))).mul(u(i.max_percent_numerator).sub(u(i.min_percent_numerator))).div(u(i.max_lock_day).sub(u(i.min_lock_day))),n=u(se).mul(u(i.max_percent_numerator)).sub(s).div(u(dt)).div(se);return{amountOut:u(n).mul(u(e)).round().toString(),percent:n.toString()}}async reverseRedeemNum(e,t){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const i=await this.getLockUpManager(m(this._sdk.sdkOptions.xcetus).lock_manager_id),s=u(se).mul(u(i.max_lock_day).sub(u(t))).mul(u(i.max_percent_numerator).sub(u(i.min_percent_numerator))).div(u(i.max_lock_day).sub(u(i.min_lock_day))),n=u(se).mul(u(i.max_percent_numerator)).sub(s).div(u(dt)).div(se);return{amountOut:u(e).div(n).toFixed(0,$.ROUND_UP),percent:n.toString()}}async getXCetusAmount(e){const{lock_handle_id:t}=m(this._sdk.sdkOptions.xcetus),i=`${e}_getXCetusAmount`,s=this.getCache(i);if(s!==void 0)return s;try{const n=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:t,name:{type:"0x2::object::ID",value:e}}),o=x(n);if(o){const{xcetus_amount:a}=o.value.fields.value.fields;return this.updateCache(i,a,D),a}}catch{}return"0"}async getVeNftAmount(e,t){try{const i=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}}),s=x(i);if(s){const{lock_amount:n,xcetus_amount:o}=s.value.fields.value.fields;return{lock_amount:n,xcetus_amount:o}}}catch{}return{lock_amount:"0",xcetus_amount:"0"}}async getPhaseDividendInfo(e,t=!1){const s=(await this.getDividendManager()).dividends.id,n=`${s}_${e}_getPhaseDividendInfo`,o=this._sdk.getCache(n,t);if(o)return o;try{const a=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:s,name:{type:"u64",value:e}}),c=x(a),d=c.value.fields.value.fields,l=d.redeemed_num.fields.contents.map(b=>({name:b.fields.key.fields.name,value:b.fields.value})),p=d.bonus_types.map(b=>b.fields.name),h=d.bonus.fields.contents.map(b=>({name:b.fields.key.fields.name,value:b.fields.value})),g={id:Xe(a),phase:c.name,settled_num:d.settled_num,register_time:d.register_time,redeemed_num:l,is_settled:d.is_settled,bonus_types:p,bonus:h,phase_end_time:""};return this.updateCache(n,g),g}catch{}}updateCache(e,t,i=be){let s=this._cache[e];s?(s.overdueTime=X(i),s.value=t):s=new we(t,X(i)),this._cache[e]=s}getCache(e,t=!1){const i=this._cache[e];if(!t&&(i!=null&&i.isValid()))return i.value;delete this._cache[e]}},_o="factory",te="oversubscribe_pool",Fi=1e6,at=1e18,Be="router",kt="router",st="router",ni={curve:{strategy:3,both_side:{div_width:10,ratios:[.333333,.266666,.2,.133333,.066666]},one_side:{div_width:5,ratios:[.333333,.266666,.2,.133333,.066666]}},bidAsk:{strategy:4,both_side:{div_width:10,ratios:[.172413793,.137931034,.103448276,.068965517,.034482759,.068965517,.103448276,.137931034,.172413793]},one_side:{div_width:5,ratios:[.066666667,.13333333,.2,.266666667,.333333333]}}};function po(e){return"master_address"in e}var bt="router",mo="vaults",ho=1e4,G=class{static buildIdoPoolImmutables(e){return{pool_address:re(e.pool_id),coin_type_sale:S(e.sale_coin_type.name).full_address,coin_type_raise:S(e.raise_coin_type.name).full_address,tick_spacing:Number(e.tick_spacing),total_supply:e.total_supply,min_purchase:e.min_purchase_amount,max_purchase:e.max_purchase_amount}}static buildIdoPool(e){const t=Ae(e),i=S(t),s=x(e),n={pool_address:re(s.id.id),coin_type_sale:i.type_arguments[0],coin_type_raise:i.type_arguments[1],tick_spacing:Number(s.tick_spacing),total_supply:s.total_supply,min_purchase:s.min_purchase_amount,max_purchase:s.max_purchase_amount},o={start_time:Number(s.duration_manager.fields.start_time),lock_up_duration:Number(s.duration_manager.fields.lock_up_duration),purchase_duration:Number(s.duration_manager.fields.purchase_duration),end_time:0};o.end_time=o.start_time+o.purchase_duration;const a={complete_raise_limit:s.complete_raise_limit,liquidity_injection_ratio:u(s.liquidity_injection_ratio).div(Fi).toNumber(),current_sqrt_price_min:s.current_sqrt_price_min,current_sqrt_price_max:s.current_sqrt_price_max,owner:s.owner,sale_coin_amount:s.sale_coin,raise_coin_amount:s.raise_coin,price:s.price,current_price:s.price,duration_summary:o,is_cancelled:s.is_cancelled,is_liquidity_injected:s.is_liquidity_injected,liquidity_used_raise_amount:s.liquidity_used_raise_amount,liquidity_used_sale_amount:s.liquidity_used_sale_amount,purchase_summary:{size:Number(s.purchase_manager.fields.purchases.fields.size),purchase_handle:s.purchase_manager.fields.purchases.fields.id.id},total_purchase_amount:s.total_purchase_amount,white_summary:{white_list_id:s.white_list.fields.id.id,protection_limit_used:s.white_list.fields.protection_limit_used,protection_hard_cap:s.white_list.fields.protection_hard_cap,white_handle:s.white_list.fields.addresses.fields.id.id,size:Number(s.white_list.fields.addresses.fields.size)},pool_status:"Upcoming",max_raise_amount:"",sale_decimals:0,raise_decimals:0,is_withdrawn:s.is_withdrawn};return G.updatePoolStatus(a),{...n,...a}}static is_init_period(e){return Number(u(Date.now()/1e3).toFixed(0))<e.start_time}static is_purchase_period(e){const t=Number(u(Date.now()/1e3).toFixed(0));return t>=e.start_time&&t<=e.start_time+e.purchase_duration}static is_claim_period(e){const t=Number(u(Date.now()/1e3).toFixed(0)),i=e.start_time+e.purchase_duration;return t>i}static is_can_inject_liquidity(e){return!e.is_cancelled&&e.liquidity_injection_ratio!==0&&G.is_claim_period(e.duration_summary)&&!e.is_liquidity_injected}static is_can_withdraw(e){return e.is_withdrawn?!1:G.is_sale_failed(e)?!0:(e.liquidity_injection_ratio===0||e.is_liquidity_injected)&&G.is_claim_period(e.duration_summary)}static is_sale_failed(e){return!!(e.is_cancelled||G.is_claim_period(e.duration_summary)&&u(e.total_purchase_amount).lessThan(e.complete_raise_limit))}static buildPurchaseInfo(e){return{...e.value.fields.value.fields,owner:e.name}}static calculateRedeemAmount(e,t){let i,s;if(G.is_sale_failed(e))i="0",s="0";else if(t.is_redeemed)i=t.obtained_sale_amount,s=t.used_raise_amount;else if(u(e.total_purchase_amount).lessThanOrEqualTo(e.max_raise_amount))i=u(t.purchased_raise_amount).mul(at).div(e.price).toString(),s=t.purchased_raise_amount;else{const o=G.redeemForSaleOversubcribe(e,t);i=o.user_obtained_sale_amount,s=o.user_used_raise_amount_ceil}i=$.floor(i);const n=$.floor(u(t.purchased_raise_amount).sub(s).toString());return{obtained_sale_amount:i,refunded_raise_amount:n}}static calculateWithdrawAmount(e){let t,i;const s=u(e.total_supply).mul(e.liquidity_injection_ratio);if(G.is_sale_failed(e))t="0",i=u(s).add(e.total_supply);else{const{max_raise_amount:n}=e;u(e.total_purchase_amount).greaterThanOrEqualTo(n)?(t=u(n).sub(e.liquidity_used_raise_amount).toString(),i="0"):(t=u(e.total_purchase_amount).sub(e.liquidity_used_raise_amount),i=u(e.total_supply).add(s).sub(e.liquidity_used_sale_amount).sub(G.get_sold_amount(e)))}return{obtained_raise_amount:$.floor(t).toString(),refunded_sale_amount:$.ceil(i).toString()}}static get_sold_amount(e){return u(e.total_purchase_amount).greaterThanOrEqualTo(e.max_raise_amount)?e.total_supply:u(e.total_purchase_amount).mul(at).div(e.price)}static redeemForSaleOversubcribe(e,t){const i=t.protection_raise_amount,s=u(t.purchased_raise_amount).sub(i),n=e.max_raise_amount,{protection_limit_used:o}=e.white_summary,a=u(n).sub(o),c=u(e.total_purchase_amount).sub(o),d=$.ceil(s.mul(a).div(c).add(i)),l=$.floor(s.mul(a).div(c).add(i));return{user_obtained_sale_amount:$.floor(u(e.total_supply).mul(l).div(n)),user_used_raise_amount_ceil:d}}static raiseTotalAmount(e){const t=u(e.sale_decimals-e.raise_decimals).abs().toNumber();return e.sale_decimals>e.raise_decimals?u(e.total_supply).mul(e.current_price).div(u(10).pow(u(t))).toString():u(e.total_supply).mul(e.current_price).mul(u(10).pow(u(t))).toString()}static updatePoolStatus(e){const t=Number(u(Date.now()/1e3).toFixed(0)),i=e.duration_summary,s=i.start_time+i.purchase_duration;e.is_cancelled?e.pool_status="Canceled":t<i.start_time?e.pool_status="Upcoming":t>i.start_time&&t<s?e.pool_status="Live":u(e.total_purchase_amount).lessThan(e.complete_raise_limit)?e.pool_status="Failed":e.pool_status="Ended"}static async calculatePoolUiPrice(e,t){const i=await e.ClmmSDK.CetusConfig.getTokenListByCoinTypes([t.coin_type_sale,t.coin_type_raise]),s=i[t.coin_type_sale].decimals,n=i[t.coin_type_raise].decimals;t.current_price=H.priceFixToReal(Number(u(t.price).div(u(at)).toString()),s,n).toString(),t.sale_decimals=s,t.raise_decimals=n,t.max_raise_amount=this.raiseTotalAmount(t)}},So=class{constructor(e){q(this,"_sdk");this._sdk=e}async getPools(e=[],t=!1){const i=[];if(e.length>0){if(e.filter(n=>{const o=`${n}_getPool`,a=this._sdk.getCache(o,t);return a?(i.push(a),!1):!0}).length>0){const n=await this._sdk.ClmmSDK.fullClient.batchGetObjects(e,{showType:!0,showContent:!0});for(const o of n){const a=await this.buildIdoWarpPool(o);a&&i.push(a)}}}else{const s=await this._sdk.Launchpad.getPools(),n=await this._sdk.Ido.getPools();s.forEach(o=>{i.push({...o,version:"1"})}),n.forEach(o=>{i.push({...o,version:"2"})})}return i.forEach(s=>{const n=`${s.pool_address}_getPool`;this._sdk.updateCache(n,s)}),i}async getPool(e,t=!0){const i=`${e}_getPool`,s=this._sdk.getCache(i,t);if(s)return s;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),o=await this.buildIdoWarpPool(n);return this._sdk.updateCache(i,o),o}async getJoinPools(e,t){const i=[],s=t.filter(o=>o.version==="1"),n=t.filter(o=>o.version==="2");if(s.length>0){const o=await this._sdk.Launchpad.getPurchaseMarks(e,s.map(a=>a.pool_address),!1);s.forEach(a=>{for(const c of o)if(c.pool_id===a.pool_address){i.push(a);break}})}for(const o of n)await this._sdk.Ido.getPurchaseInfo(o.purchase_summary.purchase_handle,e,!1)&&i.push(o);return i}async getOwnerPools(e,t){return t.filter(i=>i.owner===V(e))}async creatPurchasePayload(e,t){return e.version==="1"?await this._sdk.Launchpad.creatPurchasePayload({pool_address:e.pool_address,purchase_amount:t,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise}):await this._sdk.Ido.creatPurchasePayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise,purchase_handle:e.purchase_summary.purchase_handle,raise_amount:t.toString()})}async creatRedeemPayload(e){return e.version==="1"?await this._sdk.Launchpad.creatClaimPayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise}):await this._sdk.Ido.redeemPayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise,purchase_handle:e.purchase_summary.purchase_handle})}async creatWithdrawPayload(e){if(e.version==="1"){const i=await H.getWithdrawSale(e),s=await H.getWithdrawRaise(e);return this._sdk.Launchpad.creatWithdrawPayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise,sale_amount:BigInt(i),raise_amount:BigInt(s)})}return this._sdk.Ido.withdrawPayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise})}unlockNftPayload(e,t){return e.version==="1"?this._sdk.Launchpad.creatUnlockNftPayload(t):this._sdk.Ido.unlockNftPayload({lock_nft_id:t.lock_nft,nft_type:t.nft_type})}async getLockNFTList(e){let t=[];return e.version==="1"&&(t=await this._sdk.Launchpad.getLockNFTList(e.owner)),t=await this._sdk.Ido.getLockNFTList(e.owner),t.filter(s=>s.coin_type_a===e.coin_type_sale&&s.coin_type_b===e.coin_type_raise||s.coin_type_a===e.coin_type_raise&&s.coin_type_b===e.coin_type_sale)}async isWhiteListUser(e,t){return t.version==="1"?await this._sdk.Launchpad.isWhiteListUser(t.white_summary.white_handle,e):!!await this._sdk.Ido.getWhiteProtectionLimit(t.white_summary.white_handle,e)}async getPurchaseInfo(e,t){if(t.version==="1"){const s=await this._sdk.Launchpad.getPurchaseMarks(e,[t.pool_address]);return s.length>0?s[0]:void 0}return await this._sdk.Ido.getPurchaseInfo(t.purchase_summary.purchase_handle,e)}async getwhiteProtectionInfo(e,t,i=!1){if(t.version==="1")return await this._sdk.Launchpad.getPurchaseAmount(t.white_summary.white_handle,e);const s=await this._sdk.Ido.getPurchaseInfo(t.purchase_summary.purchase_handle,e,i);if(s)return{safe_limit_amount:s.protection_raise_limit,safe_purchased_amount:s.protection_raise_amount};const n=await this._sdk.Ido.getWhiteProtectionLimit(t.white_summary.white_handle,e,!1);return n?{safe_limit_amount:n,safe_purchased_amount:"0"}:{safe_limit_amount:"0",safe_purchased_amount:"0"}}async calculateWithdrawAmount(e){if(e.version==="1"){const t=await H.getHistoryWithdrawRaise(this._sdk,e),i=await H.getHistoryWithdrawSale(this._sdk,e);return{obtained_raise_amount:t,refunded_sale_amount:i}}return G.calculateWithdrawAmount(e)}async buildIdoWarpPool(e){const t=Ge(e);if(S(t).address===this._sdk.sdkOptions.ido.package_id){const i=G.buildIdoPool(e);return await G.calculatePoolUiPrice(this._sdk,i),{...i,version:"2"}}if(S(t).address===this._sdk.sdkOptions.launchpad.package_id){const i=H.buildLaunchPadPool(e);return await H.calculatePoolPrice(this._sdk,i),{...i,version:"1"}}}},Ie=class{static buildVeNFTDividendInfo(e){const t={id:e.id.id,ve_nft_id:e.name,rewards:[]};return e.value.fields.value.fields.dividends.fields.contents.forEach(i=>{const s=[];i.fields.value.fields.contents.forEach(n=>{s.push({coin_type:S(n.fields.key.fields.name).source_address,amount:n.fields.value})}),t.rewards.push({period:Number(i.fields.key),rewards:s})}),t}static buildDividendManager(e){const t={id:e.id.id,dividends:{id:e.dividends.fields.id.id,size:e.dividends.fields.size},venft_dividends:{id:e.venft_dividends.fields.id.id,size:e.venft_dividends.fields.size},bonus_types:[],start_time:Number(e.start_time),interval_day:Number(e.interval_day),balances:{id:e.balances.fields.id.id,size:e.balances.fields.size},is_open:e.is_open};return e.bonus_types.forEach(i=>{t.bonus_types.push(S(i.fields.name).source_address)}),t}static buildLockUpManager(e){return{id:e.id.id,balance:e.balance,treasury_manager:e.treasury_manager,extra_treasury:e.extra_treasury,lock_infos:{lock_handle_id:e.lock_infos.fields.id.id,size:Number(e.lock_infos.fields.size)},type_name:ai(e.type_name.fields.name),min_lock_day:Number(e.min_lock_day),max_lock_day:Number(e.max_lock_day),package_version:Number(e.package_version),max_percent_numerator:Number(e.max_percent_numerator),min_percent_numerator:Number(e.min_percent_numerator)}}static buildLockToken(e){const t=e.fields,i={id:t.id.id,type:S(e.type).source_address,locked_start_time:Number(t.locked_start_time),locked_until_time:Number(t.locked_until_time),token_amount:t.balance,xtoken_amount:"0",lock_day:0};return i.lock_day=(i.locked_until_time-i.locked_start_time)/Ve,i}static getAvailableXToken(e,t){let i=u(0);return t.forEach(s=>{i=i.add(s.xtoken_amount)}),u(e.xtoken_balance).sub(i).toString()}static getWaitUnLockTokens(e){return e.filter(t=>!Ie.isLocked(t))}static getLockingTokens(e){return e.filter(t=>Ie.isLocked(t))}static buildDividendRewardTypeList(e){const t=new Set;return e.forEach(i=>{i.rewards.forEach(s=>{t.add(s.coin_type)})}),Array.from(t)}static isLocked(e){return e.locked_until_time>Date.parse(new Date().toString())/1e3}static getNextStartTime(e,t=Ve){const i=Date.now()/1e3,{start_time:s,interval_day:n}=e,o=Math.ceil((i-s)/(n*t));return s+o*n*t}},pe=class{static getDefaultStrategyConfig(e){let t;switch(e){case 4:t=ni.bidAsk;break;default:t=ni.curve;break}return t}static geTickIndexRange(e,t,i,s){let n,o;switch(e=N.getInitializableTickIndex(e,t),s){case"left":e>0?(o=u(e).sub(t).toNumber(),n=u(e).mul(u(1).add(i)).toDecimalPlaces(0).toNumber()):(o=u(e).sub(t).toNumber(),n=u(e).mul(u(1).sub(i)).toDecimalPlaces(0).toNumber());break;case"right":e>0?(o=u(e).mul(u(1).add(i)).toDecimalPlaces(0).toNumber(),n=u(e).add(t).toNumber()):(o=u(e).mul(u(1).sub(i)).toDecimalPlaces(0).toNumber(),n=u(e).add(t).toNumber());break;default:e>0?(n=u(e).mul(u(1).sub(i)).toDecimalPlaces(0).toNumber(),o=u(e).mul(u(1).add(i)).toDecimalPlaces(0).toNumber()):(n=u(e).mul(u(1).add(i)).toDecimalPlaces(0).toNumber(),o=u(e).mul(u(1).sub(i)).toDecimalPlaces(0).toNumber());break}if(n=N.getInitializableTickIndex(n,t),o=N.getInitializableTickIndex(o,t),n<Zi)throw Error("Tick lower value is below the minimum allowed value.");if(o>Qi)throw Error("Tick upper value is above the maximum allowed value.");return{tick_lower:n,tick_upper:o}}static getCreateLiquidityBins(e,t){let i=[];switch(t){case 4:i=pe.getCreateBidAskLiquidityBins(e);break;default:i=pe.getCreateCurveLiquidityBins(e);break}return i}static getCreateBidAskLiquidityBins(e){const t=u(Math.floor(u(e.tick_upper).sub(e.tick_lower).div(e.div_width).toNumber())).abs(),i=[],s=e.ratios;let n,o;for(let a=0;a<s.length;a++){let c,d;e.tick_upper<=e.curr_tick?(d=u(e.tick_upper).sub(t.mul(a)).toNumber(),c=u(d).sub(t).toNumber()):e.tick_lower>=e.curr_tick?(c=u(e.tick_lower).add(t.mul(a)).toNumber(),d=u(e.tick_lower).add(t.mul(a+1)).toNumber()):a===4?(c=u(e.tick_lower).add(t.mul(a)).toNumber(),d=u(c).add(t.mul(2)).toNumber()):a>4?(c=u(e.tick_lower).add(t.mul(a+1)).toNumber(),d=u(c).add(t).toNumber()):(c=u(e.tick_lower).add(t.mul(a)).toNumber(),d=u(c).add(t).toNumber()),n=N.getInitializableTickIndex(c,e.tick_spacing),o=N.getInitializableTickIndex(d,e.tick_spacing),i.push({tick_lower:n,tick_upper:o,ratio:s[a],liquidity:"0"})}return i}static getCreateCurveLiquidityBins(e){const t=u(Math.floor(u(e.tick_upper).sub(e.tick_lower).div(e.div_width).toNumber())).abs(),i=[],s=e.ratios;for(let n=0;n<s.length;n++){let o,a;e.tick_upper<=e.curr_tick?(a=e.tick_upper,o=u(e.tick_upper).sub(t.mul(n+1)).toNumber()):e.tick_lower>=e.curr_tick?(o=e.tick_lower,a=u(o).add(t.mul(n+1)).toNumber()):(o=u(e.curr_tick).sub(t.mul(n+1)).toNumber(),a=u(e.curr_tick).add(t.mul(n+1)).toNumber()),i.push({tick_lower:N.getInitializableTickIndex(o,e.tick_spacing),tick_upper:N.getInitializableTickIndex(a,e.tick_spacing),ratio:s[n],liquidity:"0"})}return i}static calculateAddLiquidityInputs(e){const t=new P(N.tickIndexToSqrtPriceX64(e.curr_tick)),i=pe.calculateCoinRatios(e.curr_tick,e.liquidity_bins),s=e.liquidity_bins.map((n,o)=>{const a=i[o],c=u(e.coin_amount).mul(e.fix_amount_a?a.coinRatioA:a.coinRatioB).toFixed(0).toString();try{return{...ie.estLiquidityAndcoinAmountFromOneAmounts(n.tick_lower,n.tick_upper,new P(c),e.fix_amount_a,!0,e.slippage,t),...n}}catch{return{coinAmountA:new P(0),coinAmountB:new P(0),tokenMaxA:new P(0),tokenMaxB:new P(0),liquidityAmount:new P(0),fix_amount_a:!e.fix_amount_a,...n}}});return pe.fixLiquidityInputs(t,e.slippage,s,!0)}static fixLiquidityInputs(e,t,i,s){const n=i.filter(a=>a.liquidityAmount.gt(zt));if(n.length===0)return[];const o=n[0];return i.map(a=>{if(a.liquidityAmount.eq(zt)){const c=u(o.liquidityAmount.toString()).mul(a.ratio).div(o.ratio).toFixed(0),d=N.tickIndexToSqrtPriceX64(a.tick_lower),l=N.tickIndexToSqrtPriceX64(a.tick_upper),p=ie.getCoinAmountFromLiquidity(new P(c.toString()),e,d,l,!1);return{coinAmountA:p.coinA,coinAmountB:p.coinB,liquidityAmount:new P(c.toString()),fix_amount_a:a.fix_amount_a,..._t(p,pt.fromDecimal(u(t).mul(100)),s)}}return a})}static calculateCoinRatios(e,t){const i=new P(N.tickIndexToSqrtPriceX64(e)),s=[];let n=u(0),o=u(0);const a=t.map(l=>{const p=u(es(100,6).toString()).mul(l.ratio).toFixed(0).toString(),h=N.tickIndexToSqrtPriceX64(l.tick_lower),g=N.tickIndexToSqrtPriceX64(l.tick_upper),b=ie.getCoinAmountFromLiquidity(new P(p),i,h,g,!0);return n=n.add(b.coinA.toString()),o=o.add(b.coinB.toString()),{...b,liquidity:p}}),c=[],d=[];return a.forEach((l,p)=>{const h={coinRatioA:n.eq(u(0))?0:u(l.coinA.toString()).div(n).toNumber(),coinRatioB:o.eq(u(0))?0:u(l.coinB.toString()).div(o).toNumber(),liquiditys:l.liquidity,tick_lower:t[p].tick_lower,tick_upper:t[p].tick_upper};s.push(h),c.push(n.eq(u(0))?0:u(l.coinA.toString()).div(n).toNumber()),d.push(o.eq(u(0))?0:u(l.coinB.toString()).div(o).toNumber())}),s}static calculateCloseMasterLiquidityInputs(e){const t=new P(N.tickIndexToSqrtPriceX64(e.curr_tick));return e.positions.map(s=>{const n=new P(s.liquidity),o=N.tickIndexToSqrtPriceX64(s.tick_lower_index),a=N.tickIndexToSqrtPriceX64(s.tick_upper_index),c=ie.getCoinAmountFromLiquidity(n,t,o,a,!1),d=pt.fromDecimal(u(e.slippage).mul(100)),{tokenMaxA:l,tokenMaxB:p}=_t(c,d,!1);return{coinAmountA:c.coinA,coinAmountB:c.coinB,tokenMaxA:l,tokenMaxB:p,liquidityAmount:n,fix_amount_a:!1}})}static calculateRemoveMasterLiquidityInputs(e){const t=new P(N.tickIndexToSqrtPriceX64(e.curr_tick)),{fix_token:i}=e;if(i){const n=e.positions.map((c,d)=>({tick_lower:c.tick_lower_index,tick_upper:c.tick_upper_index,ratio:e.ratios[d]})),o=pe.calculateCoinRatios(e.curr_tick,n),a=e.positions.map((c,d)=>{const l=o[d],p=u(i.coin_amount).mul(i.fix_amount_a?l.coinRatioA:l.coinRatioB).toFixed(0).toString();try{const h=ie.estLiquidityAndcoinAmountFromOneAmounts(c.tick_lower_index,c.tick_upper_index,new P(p),i.fix_amount_a,!1,e.slippage,t);return{...h,tick_lower:c.tick_lower_index,tick_upper:c.tick_upper_index,liquidity:h.liquidityAmount.toString(),ratio:e.ratios[d]}}catch{return{coinAmountA:new P(0),coinAmountB:new P(0),tokenMaxA:new P(0),tokenMaxB:new P(0),liquidityAmount:new P(0),fix_amount_a:!i.fix_amount_a,tick_lower:c.tick_lower_index,tick_upper:c.tick_upper_index,liquidity:"0",ratio:e.ratios[d]}}});return pe.fixLiquidityInputs(t,e.slippage,a,!1)}return e.positions.map((n,o)=>{const a=e.ratios[o];let c=u(e.liquidity).mul(a).toFixed(0);u(c).greaterThan(n.liquidity)&&(c=n.liquidity);const d=N.tickIndexToSqrtPriceX64(n.tick_lower_index),l=N.tickIndexToSqrtPriceX64(n.tick_upper_index),p=ie.getCoinAmountFromLiquidity(new P(c),t,d,l,!1),h=pt.fromDecimal(u(e.slippage).mul(100)),{tokenMaxA:g,tokenMaxB:b}=_t(p,h,!1);return{coinAmountA:p.coinA,coinAmountB:p.coinB,tokenMaxA:g,tokenMaxB:b,liquidityAmount:new P(c),fix_amount_a:!1}})}static buildMasterPosition(e){return{coin_type_a:S(e.coin_type_a.fields.name).full_address,coin_type_b:S(e.coin_type_b.fields.name).full_address,description:e.description,id:e.id.id,index:e.index,liquidity:e.liquidity,name:e.name,pool:e.pool,tick_lower_index:Pe(BigInt(e.tick_lower_index.fields.bits)),tick_upper_index:Pe(BigInt(e.tick_upper_index.fields.bits)),url:e.url}}static buildMasterNFT(e){const t=x(e);if(t){const i={id:t.id.id,pool_id:t.pool_id,index:Number(t.index),strategy:Number(t.strategy),tick_lower_index:Pe(BigInt(t.tick_lower_index)),tick_upper_index:Pe(BigInt(t.tick_upper_index)),positions:[],...Dt(e)};return i.positions=t.positions.map(s=>pe.buildMasterPosition(s.fields)),i}}},me=class{static generateNextTickRange(e,t,i){const s=e-t/2,n=e+t/2;return{new_tick_lower:me.getValidTickIndex(s,i),new_tick_upper:me.getValidTickIndex(n,i)}}static calculateDepositRatio(e,t,i){const s=N.sqrtPriceX64ToTickIndex(i);if(s<e)return{ratioA:new $(1),ratioB:new $(0)};if(s>t)return{ratioA:new $(0),ratioB:new $(1)};const n=new P(1e8),{coinAmountB:o}=ie.estLiquidityAndcoinAmountFromOneAmounts(e,t,n,!0,!0,0,i),a=N.sqrtPriceX64ToPrice(i,0,0),c=u(n.toString()).mul(a),d=c.add(o.toString()),l=c.div(d),p=u(o.toString()).div(d);return{ratioA:l,ratioB:p}}static getValidTickIndex(e,t){if(e%t===0)return e;let i;if(e>0?i=e-e%t+t:e<0?i=e+Math.abs(e)%t-t:i=e,i%t!==0)throw new Error("Assertion failed: res % tickSpacing == 0");if(Math.abs(i)<Math.abs(e))throw new Error("Assertion failed: res.abs() >= tickIndex");return i}static get_lp_amount_by_liquidity(e,t){return e.total_supply==="0"?t:u(e.total_supply).mul(t).div(e.liquidity).toFixed(0,$.ROUND_DOWN).toString()}static get_share_liquidity_by_amount(e,t){return u(t).mul(e.liquidity).div(e.total_supply).toFixed(0,$.ROUND_DOWN).toString()}static get_protocol_fee_amount(e,t){return u(t).mul(e.protocol_fee_rate).div(ho).toFixed(0,$.ROUND_CEIL)}static buildPosition(e){return{coin_type_a:S(e.coin_type_a.fields.name).full_address,coin_type_b:S(e.coin_type_b.fields.name).full_address,description:e.description,id:e.id.id,index:e.index,liquidity:e.liquidity,name:e.name,pool:e.pool,tick_lower_index:Pe(BigInt(e.tick_lower_index.fields.bits)),tick_upper_index:Pe(BigInt(e.tick_upper_index.fields.bits)),url:e.url}}static buildPool(e){const t=x(e),i=Ge(e);if(t){const s={id:t.id.id,pool_id:t.pool,protocol_fee_rate:t.protocol_fee_rate,is_pause:t.is_pause,harvest_assets:{harvest_assets_handle:t.harvest_assets.fields.id.id,size:Number(t.harvest_assets.fields.size)},positins:[],lp_token_type:S(i).type_arguments[0],total_supply:t.lp_token_treasury.fields.total_supply.fields.value,liquidity:t.liquidity,max_quota:t.max_quota,status:t.status===1?"STATUS_RUNNING":"STATUS_REBALANCING",quota_based_type:t.quota_based_type.fields.name};return s.positins=t.positions.map(n=>me.buildPosition(n.fields)),s}}},go=class{constructor(e){q(this,"_sdk");q(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e="all",t=!1){const{package_id:i}=this._sdk.sdkOptions.ido,s=`${i}_getPoolImmutables`,n=this.getCache(s,t),o={data:[],hasNextPage:!1},a=[];if(n!==void 0&&a.push(...n),a.length===0)try{const c=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${i}::oversubscribe_pool::CreatePoolEvent`},e);c.data.forEach(d=>{const l=d.parsedJson;if(l){const p=G.buildIdoPoolImmutables(l);a.push(p)}}),o.hasNextPage=c.hasNextPage,o.nextCursor=c.nextCursor,this.updateCache(s,a,D)}catch(c){console.log("getPoolImmutables",c)}return o.data=a,o}async getPools(e=[],t=!1){const i=[];let s=[];e.length>0?s=[...e]:(await this.getPoolImmutables("all",t)).data.forEach(a=>{s.push(a.pool_address)});const n=await this._sdk.ClmmSDK.fullClient.batchGetObjects(s,{showType:!0,showContent:!0});for(const o of n){const a=G.buildIdoPool(o);await G.calculatePoolUiPrice(this._sdk,a),i.push(a);const c=`${a.pool_address}_getPoolObject`;this.updateCache(c,a,D)}return i}async getPool(e,t=!0){const i=`${e}_getPoolObject`,s=this.getCache(i,t);if(s!==void 0)return s;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),o=G.buildIdoPool(n);return await G.calculatePoolUiPrice(this._sdk,o),this.updateCache(i,o),o}async getIdoConfigs(e=!1){var d;const{package_id:t}=this._sdk.sdkOptions.ido,i=`${t}_getInitEvent`,s=this.getCache(i,e);if(s!==void 0)return s;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showPreviousTransaction:!0}}),o=oi(n),a=(d=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({Transaction:o}))==null?void 0:d.data,c={pools_id:"",admin_cap_id:"",package_version_id:""};return a.length>0&&(a.forEach(l=>{console.log("item: ",l);const p=l.parsedJson;if(p)switch(S(l.type).full_address){case`${t}::config::InitConfigEvent`:c.admin_cap_id=p.admin_cap_id,c.package_version_id=p.package_version_id;break;case`${t}::factory::InitFactoryEvent`:c.pools_id=p.pools_id;break}}),this.updateCache(i,c,D)),c}async getPurchaseInfo(e,t,i=!0){const s=`${e}_${t}_getPurchaseInfo`,n=this.getCache(s,i);if(n)return n;try{const o=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"address",value:t}}),a=G.buildPurchaseInfo(x(o));return this.updateCache(s,a,be),a}catch{return}}async getLockNFT(e,t=!1){const i=`${e}_getLockNFT`,s=this.getCache(i,t);if(s!==void 0)return s;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}});if(!n.error)return Ot(n)}async getLockNFTList(e){var n;const{clmm_pool:t}=this._sdk.ClmmSDK.sdkOptions,{ido:i}=this._sdk.sdkOptions,s=[];try{const o=(n=await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{filter:{StructType:`${i.package_id}::lock::LockedNFT<${t.package_id}::position::Position>`},options:{showContent:!0}}))==null?void 0:n.data;for(const a of o){const c=x(a);if(c){const d=c.nft.fields,l={locked_at:Number(c.locked_at),lock_duration:Number(c.lock_duration),lock_nft_id:c.id.id,type:c.nft.type,...d};l.end_lock_time=l.locked_at+l.lock_duration,l.coin_type_a=S(d.coin_type_a.fields.name).full_address,l.coin_type_b=S(d.coin_type_b.fields.name).full_address,l.id=d.id.id,l.tick_lower_index=Pe(BigInt(d.tick_lower_index.fields.bits)),l.tick_upper_index=Pe(BigInt(d.tick_upper_index.fields.bits)),s.push(l)}}return s}catch(o){return console.log("getLockNFTList:",o),[]}}async creatPool(e){const{ido:t}=this.sdk.sdkOptions;Hi(V(e.coin_type_sale),V(e.coin_type_raise))&&(e.price_min=u(1).div(e.price_max).toNumber(),e.price_max=u(1).div(e.price_min).toNumber());const s=H.priceRealToFix(Number(e.price),e.sale_decimals,e.raise_decimals),n=N.priceToSqrtPriceX64(u(e.price_min),e.sale_decimals,e.raise_decimals).toString(),o=N.priceToSqrtPriceX64(u(e.price_max),e.sale_decimals,e.raise_decimals).toString(),a=new C,c=u(e.total_supply).add(u(e.total_supply).mul(u(e.liquidity_injection_ratio))).toNumber(),d=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,e.coin_type_sale),l=W.buildCoinForAmount(a,d,BigInt(c),e.coin_type_sale,!1),p=[a.pure(m(t).admin_cap_id),a.pure(m(t).package_version_id),a.pure(m(t).pools_id),a.pure(V(e.owner)),a.pure(u(s).mul(at).toString()),a.pure(e.total_supply),a.pure(e.complete_raise_limit),a.pure(e.min_purchase_amount),a.pure(e.max_purchase_amount),a.pure(e.start_time),a.pure(e.purchase_duration),a.pure(e.lock_up_duration),a.pure((e.liquidity_injection_ratio*Fi).toString()),a.pure(n),a.pure(o),a.pure(e.tick_spacing.toString()),l.targetCoin,a.pure(e.protection_hard_cap.toString()),a.pure(v)],h=[e.coin_type_sale,e.coin_type_raise];return a.moveCall({target:`${t.published_at}::${_o}::create_oversubscribe_pool`,typeArguments:h,arguments:p}),a}async creatPurchasePayload(e){const{ido:t}=this.sdk.sdkOptions,i=new C,s=await this.getPurchaseInfo(e.purchase_handle,this._sdk.ClmmSDK.senderAddress,!1),n=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,e.coin_type_raise),o=W.buildCoinForAmount(i,n,BigInt(e.raise_amount),e.coin_type_raise,!1),a=[e.coin_type_sale,e.coin_type_raise];let c,d;return s?(d="purchase",c=[i.object(m(t).package_version_id),i.object(e.pool_address),i.object(s.purchase_certificate_id),i.pure(e.raise_amount.toString()),o.targetCoin,i.pure(v)]):(d="create_certificate_and_purchase",c=[i.object(m(t).package_version_id),i.object(e.pool_address),i.pure(e.raise_amount.toString()),o.targetCoin,i.pure(v)]),i.moveCall({target:`${t.published_at}::${te}::${d}`,typeArguments:a,arguments:c}),i}async redeemPayload(e){const{ido:t}=this.sdk.sdkOptions,i=await this.getPurchaseInfo(e.purchase_handle,this._sdk.ClmmSDK.senderAddress,!1);if(i===void 0)throw Error("get purchase certificate fail");const s=new C,n=[e.coin_type_sale,e.coin_type_raise],o=[s.pure(m(t).package_version_id),s.pure(e.pool_address),s.pure(i.purchase_certificate_id),s.pure(v)];return s.moveCall({target:`${t.published_at}::${te}::redeem`,typeArguments:n,arguments:o}),s}injectLiquidityPayload(e){const{ido:t}=this.sdk.sdkOptions,{clmm_pool:i}=this.sdk.ClmmSDK.sdkOptions,s=new C,n=[e.coin_type_sale,e.coin_type_raise],o=e.is_reverse?"inject_liquidity_with_reverse_clmm_pool":"inject_liquidity_with_forward_clmm_pool",a=[s.pure(m(t).package_version_id),s.pure(e.pool_address),s.pure(m(i).global_config_id),s.pure(e.clmm_pool_address),s.pure(v)];return s.moveCall({target:`${t.published_at}::${te}::${o}`,typeArguments:n,arguments:a}),s}unPauseInjectLiquidity(e){const{ido:t}=this.sdk.sdkOptions,{integrate:i,clmm_pool:s}=this.sdk.ClmmSDK.sdkOptions,n=new C;n.moveCall({target:`${i.published_at}::${Yi}::unpause_pool`,typeArguments:[e.coin_type_a,e.coin_type_b],arguments:[n.object(m(s).global_config_id),n.object(e.clmm_pool_address)]});const o=[e.coin_type_sale,e.coin_type_raise],a=e.is_reverse?"inject_liquidity_with_reverse_clmm_pool":"inject_liquidity_with_forward_clmm_pool",c=[n.object(m(t).package_version_id),n.object(e.pool_address),n.object(m(s).global_config_id),n.object(e.clmm_pool_address),n.object(v)];return n.moveCall({target:`${t.published_at}::${te}::${a}`,typeArguments:o,arguments:c}),n}async findClmmPoolForLiquidity(e){let t=null,i=!1;const s=await this.sdk.ClmmSDK.Pool.getPoolImmutables();for(const n of s){if(n.coinTypeA===e.coin_type_sale&&n.coinTypeB===e.coin_type_raise&&Number(n.tickSpacing)===e.tick_spacing){t=await this._sdk.ClmmSDK.Pool.getPool(n.poolAddress);break}if(n.coinTypeA===e.coin_type_raise&&n.coinTypeB===e.coin_type_sale&&Number(n.tickSpacing)===e.tick_spacing){t=await this._sdk.ClmmSDK.Pool.getPool(n.poolAddress),i=!0;break}}return t&&(u(t.current_sqrt_price).lessThanOrEqualTo(e.current_sqrt_price_min)||u(t.current_sqrt_price).greaterThanOrEqualTo(e.current_sqrt_price_max))?(console.log("clmmPool: ",t.poolAddress),{is_reverse:i,clmmPool:null}):{is_reverse:i,clmmPool:t}}withdrawPayload(e){const{ido:t}=this.sdk.sdkOptions,i=new C,s=[e.coin_type_sale,e.coin_type_raise],n=[i.object(m(t).package_version_id),i.object(e.pool_address),i.object(v)];return i.moveCall({target:`${t.published_at}::${te}::withdraw`,typeArguments:s,arguments:n}),i}updateWhitelistCapPayload(e){const{ido:t}=this.sdk.sdkOptions,i=new C,s=[e.coin_type_sale,e.coin_type_raise];return e.add_whites&&e.add_whites.addresses.length>0&&i.moveCall({target:`${t.published_at}::${te}::add_white_listed_addresses`,typeArguments:s,arguments:[i.object(m(t).admin_cap_id),i.object(m(t).package_version_id),i.object(e.pool_address),i.makeMoveVec({type:"address",objects:e.add_whites.addresses.map(n=>i.pure(re(n),"address"))}),i.pure(e.add_whites.protection_limit),i.object(v)]}),e.remove_whites&&e.remove_whites.length>0&&i.moveCall({target:`${t.published_at}::${te}::remove_white_listed_addresses`,typeArguments:s,arguments:[i.object(m(t).admin_cap_id),i.object(m(t).package_version_id),i.object(e.pool_address),i.makeMoveVec({type:"address",objects:e.remove_whites.map(n=>i.pure(re(n),"address"))}),i.object(v)]}),e.update_whites&&e.update_whites.forEach(n=>{i.moveCall({target:`${t.published_at}::${te}::update_white_listed_address`,typeArguments:s,arguments:[i.object(m(t).admin_cap_id),i.object(m(t).package_version_id),i.object(e.pool_address),i.object(n.address),i.pure(n.protection_limit),i.object(v)]})}),i}creatCancelPoolPayload(e){const{ido:t}=this.sdk.sdkOptions,i=new C,s=[e.coin_type_sale,e.coin_type_raise],n=[i.pure(m(t).admin_cap_id),i.pure(m(t).package_version_id),i.pure(e.pool_address),i.pure(v)];return i.moveCall({target:`${t.published_at}::${te}::cancel`,typeArguments:s,arguments:n}),i}updatePoolOwnerPayload(e,t){const{ido:i}=this.sdk.sdkOptions;t=t===void 0?new C:t;const s=[e.coin_type_sale,e.coin_type_raise],n=[t.object(m(i).admin_cap_id),t.object(m(i).package_version_id),t.object(e.pool_address),t.object(e.new_owner),t.object(v)];return t.moveCall({target:`${i.published_at}::${te}::update_pool_owner`,typeArguments:s,arguments:n}),t}updatePoolDuractionPayload(e,t){const{ido:i}=this.sdk.sdkOptions;t=t===void 0?new C:t;const s=[e.coin_type_sale,e.coin_type_raise],n=[t.object(m(i).admin_cap_id),t.object(m(i).package_version_id),t.object(e.pool_address),t.pure(e.start_time),t.pure(e.purchase_duration),t.pure(e.lock_duration),t.object(v)];return t.moveCall({target:`${i.published_at}::${te}::update_pool_duration`,typeArguments:s,arguments:n}),t}updateProtectionHardCapPayload(e,t){const{ido:i}=this.sdk.sdkOptions;t=t===void 0?new C:t;const s=[e.coin_type_sale,e.coin_type_raise],n=[t.object(m(i).admin_cap_id),t.object(m(i).package_version_id),t.object(e.pool_address),t.pure(e.protection_hard_cap),t.object(v)];return t.moveCall({target:`${i.published_at}::${te}::update_protection_hard_cap`,typeArguments:s,arguments:n}),t}unlockNftPayload(e){const{ido:t}=this.sdk.sdkOptions,i=new C,s=[e.nft_type],n=[i.pure(e.lock_nft_id),i.pure(v)];return i.moveCall({target:`${t.published_at}::lock::unlock_nft`,typeArguments:s,arguments:n}),i}async isAdminCap(e){const{ido:t}=this._sdk.sdkOptions,i=`${t.package_id}_${e}_isAdminCap`,s=this.getCache(i);if(s)return s;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:m(t).admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(n);const o=Ge(n),a=wt(n);let c=!1;return a&&o&&S(o).source_address===`${t.package_id}::config::AdminCap`&&(c=V(a.AddressOwner)===V(e)),this.updateCache(i,c,D),c}async getWhiteProtectionLimit(e,t,i=!0){const s=`${e}_${t}_getWhiteProtectionLimit`,n=this._sdk.getCache(s,i);if(n)return n;try{const o=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"address",value:t}});if(o&&o.data){const a=x(o);return this._sdk.updateCache(s,a.value),a.value}return}catch{return}}async getWhiteList(e,t){var s;const i={type:"address",value:t};try{const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:i}),o=x(n);if(console.log(o),o)return(s=o==null?void 0:o.value)==null?void 0:s.fields}catch{}return{safe_limit_amount:"0",safe_purchased_amount:"0"}}async getAdminAddress(){const{ido:e}=this._sdk.sdkOptions,t=`${m(e).admin_cap_id}_getAdminAddress`,i=this.getCache(t);if(i)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:m(e).admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(s);const n=Ge(s),o=wt(s);if(o&&n&&S(n).source_address===`${e.package_id}::config::AdminCap`){const c=V(o.AddressOwner);return this.updateCache(t,c,D),c}return""}updateCache(e,t,i=D){let s=this._cache[e];s?(s.overdueTime=X(i),s.value=t):s=new we(t,X(i)),this._cache[e]=s}getCache(e,t=!1){const i=this._cache[e];if(!t&&(i!=null&&i.isValid()))return i.value;delete this._cache[e]}},fo=class{constructor(e){q(this,"_sdk");q(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getOwnerVeNFT(e,t=!0){const{xtoken:i}=this.sdk.sdkOptions,s=`${e}_getLockUpManagerEvent`,n=this.getCache(s,t);if(n!==void 0)return n;let o;const a=`${i.package_id}::xtoken::VeNFT`;return(await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{options:{showType:!0,showContent:!0,showDisplay:!0},filter:{StructType:a}})).data.forEach(d=>{const l=S(Ae(d)).source_address;if(l===a&&d.data&&d.data.content){const{fields:p}=d.data.content;o={...Dt(d),id:p.id.id,index:p.index,type:l,xtoken_balance:p.xtoken_balance},this.updateCache(s,o,D)}}),o}async getOwnerLockTokens(e){const{xtoken:t}=this.sdk.sdkOptions,i=[],s=`${t.package_id}::lock_coin::LockedCoin<${this.buileTokenCoinType()}>`,n=await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{options:{showType:!0,showContent:!0},filter:{StructType:s}});for(const o of n.data)if(S(Ae(o)).source_address===s&&o.data){const c=Ie.buildLockToken(o.data.content),d=await this.getLockXToken(c.id);d&&(c.xtoken_amount=d.xtoken_amount),i.push(c)}return i}async getLockToken(e){var i;const t=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0}});if((i=t.data)!=null&&i.content){const s=Ie.buildLockToken(t.data.content),n=await this.getLockXToken(s.id);return n&&(s.xtoken_amount=n.xtoken_amount),s}}async getOwnerTokenCoins(e){return await this._sdk.ClmmSDK.getOwnerCoinAssets(e,this.buileTokenCoinType())}mintVeNFTPayload(){const{xtoken:e}=this.sdk.sdkOptions,t=new C;return t.moveCall({target:`${e.published_at}::${Be}::mint_venft`,typeArguments:[],arguments:[t.pure(m(e).xtoken_manager_id)]}),t}async convertPayload(e){const{xtoken:t}=this.sdk.sdkOptions,i=new C,s=this.buileTokenCoinType(),n=await W.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,i,BigInt(e.amount),s);return e.venft_id===void 0?i.moveCall({target:`${t.published_at}::${Be}::mint_and_convert`,typeArguments:[],arguments:[i.object(m(t).lock_manager_id),i.object(m(t).xtoken_manager_id),n,i.pure(e.amount)]}):i.moveCall({target:`${t.published_at}::${Be}::convert`,typeArguments:[],arguments:[i.object(m(t).lock_manager_id),i.object(m(t).xtoken_manager_id),n,i.pure(e.amount),i.pure(e.venft_id)]}),i}redeemLockPayload(e){const{xtoken:t}=this.sdk.sdkOptions,i=new C;return i.moveCall({target:`${t.published_at}::${Be}::redeem_lock`,typeArguments:[],arguments:[i.pure(m(t).lock_manager_id),i.pure(m(t).xtoken_manager_id),i.pure(e.venft_id),i.pure(e.amount),i.pure(e.lock_day),i.pure(v)]}),i}redeemPayload(e){const{xtoken:t}=this.sdk.sdkOptions,i=new C;return i.moveCall({target:`${t.published_at}::${Be}::redeem`,typeArguments:[],arguments:[i.pure(m(t).lock_manager_id),i.pure(m(t).xtoken_manager_id),i.pure(e.venft_id),i.pure(e.lock_id),i.pure(v)]}),i}redeemDividendPayload(e,t){const{xtoken_dividends:i}=this.sdk.sdkOptions,s=new C;return t.forEach(n=>{s.moveCall({target:`${i.published_at}::${kt}::redeem`,typeArguments:[n],arguments:[s.object(m(i).dividend_manager_id),s.object(e)]})}),s}redeemDividendV2Payload(e,t,i){const{xtoken_dividends:s}=this.sdk.sdkOptions;let n=new C;return t.filter(a=>i.includes(a)).length>0&&(n=this.redeemDividendXTokenPayload(e,n)),t.forEach(a=>{i.includes(a)||n.moveCall({target:`${s.published_at}::${kt}::redeem_v2`,typeArguments:[a],arguments:[n.object(m(s).dividend_manager_id),n.object(e),n.object(v)]})}),n}redeemDividendXTokenPayload(e,t){const{xtoken_dividends:i,xtoken:s}=this.sdk.sdkOptions,{xtoken_manager_id:n,lock_manager_id:o}=m(s),{dividend_manager_id:a}=m(i);return t=t===void 0?new C:t,t.moveCall({target:`${i.published_at}::${kt}::redeem_xtoken`,typeArguments:[],arguments:[t.object(o),t.object(n),t.object(a),t.object(e),t.object(v)]}),t}buileTokenCoinType(){return`${this.sdk.sdkOptions.token_faucet.package_id}::token::TOKEN`}buileXTokenCoinType(e=this._sdk.sdkOptions.xtoken.package_id,t="xtoken",i="XTOKEN"){return`${e}::${t}::${i}`}cancelRedeemPayload(e){const{xtoken:t}=this.sdk.sdkOptions,i=new C;return i.moveCall({target:`${t.published_at}::${Be}::cancel_redeem_lock`,typeArguments:[],arguments:[i.pure(m(t).lock_manager_id),i.pure(m(t).xtoken_manager_id),i.pure(e.venft_id),i.pure(e.lock_id),i.pure(v)]}),i}async getInitConfigs(){var a,c;const{package_id:e}=this.sdk.sdkOptions.xtoken,t=`${e}_getInitFactoryEvent`,i=this.getCache(t);if(i!==void 0)return i;const s=(a=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::xtoken::InitEvent`}))==null?void 0:a.data,n={xtoken_manager_id:"",lock_manager_id:"",lock_handle_id:""};s.length>0&&s.forEach(d=>{const l=d.parsedJson;l&&(n.xtoken_manager_id=l.xtoken_manager)});const o=(c=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::locking::InitializeEvent`}))==null?void 0:c.data;return o.length>0&&o.forEach(d=>{const l=d.parsedJson;l&&(n.lock_manager_id=l.lock_manager)}),n.lock_handle_id=(await this.getLockUpManager(n.lock_manager_id)).lock_infos.lock_handle_id,this.updateCache(t,n,D),n}async getLockUpManager(e=m(this.sdk.sdkOptions.xtoken).lock_manager_id,t=!1){const i=`${e}_getLockUpManagerEvent`,s=this.getCache(i,t);if(s!==void 0)return s;const n=await this.sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),o=Ie.buildLockUpManager(x(n));return this.updateCache(i,o,D),o}async getLockInfoHandle(e){const t=`${e}_getLockInfoHandle`,i=this.getCache(t);if(i!==void 0)return i;let s="";const n=await this.sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),o=x(n);return o&&(s=o.lock_infos.fields.id.id,this.updateCache(t,s,D)),s}async getDividendConfigs(){var o;const{package_id:e}=this.sdk.sdkOptions.xtoken_dividends,t=`${e}_getDividendManagerEvent`,i=this.getCache(t);if(i!==void 0)return i;const s=(o=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::dividend::InitEvent`}))==null?void 0:o.data,n={dividend_manager_id:"",dividend_admin_id:"",dividend_settle_id:""};return s.length>0&&s.forEach(a=>{const c=a.parsedJson;c&&(n.dividend_manager_id=c.manager_id,n.dividend_admin_id=c.admin_id,n.dividend_settle_id=c.settle_id,this.updateCache(t,n,D))}),n}async getDividendManager(e=!1){const{dividend_manager_id:t}=m(this.sdk.sdkOptions.xtoken_dividends),i=`${t}_getDividendManager`,s=this.getCache(i,e);if(s!==void 0)return s;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=x(n),a=Ie.buildDividendManager(o);return this.updateCache(i,a,D),a}async getXcetusManager(e=!0){const{xtoken_manager_id:t}=m(this.sdk.sdkOptions.xtoken),i=`${t}_getXcetusManager`,s=this.getCache(i,e);if(s)return s;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=x(n),a={id:o.id.id,index:Number(o.index),has_venft:{handle:o.has_venft.fields.id.id,size:o.has_venft.fields.size},nfts:{handle:o.nfts.fields.id.id,size:o.nfts.fields.size},total_locked:o.total_locked,treasury:o.treasury.fields.total_supply.fields.value};return this.updateCache(i,a),a}async getVeNFTDividendInfo(e,t){try{const i=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}}),s=x(i);return Ie.buildVeNFTDividendInfo(s)}catch{return}}async redeemNum(e,t){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const i=await this.getLockUpManager(),s=u(se).mul(u(i.max_lock_day).sub(u(t))).mul(u(i.max_percent_numerator).sub(u(i.min_percent_numerator))).div(u(i.max_lock_day).sub(u(i.min_lock_day))),n=u(se).mul(u(i.max_percent_numerator)).sub(s).div(u(dt)).div(se);return{amountOut:u(n).mul(u(e)).round().toString(),percent:n.toString()}}async reverseRedeemNum(e,t){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const i=await this.getLockUpManager(),s=u(se).mul(u(i.max_lock_day).sub(u(t))).mul(u(i.max_percent_numerator).sub(u(i.min_percent_numerator))).div(u(i.max_lock_day).sub(u(i.min_lock_day))),n=u(se).mul(u(i.max_percent_numerator)).sub(s).div(u(dt)).div(se);return{amountOut:u(e).div(n).toFixed(0,$.ROUND_UP),percent:n.toString()}}async getLockXToken(e){const{lock_handle_id:t}=m(this._sdk.sdkOptions.xtoken),i=`${e}_getXTokenAmount`,s=this.getCache(i);if(s)return s;try{const n=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:t,name:{type:"0x2::object::ID",value:e}}),o=x(n);if(o){const a=o.value.fields.value.fields;return this.updateCache(i,a,D),a}}catch{}}async getVeNftAmount(e,t){try{const i=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}}),s=x(i);if(s){const{lock_amount:n,xtoken_amount:o}=s.value.fields.value.fields;return{lock_amount:n,xtoken_amount:o}}}catch{}return{lock_amount:"0",xtoken_amount:"0"}}async getPhaseDividendInfo(e,t=!1){const s=(await this.getDividendManager()).dividends.id,n=`${s}_${e}_getPhaseDividendInfo`,o=this._sdk.getCache(n,t);if(o)return o;try{const a=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:s,name:{type:"u64",value:e}}),c=x(a),d=c.value.fields.value.fields,l=d.redeemed_num.fields.contents.map(b=>({name:b.fields.key.fields.name,value:b.fields.value})),p=d.bonus_types.map(b=>b.fields.name),h=d.bonus.fields.contents.map(b=>({name:b.fields.key.fields.name,value:b.fields.value})),g={id:Xe(a),phase:c.name,settled_num:d.settled_num,register_time:d.register_time,redeemed_num:l,is_settled:d.is_settled,bonus_types:p,bonus:h,phase_end_time:""};return this.updateCache(n,g),g}catch{}}updateCache(e,t,i=be){let s=this._cache[e];s?(s.overdueTime=X(i),s.value=t):s=new we(t,X(i)),this._cache[e]=s}getCache(e,t=!1){const i=this._cache[e];if(!t&&(i!=null&&i.isValid()))return i.value;delete this._cache[e]}},yo=class{constructor(e){q(this,"_sdk");q(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async addMasterLiquidity(e){var O,T;const{liquidity_stratefy:t}=this._sdk.sdkOptions,{clmm_pool:i}=this._sdk.ClmmSDK.sdkOptions,s=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress);let n=u(0),o=u(0);const a=[],c=[],d=[],l=[],p=[];e.liquidity_bins.forEach((y,B)=>{const U=e.amounts_a[B],K=e.amounts_b[B],de=e.bins_fix_amount_a[B];n=n.add(U),o=o.add(K),a.push(U),c.push(K),d.push(Ze(BigInt(y.tick_lower)).toString()),l.push(Ze(BigInt(y.tick_upper)).toString()),p.push(de)});const h=[e.coinTypeA,e.coinTypeB],g=new C,b=(O=W.buildAddLiquidityFixTokenCoinInput(g,!e.fix_amount_a,n.toString(),e.slippage,e.coinTypeA,s,!1))==null?void 0:O.targetCoin,I=(T=W.buildAddLiquidityFixTokenCoinInput(g,e.fix_amount_a,o.toString(),e.slippage,e.coinTypeB,s,!1))==null?void 0:T.targetCoin;return po(e)?g.moveCall({target:`${t.published_at}::router::increase_liquidity`,typeArguments:h,arguments:[g.object(m(t).master_manger_id),g.object(e.master_address),g.object(m(i).global_config_id),g.object(e.pool_address),b,I,g.makeMoveVec({type:"u64",objects:a.map(y=>g.pure(y,"u64"))}),g.makeMoveVec({type:"u64",objects:c.map(y=>g.pure(y,"u64"))}),g.makeMoveVec({type:"bool",objects:p.map(y=>g.pure(y,"bool"))}),g.object(v)]}):g.moveCall({target:`${t.published_at}::router::create_master_liquidity`,typeArguments:h,arguments:[g.object(m(t).master_manger_id),g.object(m(i).global_config_id),g.object(e.pool_address),b,I,g.makeMoveVec({type:"u32",objects:d.map(y=>g.pure(y,"u32"))}),g.makeMoveVec({type:"u32",objects:l.map(y=>g.pure(y,"u32"))}),g.makeMoveVec({type:"u64",objects:a.map(y=>g.pure(y,"u64"))}),g.makeMoveVec({type:"u64",objects:c.map(y=>g.pure(y,"u64"))}),g.makeMoveVec({type:"bool",objects:p.map(y=>g.pure(y,"bool"))}),g.pure(e.strategy),g.pure(Ze(BigInt(e.tick_lower)).toString()),g.pure(Ze(BigInt(e.tick_upper)).toString()),g.object(v)]}),g}buildMasterNFTType(){return`${this._sdk.sdkOptions.liquidity_stratefy.package_id}::master_liquidity::MasterLiquidity`}async getMasterNFTList(e,t=[]){const i=[],s=await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0},filter:{Package:this._sdk.sdkOptions.liquidity_stratefy.package_id}}),n=t.length>0;for(const o of s.data)if(S(o.data.type).full_address===this.buildMasterNFTType()){const c=pe.buildMasterNFT(o);if(c){const d=`${c.id}_masterNFT`;this.updateCache(d,c,D),n?t.includes(c.pool_id)&&i.push(c):i.push(c)}}return i}async getMasterNFT(e,t=!1){const i="$masterId}_masterNFT",s=this.getCache(i,t);if(s)return s;try{const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}});if(S(n.data.type).full_address===this.buildMasterNFTType()){const a=pe.buildMasterNFT(n);return a&&this.updateCache(i,a,D),a}}catch(n){console.log(n)}}async fetchMasterPositionInfos(e){var c;const t={},{clmm_pool:i,integrate:s,simulationAccount:n}=this.sdk.ClmmSDK.sdkOptions,o=new C;return e.forEach(d=>{d.position_ids.forEach(l=>{const p=[d.coinTypeA,d.coinTypeB],h=[o.object(m(i).global_config_id),o.object(d.pool_id),o.object(l)];o.moveCall({target:`${s.published_at}::${Ke}::fetch_position_fees`,arguments:h,typeArguments:p}),o.moveCall({target:`${s.published_at}::${Ke}::fetch_position_rewards`,arguments:[...h,o.object(v)],typeArguments:p})})}),(c=(await this.sdk.ClmmSDK.fullClient.devInspectTransactionBlock({transactionBlock:o,sender:n.address})).events)==null||c.forEach(d=>{const{parsedJson:l}=d,{position_id:p}=l;let h=t[p];switch(h===void 0&&(h={position_id:p,feeOwedA:"0",feeOwedB:"0",rewarders:[]},t[p]=h),S(d.type).name){case"FetchPositionFeesEvent":h.feeOwedA=l.fee_owned_a,h.feeOwedB=l.fee_owned_b;break;case"FetchPositionRewardsEvent":h.rewarders=l.data;break}}),t}async getLiquidityStrategyConfigs(e=!1){const{package_id:t}=this._sdk.sdkOptions.liquidity_stratefy,i=`${t}_getLiquidityStrategyConfigst`,s=this.getCache(i,e);if(s!==void 0)return s;const n=(await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${t}::master_liquidity::MasterLiquidityManagerCreatedEvent`})).data,o={master_manger_id:"",master_liquidity_handle:""};if(n.length>0){for(const a of n){const c=a.parsedJson;o.master_manger_id=c.id;const d=await this._sdk.ClmmSDK.fullClient.getObject({id:c.id,options:{showContent:!0}}),l=x(d);o.master_liquidity_handle=l.position_maps.fields.id.id;break}this.updateCache(i,o,D)}return o}removeMasterLiquidity(e){const{clmm_pool:t}=this.sdk.ClmmSDK.sdkOptions,{liquidity_stratefy:i}=this.sdk.sdkOptions,s=new C,n=[e.coinTypeA,e.coinTypeB];this.collectReward({coinTypeA:e.coinTypeA,coinTypeB:e.coinTypeB,collect_fee:!1,rewarder_coin_types:e.rewarder_coin_types,master_address:e.master_address,pool_address:e.pool_address},s);const o=[s.object(m(i).master_manger_id),s.object(e.pool_address),s.object(e.master_address),s.object(m(t).global_config_id),s.makeMoveVec({type:"u128",objects:e.delta_liquidities.map(a=>s.pure(a,"u128"))}),s.makeMoveVec({type:"u64",objects:e.min_amounts_a.map(a=>s.pure(a,"u64"))}),s.makeMoveVec({type:"u64",objects:e.min_amounts_b.map(a=>s.pure(a,"u64"))}),s.object(v)];return s.moveCall({target:`${i.published_at}::${st}::remove_liquidity`,typeArguments:n,arguments:o}),s}closeMasterLiquidity(e){const{clmm_pool:t}=this.sdk.ClmmSDK.sdkOptions,{liquidity_stratefy:i}=this.sdk.sdkOptions,s=new C,n=[e.coinTypeA,e.coinTypeB];return this.collectReward({coinTypeA:e.coinTypeA,coinTypeB:e.coinTypeB,collect_fee:!1,rewarder_coin_types:e.rewarder_coin_types,master_address:e.master_address,pool_address:e.pool_address},s),s.moveCall({target:`${i.published_at}::${st}::close_master_liquidity`,typeArguments:n,arguments:[s.object(m(i).master_manger_id),s.object(e.master_address),s.object(m(t).global_config_id),s.object(e.pool_address),s.makeMoveVec({type:"u64",objects:e.min_amounts_a.map(o=>s.pure(o,"u64"))}),s.makeMoveVec({type:"u64",objects:e.min_amounts_b.map(o=>s.pure(o,"u64"))}),s.object(v)]}),s}collectFee(e,t){const{clmm_pool:i}=this.sdk.ClmmSDK.sdkOptions,{liquidity_stratefy:s}=this.sdk.sdkOptions;t=t===void 0?new C:t;const n=[e.coinTypeA,e.coinTypeB],o=[t.object(m(s).master_manger_id),t.object(e.master_address),t.object(m(i).global_config_id),t.object(e.pool_address)];return t.moveCall({target:`${s.published_at}::${st}::collect_fee`,typeArguments:n,arguments:o}),t}collectReward(e,t){const{clmm_pool:i}=this.sdk.ClmmSDK.sdkOptions,{liquidity_stratefy:s}=this.sdk.sdkOptions;return t=t===void 0?new C:t,e.collect_fee&&this.collectFee({...e},t),e.rewarder_coin_types.forEach(n=>{const o=[e.coinTypeA,e.coinTypeB,n];if(t){const a=[t.object(m(s).master_manger_id),t.object(e.master_address),t.object(m(i).global_config_id),t.object(e.pool_address),t.object(m(i).global_vault_id),t.object(v)];t.moveCall({target:`${s.published_at}::${st}::collect_reward`,typeArguments:o,arguments:a})}}),t}updateCache(e,t,i=be){let s=this._cache[e];s?(s.overdueTime=X(i),s.value=t):s=new we(t,X(i)),this._cache[e]=s}getCache(e,t=!1){const i=this._cache[e],s=i==null?void 0:i.isValid();if(!t&&s)return i.value;s||delete this._cache[e]}},ko=class{constructor(e){q(this,"_sdk");q(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}buildCoinInput(e,t,i,s,n){const{selectedCoins:o,remainingCoins:a}=Oe.selectCoinAssetGreaterThanOrEqual(t,BigInt(s)),c=Oe.calculateTotalBalance(o);if(c<BigInt(s))throw new Error(`The amount(${c}) is Insufficient balance for ${i} , expect ${s} `);const d=c-BigInt(s);let l;if(Oe.isSuiCoin(i))l=e.splitCoins(e.gas,[e.pure(s)]);else{const[p,...h]=o.map(g=>g.coinObjectId);l=e.object(p),h.length>0?n?e.mergeCoins(l,[...h.map(g=>e.object(g)),n]):e.mergeCoins(l,[...h.map(g=>e.object(g))]):n&&e.mergeCoins(l,[n])}return{selectedUnusedAmount:d,coinInput:l,remainingCoins:a}}async deposit(e){var d,l;console.log("1110 deposit 参数: ",{params:e});const{vaults:t}=this._sdk.sdkOptions,{clmm_pool:i}=this._sdk.ClmmSDK.sdkOptions,s=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress),n=new C;let o,a;if(e.swapParams){const p=await this.handleDepositSwap(e,n,s);o=p.primaryCoinAInputs,a=p.primaryCoinBInputs}else o=(d=W.buildAddLiquidityFixTokenCoinInput(n,!e.fix_amount_a,e.amount_a,e.slippage,e.coinTypeA,s,!1))==null?void 0:d.targetCoin,a=(l=W.buildAddLiquidityFixTokenCoinInput(n,e.fix_amount_a,e.amount_b,e.slippage,e.coinTypeB,s,!1))==null?void 0:l.targetCoin;const c=e.rewarder_coin_types?e.rewarder_coin_types.length:0;if(c>0){const p=["deposit_with_one","deposit_with_two","deposit_with_three"];n.moveCall({target:`${t.published_at}::${bt}::${p[c-1]}`,typeArguments:[e.coinTypeA,e.coinTypeB,...e.rewarder_coin_types,e.lp_token_type],arguments:[n.object(m(t).vaults_manager_id),n.object(e.vault_id),n.object(m(i).global_config_id),n.object(e.clmm_pool),n.object(m(i).global_vault_id),o,a,n.pure(e.amount_a),n.pure(e.amount_b),n.pure(e.fix_amount_a),n.object(v)]})}else n.moveCall({target:`${t.published_at}::${bt}::deposit`,typeArguments:[e.coinTypeA,e.coinTypeB,e.lp_token_type],arguments:[n.object(m(t).vaults_manager_id),n.object(e.vault_id),n.object(m(i).global_config_id),n.object(e.clmm_pool),o,a,n.pure(e.amount_a),n.pure(e.amount_b),n.pure(e.fix_amount_a),n.object(v)]});return n}async handleDepositSwap(e,t,i){const{clmm_pool:s,integrate:n}=this._sdk.ClmmSDK.sdkOptions,{swap_amount:o,a2b:a,route_obj:c}=e.swapParams,d=a?e.coinTypeA:e.coinTypeB,l=W.buildCoinForAmount(t,i,BigInt(o),d,!1),p=BigInt(l.tragetCoinAmount)-BigInt(o),h=W.buildCoinForAmount(t,i,0n,a?e.coinTypeB:e.coinTypeA,!1);let g=[];if(c){const y=await W.buildAggregatorSwapReturnCoins(this._sdk.ClmmSDK,c,l,h,"",e.slippage,t);g=a?[y.fromCoin,y.toCoin]:[y.toCoin,y.fromCoin],h.isMintZeroCoin||t.transferObjects([h.targetCoin],t.pure(this._sdk.ClmmSDK.senderAddress))}else{const y=Gt.getDefaultSqrtPriceLimit(a).toString();g=t.moveCall({target:`${n.published_at}::${Xt}::swap`,typeArguments:[e.coinTypeA,e.coinTypeB],arguments:[t.object(m(s).global_config_id),t.object(e.clmm_pool),a?l.targetCoin:h.targetCoin,a?h.targetCoin:l.targetCoin,t.pure(a),t.pure(!0),t.pure(o),t.pure(y),t.pure(!1),t.object(v)]})}let b,I;const O=g[0],T=g[1];if(a){const y=BigInt(e.amount_a)-p;Oe.isSuiCoin(d)?(t.transferObjects([O],t.pure(this._sdk.ClmmSDK.senderAddress)),b=t.splitCoins(t.gas,[t.pure(e.amount_a)])):y>0n?b=this.buildCoinInput(t,l.remainCoins,d,y,O).coinInput:b=O,I=T}else{b=O;const y=BigInt(e.amount_b)-p;Oe.isSuiCoin(d)?(t.transferObjects([T],t.pure(this._sdk.ClmmSDK.senderAddress)),I=t.splitCoins(t.gas,[t.pure(e.amount_b)])):y>0n?I=this.buildCoinInput(t,l.remainCoins,d,y,T).coinInput:I=T}return{primaryCoinAInputs:b,primaryCoinBInputs:I}}async remove(e){console.log({params:e});const{vaults:t}=this.sdk.sdkOptions,{clmm_pool:i,integrate:s}=this._sdk.ClmmSDK.sdkOptions,n=new C,o=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,e.lp_token_type),a=W.buildCoinForAmount(n,o,BigInt(e.lp_token_amount),e.lp_token_type,!1).targetCoin,c=[e.coinTypeA,e.coinTypeB,e.lp_token_type],d=e.rewarder_coin_types.length;if(d>0){const l=["remove_with_one","remove_with_two","remove_with_three"];n.moveCall({target:`${t.published_at}::${bt}::${l[d-1]}`,typeArguments:[e.coinTypeA,e.coinTypeB,...e.rewarder_coin_types,e.lp_token_type],arguments:[n.object(m(t).vaults_manager_id),n.object(e.vault_id),n.object(m(i).global_config_id),n.object(e.clmm_pool),n.object(m(i).global_vault_id),a,n.pure(e.lp_token_amount),n.pure(e.min_amount_a),n.pure(e.min_amount_b),n.object(v)]})}else{const l=n.moveCall({target:`${t.published_at}::${mo}::remove`,typeArguments:c,arguments:[n.object(m(t).vaults_manager_id),n.object(e.vault_id),n.object(m(i).global_config_id),n.object(e.clmm_pool),a,n.pure(e.lp_token_amount),n.pure(e.min_amount_a),n.pure(e.min_amount_b),n.object(v)]}),p=l[0],h=l[1];if(e.swapParams){const{a2b:g,swap_amount:b,route_obj:I}=e.swapParams;if(I){const O={targetCoin:g?p:h,remainCoins:[],isMintZeroCoin:!1,tragetCoinAmount:""},T={targetCoin:g?h:p,remainCoins:[],isMintZeroCoin:!1,tragetCoinAmount:""},y=await W.buildAggregatorSwapReturnCoins(this._sdk.ClmmSDK,I,O,T,"",e.slippage,n),B=g?[y.fromCoin,y.toCoin]:[y.toCoin,y.fromCoin];n.moveCall({target:"0x2::coin::destroy_zero",arguments:[y.fromCoin],typeArguments:[g?e.coinTypeA:e.coinTypeB]}),g?(n.mergeCoins(B[1],[h]),n.transferObjects([B[1]],n.pure(this._sdk.ClmmSDK.senderAddress))):(n.mergeCoins(B[0],[p]),n.transferObjects([B[0]],n.pure(this._sdk.ClmmSDK.senderAddress)))}else{const O=Gt.getDefaultSqrtPriceLimit(g).toString(),T=n.moveCall({target:`${s.published_at}::${Xt}::swap`,typeArguments:[e.coinTypeA,e.coinTypeB],arguments:[n.object(m(i).global_config_id),n.object(e.clmm_pool),p,h,n.pure(g),n.pure(!0),n.pure(b),n.pure(O),n.pure(!0),n.object(v)]});n.transferObjects([T[0],T[1]],n.pure(this._sdk.ClmmSDK.senderAddress))}}else n.transferObjects([p,h],n.pure(this._sdk.ClmmSDK.senderAddress))}return n}async getVaultList(e="all"){const{vaults:t}=this._sdk.sdkOptions,i=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${t.package_id}::vaults::CreateEvent`},e),s=i.data.map(a=>a.parsedJson.id),n=await this._sdk.ClmmSDK.fullClient.batchGetObjects(s,{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}),o=[];return n.forEach(a=>{const c=me.buildPool(a);c&&(this.savePoolToCache(c),o.push(c))}),i.data=o,i}savePoolToCache(e){const t=`${e.id}_mirrorPool`;this.updateCache(t,e,D)}readPoolFromCache(e,t=!1){const i=`${e}_mirrorPool`;return this.getCache(i,t)}async calculateMaxAvailable(e){var O;const{integrate:t,simulationAccount:i}=this.sdk.ClmmSDK.sdkOptions,s=new C,n=N.tickIndexToSqrtPriceX64(e.lowerTick),o=N.tickIndexToSqrtPriceX64(e.upperTick),a=new P(e.curSqrtPrice),c=ie.getCoinAmountFromLiquidity(new P(e.input_amount),a,n,o,!1),d=[e.coinTypeA,e.coinTypeB];s.moveCall({target:`${t.published_at}::${Ke}::calculate_swap_result`,arguments:[s.object(e.clmm_pool),s.pure(!0),s.pure(!0),s.pure(c.coinA.toString())],typeArguments:d}),s.moveCall({target:`${t.published_at}::${Ke}::calculate_swap_result`,arguments:[s.object(e.clmm_pool),s.pure(!1),s.pure(!0),s.pure(c.coinB.toString())],typeArguments:d});const p=(O=(await this.sdk.ClmmSDK.fullClient.devInspectTransactionBlock({transactionBlock:s,sender:i.address})).events)==null?void 0:O.filter(T=>S(T.type).name==="CalculatedSwapResultEvent");if(p.length===0)return null;const h=p[0].parsedJson.data,g=p[1].parsedJson.data,b=u(c.coinB.toString()).add(h.amount_out),I=u(c.coinA.toString()).add(g.amount_out);return{maxAmountB:b,maxAmountA:I}}async calculateRemoveSwapAmount(e,t){const i=me.calculateDepositRatio(e.lowerTick,e.upperTick,new P(e.curSqrtPrice)),s=e.fix_amount_a?i.ratioA:i.ratioB;console.log({fixRatio:s});let n=u(e.receive_amount).mul(s),o,a;if(e.removeLiquidity){const O=N.tickIndexToSqrtPriceX64(e.lowerTick),T=N.tickIndexToSqrtPriceX64(e.upperTick),y=ie.getCoinAmountFromLiquidity(new P(e.removeLiquidity),new P(e.curSqrtPrice),O,T,!1);a=e.removeLiquidity,o=e.fix_amount_a?y.coinB.toString():y.coinA.toString(),n=e.fix_amount_a?u(y.coinA.toString()):u(y.coinB.toString())}else{const O=ie.estLiquidityAndcoinAmountFromOneAmounts(e.lowerTick,e.upperTick,new P(n.toFixed(0)),e.fix_amount_a,!1,.2,new P(e.curSqrtPrice));a=O.liquidityAmount.toString(),o=e.fix_amount_a?O.coinAmountB.toString():O.coinAmountA.toString()}console.log({fixAmount:n,otherSideAmount:o});const c=!e.fix_amount_a,d=await this.clmmPreSwap(e.clmm_pool,e.curSqrtPrice,c,u(o),e.coinTypeA,e.coinTypeB,!0,e.priceSplitPoint,e.use_route,[{pool_id:e.clmm_pool,tick_lower:e.lowerTick,tick_upper:e.upperTick,delta_liquidity:Number(a),is_increase:!1}]);console.log({data:d,range:t});const l=n.add(d.amount_out),p=u(e.receive_amount),h=p.sub(l);if(console.log(`实际得到: ${l.toString()} , 期望得到: ${e.receive_amount}, 剩余: ${h.toString()} `),(!e.removeLiquidity||e.removeLiquidity&&t)&&h.abs().greaterThan(p.mul(.01))){const O=l.lessThan(p);let T,y;t?O?(T=u(a),y=t.right):(T=t.left,y=u(a)):(T=O?u(a):u(0),y=O?u(e.maxLiquidity):u(a));const B=u(T).add(y).div(2).toFixed(0);if(console.log({left:T.toString(),right:y.toString(),midLiquidity:B.toString()}),!t||t&&t.count<15&&T<y)return await this.calculateRemoveSwapAmount({...e,removeLiquidity:B},{left:T,right:y,count:t?t.count+1:0})}const g=d.amount_in&&d.fee_amount?new P(d.amount_in).add(new P(d.fee_amount)).toString():d.amount_in,b=d.amount_out,{is_exceed:I}=d;return{swapInAmount:g,swapOutAmount:b,liquidity:a,is_exceed:I,routeObj:d.route_obj,request_id:e.request_id}}async calculateDepositSwapAmount(e,t=!1){const i=N.sqrtPriceX64ToTickIndex(new P(e.curSqrtPrice));console.log("1110 calculateDepositSwapAmount params: ",{...e,currentTick:i,adjustBestAmount:t});const{ratioA:s,ratioB:n}=me.calculateDepositRatio(e.lowerTick,e.upperTick,new P(e.curSqrtPrice)),o=u(e.input_amount).mul(e.fix_amount_a?s:n);let a=u(e.input_amount).sub(o);console.log("1110 ",{fixAmount:o.toString(),swapAmount:a.toString()});const c=e.fix_amount_a;if(a.toFixed(0)==="0")return null;const d=i<e.lowerTick||i>e.upperTick,l={clmm_pool:e.clmm_pool,curSqrtPrice:e.curSqrtPrice,a2b:c,amount_a:c?new $(e.input_amount):new $(0),amount_b:c?new $(0):new $(e.input_amount),amount_left:c?new $(a.toFixed(0)):new $(0),amount_right:c?new $(e.input_amount):new $(a.toFixed(0)),lowerTick:e.lowerTick,upperTick:e.upperTick,tick_spacing:2,coinTypeA:e.coinTypeA,coinTypeB:e.coinTypeB,useRoute:e.use_route,remainRate:e.remainRate?e.remainRate:.01,priceSplitPoint:e.priceSplitPoint},p=t&&i<=e.upperTick;let h=p?await this.calculateRebalance(l):await this.clmmPreSwap(e.clmm_pool,e.curSqrtPrice,c,a,e.coinTypeA,e.coinTypeB,!0,e.priceSplitPoint,e.use_route),g=h.after_sqrt_price;const b=N.sqrtPriceX64ToTickIndex(new P(g));console.log("1110 首次计算 结果: ",{...h,currentTick:b},null,2);const I=b<e.lowerTick||b>e.upperTick;if(d!==I&&!p&&b<=e.upperTick){console.log("1110 区间发生变化, 再次进行swap: ");const{ratioA:ee,ratioB:le}=me.calculateDepositRatio(e.lowerTick,e.upperTick,new P(g));console.log("1110 ",{newAfterRatioA:ee,newAfterRatioB:le}),a=u(e.input_amount).sub(u(e.input_amount).mul(e.fix_amount_a?ee:le)),l.amount_left=c?new $(a.toFixed(0)):new $(0),l.amount_right=c?new $(e.input_amount):new $(a.toFixed(0)),h=await this.calculateRebalance(l),g=h.after_sqrt_price;const Ne=N.sqrtPriceX64ToTickIndex(new P(g));console.log("1110 再次计算变化后: ",{lowerTick:e.lowerTick,upperTick:e.upperTick,currentTick:Ne,afterSqrtPrice:g})}const{ratioA:O,ratioB:T}=me.calculateDepositRatio(e.lowerTick,e.upperTick,new P(g));console.log("1110 1",{afterRatioA:O,afterRatioB:T,data:h});let y=T.div(O).sub(n.div(s)).greaterThan("0");const B=h.amount_in&&h.fee_amount?new P(h.amount_in).add(new P(h.fee_amount)).toString():h.amount_in,U=h.amount_out,{is_exceed:K}=h;if(b<e.lowerTick)y=!0;else if(b>e.upperTick)y=!1;else{const ee=y===c?new P(u(e.input_amount).sub(B).toString()):new P(U),le=ie.estLiquidityAndcoinAmountFromOneAmounts(e.lowerTick,e.upperTick,ee,y,!0,0,new P(g)),Ne=le.coinAmountA,Ye=le.coinAmountB,Fe=u(e.fix_amount_a?Ne.toString():Ye.toString()).add(B);console.log("1110 实际消耗:",{preAmountTotal:Fe.toString(),fixAmountA:y}),Fe.greaterThanOrEqualTo(e.input_amount)&&(y=!y)}const de={swapInAmount:B,swapOutAmount:U,afterSqrtPrice:g,is_exceed:K,fixAmountA:y,routeObj:h.route_obj,request_id:e.request_id};return console.log(de),de}async calculateRebalance(e){const{clmm_pool:t,a2b:i,curSqrtPrice:s,amount_a:n,amount_b:o,lowerTick:a,upperTick:c,amount_left:d,amount_right:l,coinTypeA:p,coinTypeB:h,useRoute:g,priceSplitPoint:b,remainRate:I}=e,O=async(T,y,B)=>{const U=T.plus(y).div(2),K=await this.clmmPreSwap(t,s,i,U,p,h,!0,b,g);if(K.amount_out==="0")return K;if(K.after_sqrt_price||(K.after_sqrt_price=e.curSqrtPrice),K.is_exceed)return y=U,O(T,y,B+1);const de=i?n.sub(K.amount_in):n.add(K.amount_out),ee=i?o.add(K.amount_out):o.sub(K.amount_in),le=N.sqrtPriceX64ToTickIndex(new P(K.after_sqrt_price)),Ne=ie.estLiquidityAndcoinAmountFromOneAmounts(a,c,new P(de.toString()),!0,!0,1,new P(K.after_sqrt_price)),Ye=new $(Ne.coinAmountA.toString()),Fe=new $(Ne.coinAmountB.toString());if(console.log("1110 swap递归计算 ",{preRes:K,left:T.toString(),right:y.toString(),mid:U.toString(),afterPoolTickIndex:le,afterA:de.toString(),afterB:ee.toString(),usedA:Ye.toString(),usedB:toString(),count:B}),Ye.toString()!==de.toString())throw new Error("usedA does not match afterA");if(ee.lessThan(Fe))i?T=U:y=U;else{i?y=U:T=U;const lt=ee.sub(Fe),Vt=ee.mul(I);if(console.log("1110 剩余未使用amount ",{remainingB:lt.toString(),maxRemainingB:Vt.toString(),remainRate:I,count:B}),Vt.sub(lt).greaterThanOrEqualTo(0))return console.log("break"),{...K,remainingB:lt}}return T.greaterThan(y)||y.sub(T).lessThan(10)?K:O(T,y,B+1)};return d.greaterThanOrEqualTo(l)?O(new $(0),d,0):O(d,l,0)}async clmmPreSwap(e,t,i,s,n,o,a,c,d,l){var y;if(d)try{const B=await this._sdk.ClmmSDK.RouterV2.getBestRouter(i?n:o,i?o:n,Number(s.toFixed(0)),a,c,"",void 0,void 0,!0,!1,l);if(!B.result)throw new Error("route unavailable");const{result:U}=B;let K=t;return U.splitPaths.forEach(de=>{const ee=de.basePaths.find(le=>le.poolAddress.toLowerCase()===e.toLowerCase());ee&&(K=ee.afterSqrtPrice.toString())}),{amount_in:U.inputAmount.toString(),amount_out:U.outputAmount.toString(),after_sqrt_price:K,is_exceed:U.isExceed,route_obj:U}}catch{throw new Error("route unavailable")}const{integrate:p,simulationAccount:h}=this.sdk.ClmmSDK.sdkOptions,g=new C,b=[n,o],I=[g.pure(e),g.pure(i),g.pure(a),g.pure(s.toFixed(0))];g.moveCall({target:`${p.published_at}::${Ke}::calculate_swap_result`,arguments:I,typeArguments:b});const T=(y=(await this.sdk.ClmmSDK.fullClient.devInspectTransactionBlock({transactionBlock:g,sender:h.address})).events)==null?void 0:y.filter(B=>S(B.type).name==="CalculatedSwapResultEvent");return T.length===0?null:T[0].parsedJson.data}async getVault(e,t=!1){const i=this.readPoolFromCache(e,t);if(i)return i;try{const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}}),n=me.buildPool(s);if(n)return this.savePoolToCache(n),n}catch(s){console.log(s)}}async getVaultsConfigs(e=!1){const{package_id:t}=this._sdk.sdkOptions.vaults,i=`${t}_getMirrorPoolConfigs`,s=this.getCache(i,e);if(s!==void 0)return s;const n=(await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${t}::vaults::InitEvent`})).data,o={admin_cap_id:"",vaults_manager_id:"",vaults_pool_handle:""};if(n.length>0){for(const a of n){const c=a.parsedJson;o.admin_cap_id=c.admin_cap_id,o.vaults_manager_id=c.manager_id;const d=await this._sdk.ClmmSDK.fullClient.getObject({id:o.vaults_manager_id,options:{showContent:!0}}),l=x(d);o.vaults_pool_handle=l.vault_to_pool_maps.fields.id.id;break}this.updateCache(i,o,D)}return o}updateCache(e,t,i=be){let s=this._cache[e];s?(s.overdueTime=X(i),s.value=t):s=new we(t,X(i)),this._cache[e]=s}getCache(e,t=!1){const i=this._cache[e],s=i==null?void 0:i.isValid();if(!t&&s)return i.value;s||delete this._cache[e]}},To=class{constructor(e,t){q(this,"_cache",{});q(this,"_sdkOptions");q(this,"_launchpad");q(this,"_ido");q(this,"_xcetusModule");q(this,"_xtokenModule");q(this,"_boosterModule");q(this,"_makerModule");q(this,"_clmmSDK");q(this,"_liquidityStrategy");q(this,"_vaults");this._sdkOptions=e,this._clmmSDK=t,this._launchpad=new co(this),this._ido=new go(this),this._xcetusModule=new lo(this),this._xtokenModule=new fo(this),this._boosterModule=new ro(this),this._makerModule=new uo(this),this._vaults=new ko(this),this._liquidityStrategy=new yo(this),zi(this._sdkOptions)}get ClmmSDK(){return this._clmmSDK}get sdkOptions(){return this._sdkOptions}get Launchpad(){return this._launchpad}get Ido(){return this._ido}get XToken(){return this._xtokenModule}get XCetusModule(){return this._xcetusModule}get BoosterModule(){return this._boosterModule}get MakerModule(){return this._makerModule}get LiquidityStrategy(){return this._liquidityStrategy}get Vaults(){return this._vaults}updateCache(e,t,i=D){let s=this._cache[e];s?(s.overdueTime=X(i),s.value=t):s=new we(t,X(i)),this._cache[e]=s}getCache(e,t=!1){const i=this._cache[e];if(!t&&(i!=null&&i.isValid()))return i.value;delete this._cache[e]}};export{To as C,G as I,me as V,De as X,So as a};
