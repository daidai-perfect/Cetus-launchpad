import{a7 as Y}from"./entry.4c007e3b.js";import{u as Z,T as C,e as V,m as W}from"./pool.07e3ac18.js";import{D as a}from"./decimal.0bdeb344.js";import{c as K}from"./sha256.090e129e.js";const ro=Y("farms",{state:()=>({farmsPoolList:[],farmsPoolObj:{},farmsPoolListLoading:!1,cmmPoolInfoObj:{},farmsPositionObj:{},farmsLoadingObj:{},farmsUserUsd:{},farmsRewardObj:{},farmsPositionList:[],farmsAllPositionLoading:!1,myFarmsPoolList:[]}),getters:{getPoolStore(){return Z()}},actions:{async getFarmsPoolList(P){P||(this.farmsPoolListLoading=!0);try{const{data:m}=await fetch(`${K.Sui.api}/v2/sui/swap/count`).then(s=>s.json()),d=m.pools.filter(s=>s.stable_farming);console.log(d,"#farmsPoolsfarmsPools");const f=d.map(s=>{var S,t,o;let p=0;console.log(s,"#farmsPool");const j=s.coin_a.decimals,r=s.coin_b.decimals,n=C.tickIndexToPrice(s.stable_farming.effective_tick_lower,j,r).toString(),c=C.tickIndexToPrice(s.stable_farming.effective_tick_upper,j,r).toString();let e=[];s.rewarder&&s.rewarder.rewarder_coin&&s.rewarder.rewarder_coin.length>0&&(e=(t=(S=s.rewarder)==null?void 0:S.rewarder_coin)==null?void 0:t.map((i,_)=>({...i,amountDay:new a(i.amount_second).mul(new a(60*60*24)).toNumber(),rewarder_display:s.rewarder[`rewarder_display${_+1}`],rewarderApr:i.apr.replace("%","")})));let g=!1;s.stable_farming&&s.stable_farming.stable_rewarder.map(i=>{i.amount_second>0&&(g=!0)});const b=[];s.stable_farming.stable_rewarder.forEach(i=>{p+=Number(i.amount_second),i.amount_second>0&&b.push({emission_per_day:new a(i.amount_second).mul(60*60*24).toDP(2,a.ROUND_HALF_UP),reward_coin:i.coin=="0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI"?"0x2::sui::SUI":i.coin,symbol:i.symbol,allocate_point:Number(i.amount_second)>0?1:0})});const l=s.apr_24h.replace("%",""),u=s.rewarder&&s.rewarder.apr.replace("%","")||0;return console.log(l,u,"rewardApr####"),console.log(p,s,"##totalAllocatePoint"),{...s,clmm_pool_id:s.swap_account,effective_tick_lower:s.stable_farming.effective_tick_lower,effective_tick_upper:s.stable_farming.effective_tick_upper,fee:s.fee*100+"%",id:s.stable_farming.stable_farming_pool,rewarders:b,status:p>0?"Live":"Ended",minPrice:n,maxPrice:c,coinA:s.coin_a,coinB:s.coin_b,stableFarmingApr:s.stable_farming&&s.stable_farming.apr*100,rewarder:{...s.rewarder,rewardList:e},isStableFarming:g,is_display_rewarder:(o=s==null?void 0:s.rewarder)==null?void 0:o.is_display_rewarder,aprTotal:Number(l)+Number(u),apr:s.apr_24h.replace("%",""),clmmApr:Number(l)+Number(u)}});this.farmsPoolList=f,this.farmsPoolObj=Object.fromEntries(f.map(s=>[s.clmm_pool_id,{...s,address:s.clmm_pool_id}])),this.farmsPoolListLoading=!1,console.log(d,f,"farmsPools####")}catch(m){console.log("getFarmsPoolList error:",m);const f=await V("Sui").getLpList(),s=Object.fromEntries(f.map((n,c)=>[n.address,n]));console.log(s,"cmmLpObj##");const j=await W("Sui").getFramsPoolList();console.log("getFarmsPoolList:",j);const r=j.map(n=>{const c=s[n.clmm_pool_id];let e=0;const{tokensObj:g}=this.getPoolStore,b=n.rewarders.map(o=>{const i=o.reward_coin=="0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI"?"0x2::sui::SUI":o.reward_coin,_=g[i].decimals,O=g[i].symbol;e=e+Number(o.allocate_point);const x=new a(o.allocate_point).div(new a(o.total_allocate_point));return{...o,reward_coin:i,emission_per_day:Number(o.allocate_point)>0?new a(o.emission_per_second).mul(x).div(Math.pow(10,12)).mul(60*60*24).div(Math.pow(10,_)).toString():"0",symbol:O}}),l=c.coinA.decimals,u=c.coinB.decimals,S=C.tickIndexToPrice(n.effective_tick_lower,l,u).toString(),t=C.tickIndexToPrice(n.effective_tick_upper,l,u).toString();return console.log(e,"allocatePoint##"),{...n,minPrice:S,maxPrice:t,fee:c.fee*100+"%",coinA:c.coinA,coinB:c.coinB,rewarders:b,status:e>0?"Live":"Ended",stable_farming:{apr:0,tvl:0},coin_a:c.coinA,coin_b:c.coinB}});console.log("getFarmsPoolList",r),this.farmsPoolList=r,this.farmsPoolObj=Object.fromEntries(r.map(n=>[n.clmm_pool_id,{...n,address:n.clmm_pool_id}])),this.cmmPoolInfoObj=s,this.farmsPoolListLoading=!1}},async getPositionByPool(P,m,d){var S,t;this.farmsLoadingObj[m]=!0;const f=V("Sui"),s=W("Sui");console.log(P,m,"#account, poolAddress");const p=await s.getOwnedFramsPositionNFTList([this.farmsPoolObj[m].id],!0);console.log(p,"###result");const j=p==null?void 0:p.filter(o=>o.clmm_pool_id==m),r=await f.getPositionList(P,{address:{address:m}})||[],n=j.concat(r);console.log(j,r,"###farmingPositionList"),console.log(n,"###positionGroup");const c={},e={},g=[],b=await f.getPool(m);for(let o=0;o<n.length;o++){const i=n[o],_=this.farmsPoolObj[i.clmm_pool_id||i.pool];console.log(_,"##poolInfo");const O=_.coinA.decimals,x=_.coinB.decimals;let w,v;i.tick_lower_index==f.TickUtil.getMinIndex(Number(_.tick_spacing))?w="0":w=f.TickMath.tickIndexToPrice(Number(i.tick_lower_index),O,x).toString(),i.tick_upper_index==f.TickUtil.getMaxIndex(Number(_.tick_spacing))?v="∞":v=f.TickMath.tickIndexToPrice(Number(i.tick_upper_index),O,x).toString(),console.log(i,"#position.clmm_pool_id");let k;const L=C.sqrtPriceX64ToPrice(b.current_sqrt_price,O,x).toString();Number(L)>=Number(w)&&(v==="∞"||Number(L)<=Number(v))?k="Active":(Number(L)>Number(v)||Number(L)<Number(w))&&(k="Inactive");const A=f.getCoinAmountFromLiquidity({pool:b,position:i,roundUp:!1}),{RATES:E,tokensObj:H}=this.getPoolStore;console.log(E,"##cmmPoolStore");const D=((S=E[_.coin_a.address])==null?void 0:S.price)||"",I=((t=E[_.coin_a.address])==null?void 0:t.price)||"",M=new a(A.coinaAmount).div(Math.pow(10,O)),R=new a(A.coinbAmount).div(Math.pow(10,x)),T=new a(A.coinaAmount).div(Math.pow(10,O)).mul(D),F=new a(A.coinbAmount).div(Math.pow(10,x)).mul(I);let q=new a(0);const y=this.farmsPoolObj[i.clmm_pool_id];console.log("farmsPoolInfo:",y);const G=[];i.rewards&&i.rewards.length>0?(i.rewards.forEach((h,z)=>{var $;const B=h.rewarder_type=="0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI"?"0x2::sui::SUI":h.rewarder_type,J=H[B],Q=(($=E[B])==null?void 0:$.price)||0,X=new a(h.rewarder_amount).div(new a(Math.pow(10,J.decimals))),U=X.mul(new a(Q));e[i.clmm_pool_id]&&e[i.clmm_pool_id][i.id]?e[i.clmm_pool_id][i.id]=e[i.clmm_pool_id][i.id].add(U):e[i.clmm_pool_id]&&!e[i.clmm_pool_id][i.id]?(e[i.clmm_pool_id][i.id]={},e[i.clmm_pool_id][i.id]=U):(e[i.clmm_pool_id]={},e[i.clmm_pool_id][i.id]={},e[i.clmm_pool_id][i.id]=U),console.log(this.farmsRewardObj,"##farmsRewardObj"),q=q.add(U),(y.rewarders[z]||h.rewarder_amount>0)&&G.push({...h,rewarderAmount:X.toString(),rewarderAmountUsd:U.toString(),rewarderType:B})}),i.rewards=G):(i.rewards=[],this.farmsRewardObj[i.clmm_pool_id]={});let N;if(i.id){const h=T.add(F);c[i.clmm_pool_id]||(c[i.clmm_pool_id]={}),c[i.clmm_pool_id][i.id]=h}console.log(this.farmsUserUsd,"##this.farmsUserUsd"),g.push({...i,minPrice:w,maxPrice:v,positionUSD:T.add(F).toNumber(),clmmPool:i.clmm_pool_id||i.pool,positionStatus:k,positionSource:i.creator?"clmm":"farming",farmsPoolId:d,coinA:_.coinA,coinB:_.coinB,positionShare:N,amountAUsd:T,amountBUsd:F,amountA:M,amountB:R,positionRewardAmount:q})}const l={};Object.keys(e).forEach(o=>{l[o]={},l[o].amountUsd=new a(0),typeof e[o]=="object"&&Object.keys(e[o]).forEach(i=>{console.log(i,e[o][i],"#######375"),l[o].amountUsd=l[o].amountUsd.add(e[o][i])})});const u={};Object.keys(c).forEach(o=>{u[o]={},u[o].amount=new a(0),u[o].positionNum=0,typeof c[o]=="object"&&Object.keys(c[o]).forEach(i=>{u[o].amount=u[o].amount.add(c[o][i]),u[o].positionNum+=1})}),console.log("farmsUserUsd:",c),console.log(l,"##farmsRewardObjResult"),this.farmsRewardObj[m]={},this.farmsRewardObj={...this.farmsRewardObj,...l},this.farmsUserUsd[m]={},this.farmsUserUsd={...this.farmsUserUsd,...u},this.farmsPositionObj[m]=g,this.farmsLoadingObj[m]=!1,this.getMyFarms()},async getPositionByAllPool(P){var u,S;this.farmsAllPositionLoading=!0;const m=W("Sui"),d=V("Sui"),f=await m.getOwnedFramsPositionNFTList([],!0),s=await d.getPositionList(P,this.farmsPoolObj)||[];console.log(s,"###clmmPositionList");const p=f.concat(s);console.log(p,"##positionGroup");const j=[],r={},n={},c=p.map(t=>t.clmm_pool_id||t.pool),e=await d.getPools(Array.from(new Set(c)));console.log(e,"poolList:");for(let t=0;t<p.length;t++){const o=p[t],i=e.filter(N=>N.poolAddress==o.clmm_pool_id||N.poolAddress==o.pool)[0];console.log(i,e,"##pool");const _=d.getCoinAmountFromLiquidity({pool:i,position:o,roundUp:!1}),{RATES:O,tokensObj:x}=this.getPoolStore,w=this.farmsPoolObj[o.clmm_pool_id||o.pool],v=((u=O[w.coin_a.address])==null?void 0:u.price)||"",k=((S=O[w.coin_b.address])==null?void 0:S.price)||"",L=w.coin_a.decimals,A=w.coin_b.decimals,E=new a(_.coinaAmount).div(Math.pow(10,L)),H=new a(_.coinbAmount).div(Math.pow(10,A)),D=new a(_.coinaAmount).div(Math.pow(10,L)).mul(v),I=new a(_.coinbAmount).div(Math.pow(10,A)).mul(k);let M,R;o.tick_lower_index==d.TickUtil.getMinIndex(Number(w.tick_spacing))?M="0":M=d.TickMath.tickIndexToPrice(Number(o.tick_lower_index),L,A).toString(),o.tick_upper_index==d.TickUtil.getMaxIndex(Number(w.tick_spacing))?R="∞":R=d.TickMath.tickIndexToPrice(Number(o.tick_upper_index),L,A).toString();let T;const F=C.sqrtPriceX64ToPrice(i.current_sqrt_price,L,A).toString();Number(F)>=Number(M)&&(R==="∞"||Number(F)<=Number(R))?T="Active":(Number(F)>Number(R)||Number(F)<Number(M))&&(T="Inactive");let q;if(o.id){const N=D.add(I);n[o.clmm_pool_id]||(n[o.clmm_pool_id]={}),n[o.clmm_pool_id][o.id]=N}let y=new a(0);const G=[];if(o.rewards&&o.rewards.length>0){const N=this.farmsPoolObj[o.clmm_pool_id];console.log("farmsPoolInfo:",N),o.rewards.forEach((h,z)=>{var $;const B=h.rewarder_type=="0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI"?"0x2::sui::SUI":h.rewarder_type,J=x[B],Q=(($=O[B])==null?void 0:$.price)||0,X=new a(h.rewarder_amount).div(new a(Math.pow(10,J.decimals))),U=X.mul(new a(Q));r[o.clmm_pool_id]&&r[o.clmm_pool_id][o.id]?r[o.clmm_pool_id][o.id]=r[o.clmm_pool_id][o.id].add(U):r[o.clmm_pool_id]&&!r[o.clmm_pool_id][o.id]?(r[o.clmm_pool_id][o.id]={},r[o.clmm_pool_id][o.id]=U):(r[o.clmm_pool_id]={},r[o.clmm_pool_id][o.id]={},r[o.clmm_pool_id][o.id]=U),console.log(this.farmsRewardObj,"##farmsRewardObj"),y=y.add(U),(N.rewarders[z]||h.rewarder_amount>0)&&G.push({...h,rewarderAmount:X.toString(),rewarderAmountUsd:U.toString(),rewarderType:B})}),o.rewards=G}else o.rewards=[],this.farmsRewardObj[o.clmm_pool_id]={};j.push({...o,minPrice:M,maxPrice:R,positionUSD:D.add(I).toNumber(),clmmPool:o.clmm_pool_id||o.pool,positionStatus:T,positionSource:o.creator?"clmm":"farming",farmsPoolId:o.pool_id,coinA:w.coinA,coinB:w.coinB,soucrce:o.id?"farming":"clmm",positionShare:q,amountAUsd:D.toString(),amountBUsd:I.toString(),amountA:E.toString(),amountB:H.toString(),positionRewardAmount:y})}this.farmsPositionList=j;const g={};j.forEach(t=>{g[t.clmm_pool_id||t.pool]||(g[t.clmm_pool_id||t.pool]=[]),g[t.clmm_pool_id||t.pool].push(t)}),this.farmsPositionObj=g,this.farmsAllPositionLoading=!1,console.log(this.farmsPositionObj,"#farmingPositionList"),console.log(r,"##this.farmsRewardObj");const b={};Object.keys(r).forEach(t=>{console.log(r,t,"farmsRewardObj:"),b[t]={},b[t].amountUsd=new a(0),typeof r[t]=="object"&&Object.keys(r[t]).forEach(o=>{console.log(r[t][o].toString(),"#######375"),b[t].amountUsd=b[t].amountUsd.add(r[t][o]),console.log(b[t].amountUsd.toString(),"result[key].amountUsd.toString()")})});const l={};Object.keys(n).forEach(t=>{l[t]={},l[t].amount=new a(0),l[t].positionNum=0,typeof n[t]=="object"&&Object.keys(n[t]).forEach(o=>{l[t].amount=l[t].amount.add(n[t][o]),l[t].positionNum+=1})}),console.log("farmsUserUsd:",n),this.farmsRewardObj=b,this.farmsUserUsd=l,console.log(this.farmsRewardObj,"##this.farmsRewardObj"),this.getMyFarms()},getMyFarms(){const P=[];this.farmsPoolList.forEach(m=>{console.log(this.farmsPositionObj[m.clmm_pool_id],"this.this.farmsPositionObj[##");const d=this.farmsPositionObj[m.clmm_pool_id]&&this.farmsPositionObj[m.clmm_pool_id].filter(f=>f.positionSource=="farming");console.log(d,"getMyFarmsresult##"),d&&d.length>0&&P.push(m)}),this.myFarmsPoolList=P,console.log(P,"##myFarms")},setFarmsLoadingObj(P){this.farmsLoadingObj[P]=!0},logOut(){this.farmsPositionObj={},this.farmsUserUsd={},this.farmsRewardObj={},this.farmsPositionList=[],this.farmsAllPositionLoading=!1,this.myFarmsPoolList=[]}}});export{ro as u};
